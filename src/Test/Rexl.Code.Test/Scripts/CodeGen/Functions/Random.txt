`` Seeds := [ 0, -1, 1, 0x8000_0000_0000_0000L, 0x0001_0001, 0x0001_0001_0001_0001, 0xFFFF_FFFF, 0xFFFF_FFFF_0000_0000L, 0xDEAD_BEEF_DEAD_BEEFL, 0xBEEF_DEAD_BEEF_DEADL ]

RandomS.Uniform(Seeds)
RandomS.Uniform(Seeds, Wrap(-1))
RandomS.Uniform(Seeds, Wrap(0))
RandomS.Uniform(Seeds, 0, 1)
RandomS.Uniform(Seeds, 1, 0)
RandomS.Uniform(Seeds, 0, 100)
RandomS.Uniform(Seeds, 100, 0)
RandomS.Uniform(Seeds, 25, 125)
RandomS.Uniform(Seeds, 125, 25)
RandomS.Uniform(Seeds, 25, 125, Wrap(-1))
RandomS.Uniform(Seeds, 25, 125, Wrap(0))
RandomS.Uniform(Seeds, 0, 1, 3)
RandomS.Uniform(Seeds, 1, 0, 3)
RandomS.Uniform(Seeds, 0, 100, 3)
RandomS.Uniform(Seeds, 100, 0, 3)
RandomS.Uniform(Seeds, 25, 125, 3)
RandomS.Uniform(Seeds, 125, 25, 3)

`` Inf := 1.0/0.0;
`` NInf := -1.0/0.0;
`` NaN := 0.0/0.0;

RandomS.Uniform(0, -5, NaN)
RandomS.Uniform(0, NaN, 5)
RandomS.Uniform(0, NaN, NaN)
RandomS.Uniform(0, -5, NaN, 3)
RandomS.Uniform(0, NaN, 5, 3)
RandomS.Uniform(0, NaN, NaN, 3)

RandomS.Uniform(0, 0, Inf)
RandomS.Uniform(0, NInf, 0)
RandomS.Uniform(0, NInf, Inf)
RandomS.Uniform(0, Inf, NInf)
RandomS.Uniform(0, Inf, Inf)
RandomS.Uniform(0, NInf, NInf)
RandomS.Uniform(0, NInf, NaN)
RandomS.Uniform(0, Inf, NaN)
RandomS.Uniform(0, 0, Inf, 3)
RandomS.Uniform(0, NInf, 0, 3)
RandomS.Uniform(0, NInf, Inf, 3)
RandomS.Uniform(0, Inf, NInf, 3)
RandomS.Uniform(0, Inf, Inf, 3)
RandomS.Uniform(0, NInf, NInf, 3)
RandomS.Uniform(0, NInf, NaN, 3)
RandomS.Uniform(0, Inf, NaN, 3)
