:: { r: r8, sr: r8*, sqr: r8?*, T: { R: r8, QR: r8? }* }

TTest.OneSample(sr)
TTest.OneSample(sr, r)
TTest.OneSample(sqr)
TTest.OneSample(sqr, r)

TTest.TwoSample(sr, sr)
TTest.TwoSample(sr, sqr)
TTest.TwoSample(sqr, sr)
TTest.TwoSample(sqr, sqr)
TTest.TwoSample(sr, sr, equal_var: false)
TTest.TwoSample(sqr, sr, equal_var: true)

TTest.Paired(sr, sr)
TTest.Paired(sr, sqr)
TTest.Paired(sqr, sqr)

TTest.Paired(sqr, sr)
TTest.Paired(T, R, R)
TTest.Paired(T, R, QR)
TTest.Paired(T, QR, R)
TTest.Paired(T, QR, QR)
TTest.Paired(T, R + #, R)
TTest.Paired(T, R, QR + #)
TTest.Paired(T, QR + #, R)
TTest.Paired(T, QR + #, QR + #)
