**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[*]) to ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(12)<1> [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22] },
    { Sub: Ten<i1>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Mul: Ten<i1>(12)<1> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121] },
    { Div: Ten<i1>(12)<1> [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },
    { Min: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*], U:i1[*,*]) to ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [-4, -4, -4, -4]
           [-8, -8, -8, -8]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[*]) to ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(4)<1> [0, 2, 4, 6] },
    { Sub: Ten<i1>(4)<1> [0, 0, 0, 0] },
    { Mul: Ten<i1>(4)<1> [0, 1, 4, 9] },
    { Div: Ten<i1>(4)<1> [0, 1, 1, 1] },
    { Min: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i1>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[*]) to ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>(12)<1> [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] },
    { Sub: Ten<i1>(12)<1> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] },
    { Mul: Ten<i1>(12)<1> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11] },
    { Div: Ten<i1>(12)<1> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11] },
    { Min: Ten<i1>(12)<1> [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] },
    { Max: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Sub: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Mul: Ten<i1>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Div: Ten<i1>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i1>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Max: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>(12)<1> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] },
    { Sub: Ten<i1>(12)<1> [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] },
    { Mul: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Div: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Min: Ten<i1>(12)<1> [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },
    { Max: Ten<i1>(12)<1> [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>(12)<1> [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16] },
    { Sub: Ten<i1>(12)<1> [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6] },
    { Mul: Ten<i1>(12)<1> [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] },
    { Div: Ten<i1>(12)<1> [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2] },
    { Min: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5] },
    { Max: Ten<i1>(12)<1> [5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*], U:i1[*,*]) to ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[-5, -4, -3, -2]
           [-5, -4, -3, -2]
           [-5, -4, -3, -2]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>(12)<1> [-128, -127, -126, -125, -124, -123, -122, -121, -120, -119, -118, -117] },
    { Sub: Ten<i1>(12)<1> [-128, -127, -126, -125, -124, -123, -122, -121, -120, -119, -118, -117] },
    { Mul: Ten<i1>(12)<1> [0, -128, 0, -128, 0, -128, 0, -128, 0, -128, 0, -128] },
    { Div: Ten<i1>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i1>(12)<0> [-128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128] },
    { Max: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>(12)<1> [127, -128, -127, -126, -125, -124, -123, -122, -121, -120, -119, -118] },
    { Sub: Ten<i1>(12)<1> [-127, -126, -125, -124, -123, -122, -121, -120, -119, -118, -117, -116] },
    { Mul: Ten<i1>(12)<1> [0, 127, -2, 125, -4, 123, -6, 121, -8, 119, -10, 117] },
    { Div: Ten<i1>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<i1>(12)<0> [127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127] })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*]) to ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [4, 4, 4, 4]
           [8, 8, 8, 8]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 5, 3, 2]
           [0, 9, 5, 3]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*,*]) to ({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[0, 2, 4, 6]
           [8, 10, 12, 14]
           [16, 18, 20, 22]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 1, 4, 9]
           [16, 25, 36, 49]
           [64, 81, 100, 121]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*]) to ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [4, 4, 4, 4]
           [8, 8, 8, 8]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 5, 3, 2]
           [0, 9, 5, 3]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*]) to ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(3,0)<0,0> [] },
    { Sub: Ten<i1>(3,0)<0,0> [] },
    { Mul: Ten<i1>(3,0)<0,0> [] },
    { Div: Ten<i1>(3,0)<0,0> [] },
    { Min: Ten<i1>(3,0)<0,0> [] },
    { Max: Ten<i1>(3,0)<0,0> [] })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>(3,4)<4,1>
          [[-1, 0, 1, 2]
           [3, 4, 5, 6]
           [7, 8, 9, 10]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[1, 2, 3, 4]
           [5, 6, 7, 8]
           [9, 10, 11, 12]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, -1, -2, -3]
           [-4, -5, -6, -7]
           [-8, -9, -10, -11]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, -1, -2, -3]
           [-4, -5, -6, -7]
           [-8, -9, -10, -11]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[-1, -1, -1, -1]
           [-1, -1, -1, -1]
           [-1, -1, -1, -1]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>(3,4)<4,1>
          [[1, 2, 3, 4]
           [5, 6, 7, 8]
           [9, 10, 11, 12]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[-1, 0, 1, 2]
           [3, 4, 5, 6]
           [7, 8, 9, 10]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[1, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[-5, -4, -3, -2]
           [-1, 0, 1, 2]
           [3, 4, 5, 6]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 1, 1, 1]
           [1, 1, 2, 2]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*,*]) to ({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[-5, -4, -3, -2]
           [-1, 0, 1, 2]
           [3, 4, 5, 6]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 1, 1, 1]
           [1, 1, 2, 2]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>(3,4)<4,1>
          [[-128, -127, -126, -125]
           [-124, -123, -122, -121]
           [-120, -119, -118, -117]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[-128, -127, -126, -125]
           [-124, -123, -122, -121]
           [-120, -119, -118, -117]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, -128, 0, -128]
           [0, -128, 0, -128]
           [0, -128, 0, -128]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[-128, -128, -128, -128]
           [-128, -128, -128, -128]
           [-128, -128, -128, -128]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>(3,4)<4,1>
          [[127, -128, -127, -126]
           [-125, -124, -123, -122]
           [-121, -120, -119, -118]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[-127, -126, -125, -124]
           [-123, -122, -121, -120]
           [-119, -118, -117, -116]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 127, -2, 125]
           [-4, 123, -6, 121]
           [-8, 119, -10, 117]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[127, 127, 127, 127]
           [127, 127, 127, 127]
           [127, 127, 127, 127]]
    })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[*]) to ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(4)<1> [0, 2, 4, 6] },
    { Sub: Ten<i1>(4)<1> [0, 0, 0, 0] },
    { Mul: Ten<i1>(4)<1> [0, 1, 4, 9] },
    { Div: Ten<i1>(4)<1> [0, 1, 1, 1] },
    { Min: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i1>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*], U:i1[*,*]) to ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [-4, -4, -4, -4]
           [-8, -8, -8, -8]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[*]) to ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(4)<1> [0, 2, 4, 6] },
    { Sub: Ten<i1>(4)<1> [0, 0, 0, 0] },
    { Mul: Ten<i1>(4)<1> [0, 1, 4, 9] },
    { Div: Ten<i1>(4)<1> [0, 1, 1, 1] },
    { Min: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i1>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[*]) to ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>(4)<1> [-1, 0, 1, 2] },
    { Sub: Ten<i1>(4)<1> [1, 2, 3, 4] },
    { Mul: Ten<i1>(4)<1> [0, -1, -2, -3] },
    { Div: Ten<i1>(4)<1> [0, -1, -2, -3] },
    { Min: Ten<i1>(4)<1> [-1, -1, -1, -1] },
    { Max: Ten<i1>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Sub: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Mul: Ten<i1>(4)<0> [0, 0, 0, 0] },
    { Div: Ten<i1>(4)<0> [0, 0, 0, 0] },
    { Min: Ten<i1>(4)<1> [0, 0, 0, 0] },
    { Max: Ten<i1>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>(4)<1> [1, 2, 3, 4] },
    { Sub: Ten<i1>(4)<1> [-1, 0, 1, 2] },
    { Mul: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Div: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Min: Ten<i1>(4)<1> [0, 1, 1, 1] },
    { Max: Ten<i1>(4)<1> [1, 1, 2, 3] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>(4)<1> [5, 6, 7, 8] },
    { Sub: Ten<i1>(4)<1> [-5, -4, -3, -2] },
    { Mul: Ten<i1>(4)<1> [0, 5, 10, 15] },
    { Div: Ten<i1>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i1>(4)<1> [5, 5, 5, 5] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*], U:i1[*,*]) to ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[-5, -4, -3, -2]
           [-5, -4, -3, -2]
           [-5, -4, -3, -2]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>(4)<1> [-128, -127, -126, -125] },
    { Sub: Ten<i1>(4)<1> [-128, -127, -126, -125] },
    { Mul: Ten<i1>(4)<1> [0, -128, 0, -128] },
    { Div: Ten<i1>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<i1>(4)<0> [-128, -128, -128, -128] },
    { Max: Ten<i1>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>(4)<1> [127, -128, -127, -126] },
    { Sub: Ten<i1>(4)<1> [-127, -126, -125, -124] },
    { Mul: Ten<i1>(4)<1> [0, 127, -2, 125] },
    { Div: Ten<i1>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i1>(4)<0> [127, 127, 127, 127] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[*]) to ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*], U:i1[*,*]) to ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,0)<0,0> [] },
    { Sub: Ten<i1>(3,0)<0,0> [] },
    { Mul: Ten<i1>(3,0)<0,0> [] },
    { Div: Ten<i1>(3,0)<0,0> [] },
    { Min: Ten<i1>(3,0)<0,0> [] },
    { Max: Ten<i1>(3,0)<0,0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[*]) to ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[*]) to ({'  T':i1[*]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*], U:i1[*,*]) to ({'  T':i1[*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,0)<0,0> [] },
    { Sub: Ten<i1>(3,0)<0,0> [] },
    { Mul: Ten<i1>(3,0)<0,0> [] },
    { Div: Ten<i1>(3,0)<0,0> [] },
    { Min: Ten<i1>(3,0)<0,0> [] },
    { Max: Ten<i1>(3,0)<0,0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[*], U:i1[]) to ({'  T':i1[*]}, {'  U':i1[]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(0)<0> [] },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(12)<1> [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] },
    { Sub: Ten<i1>(12)<1> [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12] },
    { Mul: Ten<i1>(12)<1> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11] },
    { Div: Ten<i1>(12)<1> [0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i1>(12)<1> [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] },
    { Max: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[-1, 0, 1, 2]
           [3, 4, 5, 6]
           [7, 8, 9, 10]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[-1, -2, -3, -4]
           [-5, -6, -7, -8]
           [-9, -10, -11, -12]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, -1, -2, -3]
           [-4, -5, -6, -7]
           [-8, -9, -10, -11]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, -1, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[-1, -1, -1, -1]
           [-1, -1, -1, -1]
           [-1, -1, -1, -1]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(4)<1> [-1, 0, 1, 2] },
    { Sub: Ten<i1>(4)<1> [-1, -2, -3, -4] },
    { Mul: Ten<i1>(4)<1> [0, -1, -2, -3] },
    { Div: Ten<i1>(4)<1> [0, -1, 0, 0] },
    { Min: Ten<i1>(4)<1> [-1, -1, -1, -1] },
    { Max: Ten<i1>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>()<> [-2] },
    { Sub: Ten<i1>()<> [0] },
    { Mul: Ten<i1>()<> [1] },
    { Div: Ten<i1>()<> [1] },
    { Min: Ten<i1>()<> [-1] },
    { Max: Ten<i1>()<> [-1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>()<> [-1] },
    { Sub: Ten<i1>()<> [-1] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-1] },
    { Max: Ten<i1>()<> [0] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>()<> [0] },
    { Sub: Ten<i1>()<> [-2] },
    { Mul: Ten<i1>()<> [-1] },
    { Div: Ten<i1>()<> [-1] },
    { Min: Ten<i1>()<> [-1] },
    { Max: Ten<i1>()<> [1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>()<> [4] },
    { Sub: Ten<i1>()<> [-6] },
    { Mul: Ten<i1>()<> [-5] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-1] },
    { Max: Ten<i1>()<> [5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<0,0>
          [[4, 4, 4, 4]
           [4, 4, 4, 4]
           [4, 4, 4, 4]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[-6, -6, -6, -6]
           [-6, -6, -6, -6]
           [-6, -6, -6, -6]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[-5, -5, -5, -5]
           [-5, -5, -5, -5]
           [-5, -5, -5, -5]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[-1, -1, -1, -1]
           [-1, -1, -1, -1]
           [-1, -1, -1, -1]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>()<> [127] },
    { Sub: Ten<i1>()<> [127] },
    { Mul: Ten<i1>()<> [-128] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [-1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-1] },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>()<> [126] },
    { Sub: Ten<i1>()<> [-128] },
    { Mul: Ten<i1>()<> [-127] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-1] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Sub: Ten<i1>(12)<1> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11] },
    { Mul: Ten<i1>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Div: Ten<i1>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i1>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Max: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[0, -1, -2, -3]
           [-4, -5, -6, -7]
           [-8, -9, -10, -11]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Sub: Ten<i1>(4)<1> [0, -1, -2, -3] },
    { Mul: Ten<i1>(4)<0> [0, 0, 0, 0] },
    { Div: Ten<i1>(4)<0> [0, 0, 0, 0] },
    { Min: Ten<i1>(4)<1> [0, 0, 0, 0] },
    { Max: Ten<i1>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>()<> [-1] },
    { Sub: Ten<i1>()<> [1] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-1] },
    { Max: Ten<i1>()<> [0] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>()<> [0] },
    { Sub: Ten<i1>()<> [0] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [0] },
    { Max: Ten<i1>()<> [0] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>()<> [1] },
    { Sub: Ten<i1>()<> [-1] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [0] },
    { Max: Ten<i1>()<> [1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>()<> [5] },
    { Sub: Ten<i1>()<> [-5] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [0] },
    { Max: Ten<i1>()<> [5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[-5, -5, -5, -5]
           [-5, -5, -5, -5]
           [-5, -5, -5, -5]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>()<> [-128] },
    { Sub: Ten<i1>()<> [-128] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [0] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [0] },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>()<> [127] },
    { Sub: Ten<i1>()<> [-127] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [0] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(12)<1> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] },
    { Sub: Ten<i1>(12)<1> [1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10] },
    { Mul: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Div: Ten<i1>(12)<1> [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i1>(12)<1> [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },
    { Max: Ten<i1>(12)<1> [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[1, 2, 3, 4]
           [5, 6, 7, 8]
           [9, 10, 11, 12]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[1, 0, -1, -2]
           [-3, -4, -5, -6]
           [-7, -8, -9, -10]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 1, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[1, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(4)<1> [1, 2, 3, 4] },
    { Sub: Ten<i1>(4)<1> [1, 0, -1, -2] },
    { Mul: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Div: Ten<i1>(4)<1> [0, 1, 0, 0] },
    { Min: Ten<i1>(4)<1> [0, 1, 1, 1] },
    { Max: Ten<i1>(4)<1> [1, 1, 2, 3] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>()<> [0] },
    { Sub: Ten<i1>()<> [2] },
    { Mul: Ten<i1>()<> [-1] },
    { Div: Ten<i1>()<> [-1] },
    { Min: Ten<i1>()<> [-1] },
    { Max: Ten<i1>()<> [1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>()<> [1] },
    { Sub: Ten<i1>()<> [1] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [0] },
    { Max: Ten<i1>()<> [1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>()<> [2] },
    { Sub: Ten<i1>()<> [0] },
    { Mul: Ten<i1>()<> [1] },
    { Div: Ten<i1>()<> [1] },
    { Min: Ten<i1>()<> [1] },
    { Max: Ten<i1>()<> [1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>()<> [6] },
    { Sub: Ten<i1>()<> [-4] },
    { Mul: Ten<i1>()<> [5] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [1] },
    { Max: Ten<i1>()<> [5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<0,0>
          [[6, 6, 6, 6]
           [6, 6, 6, 6]
           [6, 6, 6, 6]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[-4, -4, -4, -4]
           [-4, -4, -4, -4]
           [-4, -4, -4, -4]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>()<> [-127] },
    { Sub: Ten<i1>()<> [-127] },
    { Mul: Ten<i1>()<> [-128] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [1] },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>()<> [-128] },
    { Sub: Ten<i1>()<> [-126] },
    { Mul: Ten<i1>()<> [127] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [1] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(12)<1> [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16] },
    { Sub: Ten<i1>(12)<1> [5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6] },
    { Mul: Ten<i1>(12)<1> [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] },
    { Div: Ten<i1>(12)<1> [0, 5, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5] },
    { Max: Ten<i1>(12)<1> [5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[5, 4, 3, 2]
           [1, 0, -1, -2]
           [-3, -4, -5, -6]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 5, 2, 1]
           [1, 1, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(4)<1> [5, 6, 7, 8] },
    { Sub: Ten<i1>(4)<1> [5, 4, 3, 2] },
    { Mul: Ten<i1>(4)<1> [0, 5, 10, 15] },
    { Div: Ten<i1>(4)<1> [0, 5, 2, 1] },
    { Min: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i1>(4)<1> [5, 5, 5, 5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>()<> [4] },
    { Sub: Ten<i1>()<> [6] },
    { Mul: Ten<i1>()<> [-5] },
    { Div: Ten<i1>()<> [-5] },
    { Min: Ten<i1>()<> [-1] },
    { Max: Ten<i1>()<> [5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>()<> [5] },
    { Sub: Ten<i1>()<> [5] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [0] },
    { Max: Ten<i1>()<> [5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>()<> [6] },
    { Sub: Ten<i1>()<> [4] },
    { Mul: Ten<i1>()<> [5] },
    { Div: Ten<i1>()<> [5] },
    { Min: Ten<i1>()<> [1] },
    { Max: Ten<i1>()<> [5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>()<> [10] },
    { Sub: Ten<i1>()<> [0] },
    { Mul: Ten<i1>()<> [25] },
    { Div: Ten<i1>()<> [1] },
    { Min: Ten<i1>()<> [5] },
    { Max: Ten<i1>()<> [5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<0,0>
          [[10, 10, 10, 10]
           [10, 10, 10, 10]
           [10, 10, 10, 10]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>()<> [-123] },
    { Sub: Ten<i1>()<> [-123] },
    { Mul: Ten<i1>()<> [-128] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [5] },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>()<> [-124] },
    { Sub: Ten<i1>()<> [-122] },
    { Mul: Ten<i1>()<> [123] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [5] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*]) to ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[5, 4, 3, 2]
           [5, 4, 3, 2]
           [5, 4, 3, 2]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 5, 2, 1]
           [0, 5, 2, 1]
           [0, 5, 2, 1]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*,*]) to ({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[5, 4, 3, 2]
           [1, 0, -1, -2]
           [-3, -4, -5, -6]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 5, 2, 1]
           [1, 1, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*]) to ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[5, 4, 3, 2]
           [5, 4, 3, 2]
           [5, 4, 3, 2]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 5, 2, 1]
           [0, 5, 2, 1]
           [0, 5, 2, 1]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*]) to ({'  T':i1[*,*]}, {'  U':i1[*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(3,0)<0,0> [] },
    { Sub: Ten<i1>(3,0)<0,0> [] },
    { Mul: Ten<i1>(3,0)<0,0> [] },
    { Div: Ten<i1>(3,0)<0,0> [] },
    { Min: Ten<i1>(3,0)<0,0> [] },
    { Max: Ten<i1>(3,0)<0,0> [] })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>(3,4)<0,0>
          [[4, 4, 4, 4]
           [4, 4, 4, 4]
           [4, 4, 4, 4]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[6, 6, 6, 6]
           [6, 6, 6, 6]
           [6, 6, 6, 6]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[-5, -5, -5, -5]
           [-5, -5, -5, -5]
           [-5, -5, -5, -5]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[-5, -5, -5, -5]
           [-5, -5, -5, -5]
           [-5, -5, -5, -5]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[-1, -1, -1, -1]
           [-1, -1, -1, -1]
           [-1, -1, -1, -1]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>(3,4)<0,0>
          [[6, 6, 6, 6]
           [6, 6, 6, 6]
           [6, 6, 6, 6]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[4, 4, 4, 4]
           [4, 4, 4, 4]
           [4, 4, 4, 4]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>(3,4)<0,0>
          [[10, 10, 10, 10]
           [10, 10, 10, 10]
           [10, 10, 10, 10]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[*,*]) to ({'  T':i1[*,*]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<0,0>
          [[10, 10, 10, 10]
           [10, 10, 10, 10]
           [10, 10, 10, 10]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>(3,4)<0,0>
          [[-123, -123, -123, -123]
           [-123, -123, -123, -123]
           [-123, -123, -123, -123]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[-123, -123, -123, -123]
           [-123, -123, -123, -123]
           [-123, -123, -123, -123]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[-128, -128, -128, -128]
           [-128, -128, -128, -128]
           [-128, -128, -128, -128]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[-128, -128, -128, -128]
           [-128, -128, -128, -128]
           [-128, -128, -128, -128]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[*,*]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[*,*], U:i1[]) to ({'  T':i1[*,*]}, {'  U':i1[]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>(3,4)<0,0>
          [[-124, -124, -124, -124]
           [-124, -124, -124, -124]
           [-124, -124, -124, -124]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[-122, -122, -122, -122]
           [-122, -122, -122, -122]
           [-122, -122, -122, -122]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[123, 123, 123, 123]
           [123, 123, 123, 123]
           [123, 123, 123, 123]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[127, 127, 127, 127]
           [127, 127, 127, 127]
           [127, 127, 127, 127]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(12)<1> [-128, -127, -126, -125, -124, -123, -122, -121, -120, -119, -118, -117] },
    { Sub: Ten<i1>(12)<1> [-128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117] },
    { Mul: Ten<i1>(12)<1> [0, -128, 0, -128, 0, -128, 0, -128, 0, -128, 0, -128] },
    { Div: Ten<i1>(12)<1> [0, -128, -64, -42, -32, -25, -21, -18, -16, -14, -12, -11] },
    { Min: Ten<i1>(12)<0> [-128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128] },
    { Max: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[-128, -127, -126, -125]
           [-124, -123, -122, -121]
           [-120, -119, -118, -117]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[-128, 127, 126, 125]
           [124, 123, 122, 121]
           [120, 119, 118, 117]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, -128, 0, -128]
           [0, -128, 0, -128]
           [0, -128, 0, -128]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, -128, -64, -42]
           [-32, -25, -21, -18]
           [-16, -14, -12, -11]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[-128, -128, -128, -128]
           [-128, -128, -128, -128]
           [-128, -128, -128, -128]]
    },
    { Max: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(4)<1> [-128, -127, -126, -125] },
    { Sub: Ten<i1>(4)<1> [-128, 127, 126, 125] },
    { Mul: Ten<i1>(4)<1> [0, -128, 0, -128] },
    { Div: Ten<i1>(4)<1> [0, -128, -64, -42] },
    { Min: Ten<i1>(4)<0> [-128, -128, -128, -128] },
    { Max: Ten<i1>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>()<> [127] },
    { Sub: Ten<i1>()<> [-127] },
    { Mul: Ten<i1>()<> [-128] },
    { Div: Ten<i1>()<> [-128] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [-1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>()<> [-128] },
    { Sub: Ten<i1>()<> [-128] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [0] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>()<> [-127] },
    { Sub: Ten<i1>()<> [127] },
    { Mul: Ten<i1>()<> [-128] },
    { Div: Ten<i1>()<> [-128] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [1] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>()<> [-123] },
    { Sub: Ten<i1>()<> [123] },
    { Mul: Ten<i1>()<> [-128] },
    { Div: Ten<i1>()<> [-25] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [5] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<0,0>
          [[-123, -123, -123, -123]
           [-123, -123, -123, -123]
           [-123, -123, -123, -123]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[123, 123, 123, 123]
           [123, 123, 123, 123]
           [123, 123, 123, 123]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[-128, -128, -128, -128]
           [-128, -128, -128, -128]
           [-128, -128, -128, -128]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[-25, -25, -25, -25]
           [-25, -25, -25, -25]
           [-25, -25, -25, -25]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[-128, -128, -128, -128]
           [-128, -128, -128, -128]
           [-128, -128, -128, -128]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>()<> [0] },
    { Sub: Ten<i1>()<> [0] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [1] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [-128] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [-128] },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>()<> [-1] },
    { Sub: Ten<i1>()<> [1] },
    { Mul: Ten<i1>()<> [-128] },
    { Div: Ten<i1>()<> [-1] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i1>(12)<1> [127, -128, -127, -126, -125, -124, -123, -122, -121, -120, -119, -118] },
    { Sub: Ten<i1>(12)<1> [127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116] },
    { Mul: Ten<i1>(12)<1> [0, 127, -2, 125, -4, 123, -6, 121, -8, 119, -10, 117] },
    { Div: Ten<i1>(12)<1> [0, 127, 63, 42, 31, 25, 21, 18, 15, 14, 12, 11] },
    { Min: Ten<i1>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<i1>(12)<0> [127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i1>(3,4)<4,1>
          [[127, -128, -127, -126]
           [-125, -124, -123, -122]
           [-121, -120, -119, -118]]
    },
    { Sub: Ten<i1>(3,4)<4,1>
          [[127, 126, 125, 124]
           [123, 122, 121, 120]
           [119, 118, 117, 116]]
    },
    { Mul: Ten<i1>(3,4)<4,1>
          [[0, 127, -2, 125]
           [-4, 123, -6, 121]
           [-8, 119, -10, 117]]
    },
    { Div: Ten<i1>(3,4)<4,1>
          [[0, 127, 63, 42]
           [31, 25, 21, 18]
           [15, 14, 12, 11]]
    },
    { Min: Ten<i1>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[127, 127, 127, 127]
           [127, 127, 127, 127]
           [127, 127, 127, 127]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i1>(4)<1> [127, -128, -127, -126] },
    { Sub: Ten<i1>(4)<1> [127, 126, 125, 124] },
    { Mul: Ten<i1>(4)<1> [0, 127, -2, 125] },
    { Div: Ten<i1>(4)<1> [0, 127, 63, 42] },
    { Min: Ten<i1>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i1>(4)<0> [127, 127, 127, 127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*])}):({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]}))
Func sig: (T:i1[], U:i1[*]) to ({'  T':i1[]}, {'  U':i1[*]}, {Add:i1[*]}, {Sub:i1[*]}, {Mul:i1[*]}, {Div:i1[*]}, {Min:i1[*]}, {Max:i1[*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>(0)<0> [] },
    { Add: Ten<i1>(0)<0> [] },
    { Sub: Ten<i1>(0)<0> [] },
    { Mul: Ten<i1>(0)<0> [] },
    { Div: Ten<i1>(0)<0> [] },
    { Min: Ten<i1>(0)<0> [] },
    { Max: Ten<i1>(0)<0> [] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>()<> [-1] },
    { Add: Ten<i1>()<> [126] },
    { Sub: Ten<i1>()<> [-128] },
    { Mul: Ten<i1>()<> [-127] },
    { Div: Ten<i1>()<> [-127] },
    { Min: Ten<i1>()<> [-1] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>()<> [0] },
    { Add: Ten<i1>()<> [127] },
    { Sub: Ten<i1>()<> [127] },
    { Mul: Ten<i1>()<> [0] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [0] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>()<> [1] },
    { Add: Ten<i1>()<> [-128] },
    { Sub: Ten<i1>()<> [126] },
    { Mul: Ten<i1>()<> [127] },
    { Div: Ten<i1>()<> [127] },
    { Min: Ten<i1>()<> [1] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>()<> [5] },
    { Add: Ten<i1>()<> [-124] },
    { Sub: Ten<i1>()<> [122] },
    { Mul: Ten<i1>()<> [123] },
    { Div: Ten<i1>()<> [25] },
    { Min: Ten<i1>()<> [5] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[*,*])}):({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]}))
Func sig: (T:i1[], U:i1[*,*]) to ({'  T':i1[]}, {'  U':i1[*,*]}, {Add:i1[*,*]}, {Sub:i1[*,*]}, {Mul:i1[*,*]}, {Div:i1[*,*]}, {Min:i1[*,*]}, {Max:i1[*,*]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i1>(3,4)<0,0>
          [[-124, -124, -124, -124]
           [-124, -124, -124, -124]
           [-124, -124, -124, -124]]
    },
    { Sub: Ten<i1>(3,4)<0,0>
          [[122, 122, 122, 122]
           [122, 122, 122, 122]
           [122, 122, 122, 122]]
    },
    { Mul: Ten<i1>(3,4)<0,0>
          [[123, 123, 123, 123]
           [123, 123, 123, 123]
           [123, 123, 123, 123]]
    },
    { Div: Ten<i1>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Min: Ten<i1>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i1>(3,4)<0,0>
          [[127, 127, 127, 127]
           [127, 127, 127, 127]
           [127, 127, 127, 127]]
    })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>()<> [-128] },
    { Add: Ten<i1>()<> [-1] },
    { Sub: Ten<i1>()<> [-1] },
    { Mul: Ten<i1>()<> [-128] },
    { Div: Ten<i1>()<> [0] },
    { Min: Ten<i1>()<> [-128] },
    { Max: Ten<i1>()<> [127] })
###

**** New definitions: T, type: i1[]
**** New definitions: U, type: i1[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
BndKind:Tuple, Type:({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i1[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i1[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i1[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i1[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i1[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i1[])}):({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]}))
Func sig: (T:i1[], U:i1[]) to ({'  T':i1[]}, {'  U':i1[]}, {Add:i1[]}, {Sub:i1[]}, {Mul:i1[]}, {Div:i1[]}, {Min:i1[]}, {Max:i1[]})
Type: ({Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>},{Ten<i1>}), Value: (
    {   T: Ten<i1>()<> [127] },
    {   U: Ten<i1>()<> [127] },
    { Add: Ten<i1>()<> [-2] },
    { Sub: Ten<i1>()<> [0] },
    { Mul: Ten<i1>()<> [1] },
    { Div: Ten<i1>()<> [1] },
    { Min: Ten<i1>()<> [127] },
    { Max: Ten<i1>()<> [127] })
###
