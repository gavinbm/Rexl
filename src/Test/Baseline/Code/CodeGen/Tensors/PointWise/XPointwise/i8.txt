**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[*]) to ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(12)<1> [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22] },
    { Sub: Ten<i8>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Mul: Ten<i8>(12)<1> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121] },
    { Div: Ten<i8>(12)<1> [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },
    { Min: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*], U:i8[*,*]) to ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [-4, -4, -4, -4]
           [-8, -8, -8, -8]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[*]) to ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(4)<1> [0, 2, 4, 6] },
    { Sub: Ten<i8>(4)<1> [0, 0, 0, 0] },
    { Mul: Ten<i8>(4)<1> [0, 1, 4, 9] },
    { Div: Ten<i8>(4)<1> [0, 1, 1, 1] },
    { Min: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[*]) to ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>(12)<1> [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] },
    { Sub: Ten<i8>(12)<1> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] },
    { Mul: Ten<i8>(12)<1> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11] },
    { Div: Ten<i8>(12)<1> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11] },
    { Min: Ten<i8>(12)<1> [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] },
    { Max: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Sub: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Mul: Ten<i8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Div: Ten<i8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i8>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Max: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>(12)<1> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] },
    { Sub: Ten<i8>(12)<1> [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] },
    { Mul: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Div: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Min: Ten<i8>(12)<1> [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },
    { Max: Ten<i8>(12)<1> [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>(12)<1> [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16] },
    { Sub: Ten<i8>(12)<1> [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6] },
    { Mul: Ten<i8>(12)<1> [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] },
    { Div: Ten<i8>(12)<1> [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2] },
    { Min: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5] },
    { Max: Ten<i8>(12)<1> [5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*], U:i8[*,*]) to ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[-5, -4, -3, -2]
           [-5, -4, -3, -2]
           [-5, -4, -3, -2]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>(12)<1> [-9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805, -9223372036854775804, -9223372036854775803, -9223372036854775802, -9223372036854775801, -9223372036854775800, -9223372036854775799, -9223372036854775798, -9223372036854775797] },
    { Sub: Ten<i8>(12)<1> [-9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805, -9223372036854775804, -9223372036854775803, -9223372036854775802, -9223372036854775801, -9223372036854775800, -9223372036854775799, -9223372036854775798, -9223372036854775797] },
    { Mul: Ten<i8>(12)<1> [0, -9223372036854775808, 0, -9223372036854775808, 0, -9223372036854775808, 0, -9223372036854775808, 0, -9223372036854775808, 0, -9223372036854775808] },
    { Div: Ten<i8>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i8>(12)<0> [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808] },
    { Max: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>(12)<1> [9223372036854775807, -9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805, -9223372036854775804, -9223372036854775803, -9223372036854775802, -9223372036854775801, -9223372036854775800, -9223372036854775799, -9223372036854775798] },
    { Sub: Ten<i8>(12)<1> [-9223372036854775807, -9223372036854775806, -9223372036854775805, -9223372036854775804, -9223372036854775803, -9223372036854775802, -9223372036854775801, -9223372036854775800, -9223372036854775799, -9223372036854775798, -9223372036854775797, -9223372036854775796] },
    { Mul: Ten<i8>(12)<1> [0, 9223372036854775807, -2, 9223372036854775805, -4, 9223372036854775803, -6, 9223372036854775801, -8, 9223372036854775799, -10, 9223372036854775797] },
    { Div: Ten<i8>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<i8>(12)<0> [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807] })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*]) to ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [4, 4, 4, 4]
           [8, 8, 8, 8]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 5, 3, 2]
           [0, 9, 5, 3]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*,*]) to ({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [8, 10, 12, 14]
           [16, 18, 20, 22]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [16, 25, 36, 49]
           [64, 81, 100, 121]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*]) to ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [4, 4, 4, 4]
           [8, 8, 8, 8]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 5, 3, 2]
           [0, 9, 5, 3]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*]) to ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(3,0)<0,0> [] },
    { Sub: Ten<i8>(3,0)<0,0> [] },
    { Mul: Ten<i8>(3,0)<0,0> [] },
    { Div: Ten<i8>(3,0)<0,0> [] },
    { Min: Ten<i8>(3,0)<0,0> [] },
    { Max: Ten<i8>(3,0)<0,0> [] })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>(3,4)<4,1>
          [[-1, 0, 1, 2]
           [3, 4, 5, 6]
           [7, 8, 9, 10]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[1, 2, 3, 4]
           [5, 6, 7, 8]
           [9, 10, 11, 12]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, -1, -2, -3]
           [-4, -5, -6, -7]
           [-8, -9, -10, -11]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, -1, -2, -3]
           [-4, -5, -6, -7]
           [-8, -9, -10, -11]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[-1, -1, -1, -1]
           [-1, -1, -1, -1]
           [-1, -1, -1, -1]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>(3,4)<4,1>
          [[1, 2, 3, 4]
           [5, 6, 7, 8]
           [9, 10, 11, 12]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[-1, 0, 1, 2]
           [3, 4, 5, 6]
           [7, 8, 9, 10]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[1, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[-5, -4, -3, -2]
           [-1, 0, 1, 2]
           [3, 4, 5, 6]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 1, 1, 1]
           [1, 1, 2, 2]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*,*]) to ({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[-5, -4, -3, -2]
           [-1, 0, 1, 2]
           [3, 4, 5, 6]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 1, 1, 1]
           [1, 1, 2, 2]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>(3,4)<4,1>
          [[-9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805]
           [-9223372036854775804, -9223372036854775803, -9223372036854775802, -9223372036854775801]
           [-9223372036854775800, -9223372036854775799, -9223372036854775798, -9223372036854775797]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[-9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805]
           [-9223372036854775804, -9223372036854775803, -9223372036854775802, -9223372036854775801]
           [-9223372036854775800, -9223372036854775799, -9223372036854775798, -9223372036854775797]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, -9223372036854775808, 0, -9223372036854775808]
           [0, -9223372036854775808, 0, -9223372036854775808]
           [0, -9223372036854775808, 0, -9223372036854775808]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>(3,4)<4,1>
          [[9223372036854775807, -9223372036854775808, -9223372036854775807, -9223372036854775806]
           [-9223372036854775805, -9223372036854775804, -9223372036854775803, -9223372036854775802]
           [-9223372036854775801, -9223372036854775800, -9223372036854775799, -9223372036854775798]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[-9223372036854775807, -9223372036854775806, -9223372036854775805, -9223372036854775804]
           [-9223372036854775803, -9223372036854775802, -9223372036854775801, -9223372036854775800]
           [-9223372036854775799, -9223372036854775798, -9223372036854775797, -9223372036854775796]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 9223372036854775807, -2, 9223372036854775805]
           [-4, 9223372036854775803, -6, 9223372036854775801]
           [-8, 9223372036854775799, -10, 9223372036854775797]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]]
    })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[*]) to ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(4)<1> [0, 2, 4, 6] },
    { Sub: Ten<i8>(4)<1> [0, 0, 0, 0] },
    { Mul: Ten<i8>(4)<1> [0, 1, 4, 9] },
    { Div: Ten<i8>(4)<1> [0, 1, 1, 1] },
    { Min: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*], U:i8[*,*]) to ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [-4, -4, -4, -4]
           [-8, -8, -8, -8]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[*]) to ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(4)<1> [0, 2, 4, 6] },
    { Sub: Ten<i8>(4)<1> [0, 0, 0, 0] },
    { Mul: Ten<i8>(4)<1> [0, 1, 4, 9] },
    { Div: Ten<i8>(4)<1> [0, 1, 1, 1] },
    { Min: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[*]) to ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>(4)<1> [-1, 0, 1, 2] },
    { Sub: Ten<i8>(4)<1> [1, 2, 3, 4] },
    { Mul: Ten<i8>(4)<1> [0, -1, -2, -3] },
    { Div: Ten<i8>(4)<1> [0, -1, -2, -3] },
    { Min: Ten<i8>(4)<1> [-1, -1, -1, -1] },
    { Max: Ten<i8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Sub: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Mul: Ten<i8>(4)<0> [0, 0, 0, 0] },
    { Div: Ten<i8>(4)<0> [0, 0, 0, 0] },
    { Min: Ten<i8>(4)<1> [0, 0, 0, 0] },
    { Max: Ten<i8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>(4)<1> [1, 2, 3, 4] },
    { Sub: Ten<i8>(4)<1> [-1, 0, 1, 2] },
    { Mul: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Div: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Min: Ten<i8>(4)<1> [0, 1, 1, 1] },
    { Max: Ten<i8>(4)<1> [1, 1, 2, 3] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>(4)<1> [5, 6, 7, 8] },
    { Sub: Ten<i8>(4)<1> [-5, -4, -3, -2] },
    { Mul: Ten<i8>(4)<1> [0, 5, 10, 15] },
    { Div: Ten<i8>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i8>(4)<1> [5, 5, 5, 5] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*], U:i8[*,*]) to ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[-5, -4, -3, -2]
           [-5, -4, -3, -2]
           [-5, -4, -3, -2]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>(4)<1> [-9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805] },
    { Sub: Ten<i8>(4)<1> [-9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805] },
    { Mul: Ten<i8>(4)<1> [0, -9223372036854775808, 0, -9223372036854775808] },
    { Div: Ten<i8>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<i8>(4)<0> [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808] },
    { Max: Ten<i8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>(4)<1> [9223372036854775807, -9223372036854775808, -9223372036854775807, -9223372036854775806] },
    { Sub: Ten<i8>(4)<1> [-9223372036854775807, -9223372036854775806, -9223372036854775805, -9223372036854775804] },
    { Mul: Ten<i8>(4)<1> [0, 9223372036854775807, -2, 9223372036854775805] },
    { Div: Ten<i8>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i8>(4)<0> [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[*]) to ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*], U:i8[*,*]) to ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,0)<0,0> [] },
    { Sub: Ten<i8>(3,0)<0,0> [] },
    { Mul: Ten<i8>(3,0)<0,0> [] },
    { Div: Ten<i8>(3,0)<0,0> [] },
    { Min: Ten<i8>(3,0)<0,0> [] },
    { Max: Ten<i8>(3,0)<0,0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[*]) to ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[*]) to ({'  T':i8[*]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*], U:i8[*,*]) to ({'  T':i8[*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,0)<0,0> [] },
    { Sub: Ten<i8>(3,0)<0,0> [] },
    { Mul: Ten<i8>(3,0)<0,0> [] },
    { Div: Ten<i8>(3,0)<0,0> [] },
    { Min: Ten<i8>(3,0)<0,0> [] },
    { Max: Ten<i8>(3,0)<0,0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[*], U:i8[]) to ({'  T':i8[*]}, {'  U':i8[]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(0)<0> [] },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(12)<1> [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] },
    { Sub: Ten<i8>(12)<1> [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12] },
    { Mul: Ten<i8>(12)<1> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11] },
    { Div: Ten<i8>(12)<1> [0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i8>(12)<1> [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] },
    { Max: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[-1, 0, 1, 2]
           [3, 4, 5, 6]
           [7, 8, 9, 10]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[-1, -2, -3, -4]
           [-5, -6, -7, -8]
           [-9, -10, -11, -12]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, -1, -2, -3]
           [-4, -5, -6, -7]
           [-8, -9, -10, -11]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, -1, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[-1, -1, -1, -1]
           [-1, -1, -1, -1]
           [-1, -1, -1, -1]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(4)<1> [-1, 0, 1, 2] },
    { Sub: Ten<i8>(4)<1> [-1, -2, -3, -4] },
    { Mul: Ten<i8>(4)<1> [0, -1, -2, -3] },
    { Div: Ten<i8>(4)<1> [0, -1, 0, 0] },
    { Min: Ten<i8>(4)<1> [-1, -1, -1, -1] },
    { Max: Ten<i8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>()<> [-2] },
    { Sub: Ten<i8>()<> [0] },
    { Mul: Ten<i8>()<> [1] },
    { Div: Ten<i8>()<> [1] },
    { Min: Ten<i8>()<> [-1] },
    { Max: Ten<i8>()<> [-1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>()<> [-1] },
    { Sub: Ten<i8>()<> [-1] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-1] },
    { Max: Ten<i8>()<> [0] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>()<> [0] },
    { Sub: Ten<i8>()<> [-2] },
    { Mul: Ten<i8>()<> [-1] },
    { Div: Ten<i8>()<> [-1] },
    { Min: Ten<i8>()<> [-1] },
    { Max: Ten<i8>()<> [1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>()<> [4] },
    { Sub: Ten<i8>()<> [-6] },
    { Mul: Ten<i8>()<> [-5] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-1] },
    { Max: Ten<i8>()<> [5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<0,0>
          [[4, 4, 4, 4]
           [4, 4, 4, 4]
           [4, 4, 4, 4]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[-6, -6, -6, -6]
           [-6, -6, -6, -6]
           [-6, -6, -6, -6]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[-5, -5, -5, -5]
           [-5, -5, -5, -5]
           [-5, -5, -5, -5]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[-1, -1, -1, -1]
           [-1, -1, -1, -1]
           [-1, -1, -1, -1]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>()<> [9223372036854775807] },
    { Sub: Ten<i8>()<> [9223372036854775807] },
    { Mul: Ten<i8>()<> [-9223372036854775808] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [-1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-1] },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>()<> [9223372036854775806] },
    { Sub: Ten<i8>()<> [-9223372036854775808] },
    { Mul: Ten<i8>()<> [-9223372036854775807] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-1] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Sub: Ten<i8>(12)<1> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11] },
    { Mul: Ten<i8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Div: Ten<i8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i8>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Max: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[0, -1, -2, -3]
           [-4, -5, -6, -7]
           [-8, -9, -10, -11]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Sub: Ten<i8>(4)<1> [0, -1, -2, -3] },
    { Mul: Ten<i8>(4)<0> [0, 0, 0, 0] },
    { Div: Ten<i8>(4)<0> [0, 0, 0, 0] },
    { Min: Ten<i8>(4)<1> [0, 0, 0, 0] },
    { Max: Ten<i8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>()<> [-1] },
    { Sub: Ten<i8>()<> [1] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-1] },
    { Max: Ten<i8>()<> [0] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>()<> [0] },
    { Sub: Ten<i8>()<> [0] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [0] },
    { Max: Ten<i8>()<> [0] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>()<> [1] },
    { Sub: Ten<i8>()<> [-1] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [0] },
    { Max: Ten<i8>()<> [1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>()<> [5] },
    { Sub: Ten<i8>()<> [-5] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [0] },
    { Max: Ten<i8>()<> [5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[-5, -5, -5, -5]
           [-5, -5, -5, -5]
           [-5, -5, -5, -5]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>()<> [-9223372036854775808] },
    { Sub: Ten<i8>()<> [-9223372036854775808] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [0] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [0] },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>()<> [9223372036854775807] },
    { Sub: Ten<i8>()<> [-9223372036854775807] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [0] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(12)<1> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] },
    { Sub: Ten<i8>(12)<1> [1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10] },
    { Mul: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Div: Ten<i8>(12)<1> [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i8>(12)<1> [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },
    { Max: Ten<i8>(12)<1> [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[1, 2, 3, 4]
           [5, 6, 7, 8]
           [9, 10, 11, 12]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[1, 0, -1, -2]
           [-3, -4, -5, -6]
           [-7, -8, -9, -10]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 1, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[1, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(4)<1> [1, 2, 3, 4] },
    { Sub: Ten<i8>(4)<1> [1, 0, -1, -2] },
    { Mul: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Div: Ten<i8>(4)<1> [0, 1, 0, 0] },
    { Min: Ten<i8>(4)<1> [0, 1, 1, 1] },
    { Max: Ten<i8>(4)<1> [1, 1, 2, 3] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>()<> [0] },
    { Sub: Ten<i8>()<> [2] },
    { Mul: Ten<i8>()<> [-1] },
    { Div: Ten<i8>()<> [-1] },
    { Min: Ten<i8>()<> [-1] },
    { Max: Ten<i8>()<> [1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>()<> [1] },
    { Sub: Ten<i8>()<> [1] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [0] },
    { Max: Ten<i8>()<> [1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>()<> [2] },
    { Sub: Ten<i8>()<> [0] },
    { Mul: Ten<i8>()<> [1] },
    { Div: Ten<i8>()<> [1] },
    { Min: Ten<i8>()<> [1] },
    { Max: Ten<i8>()<> [1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>()<> [6] },
    { Sub: Ten<i8>()<> [-4] },
    { Mul: Ten<i8>()<> [5] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [1] },
    { Max: Ten<i8>()<> [5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<0,0>
          [[6, 6, 6, 6]
           [6, 6, 6, 6]
           [6, 6, 6, 6]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[-4, -4, -4, -4]
           [-4, -4, -4, -4]
           [-4, -4, -4, -4]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>()<> [-9223372036854775807] },
    { Sub: Ten<i8>()<> [-9223372036854775807] },
    { Mul: Ten<i8>()<> [-9223372036854775808] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [1] },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>()<> [-9223372036854775808] },
    { Sub: Ten<i8>()<> [-9223372036854775806] },
    { Mul: Ten<i8>()<> [9223372036854775807] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [1] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(12)<1> [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16] },
    { Sub: Ten<i8>(12)<1> [5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6] },
    { Mul: Ten<i8>(12)<1> [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] },
    { Div: Ten<i8>(12)<1> [0, 5, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5] },
    { Max: Ten<i8>(12)<1> [5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[5, 4, 3, 2]
           [1, 0, -1, -2]
           [-3, -4, -5, -6]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 5, 2, 1]
           [1, 1, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(4)<1> [5, 6, 7, 8] },
    { Sub: Ten<i8>(4)<1> [5, 4, 3, 2] },
    { Mul: Ten<i8>(4)<1> [0, 5, 10, 15] },
    { Div: Ten<i8>(4)<1> [0, 5, 2, 1] },
    { Min: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i8>(4)<1> [5, 5, 5, 5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>()<> [4] },
    { Sub: Ten<i8>()<> [6] },
    { Mul: Ten<i8>()<> [-5] },
    { Div: Ten<i8>()<> [-5] },
    { Min: Ten<i8>()<> [-1] },
    { Max: Ten<i8>()<> [5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>()<> [5] },
    { Sub: Ten<i8>()<> [5] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [0] },
    { Max: Ten<i8>()<> [5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>()<> [6] },
    { Sub: Ten<i8>()<> [4] },
    { Mul: Ten<i8>()<> [5] },
    { Div: Ten<i8>()<> [5] },
    { Min: Ten<i8>()<> [1] },
    { Max: Ten<i8>()<> [5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>()<> [10] },
    { Sub: Ten<i8>()<> [0] },
    { Mul: Ten<i8>()<> [25] },
    { Div: Ten<i8>()<> [1] },
    { Min: Ten<i8>()<> [5] },
    { Max: Ten<i8>()<> [5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<0,0>
          [[10, 10, 10, 10]
           [10, 10, 10, 10]
           [10, 10, 10, 10]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>()<> [-9223372036854775803] },
    { Sub: Ten<i8>()<> [-9223372036854775803] },
    { Mul: Ten<i8>()<> [-9223372036854775808] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [5] },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>()<> [-9223372036854775804] },
    { Sub: Ten<i8>()<> [-9223372036854775802] },
    { Mul: Ten<i8>()<> [9223372036854775803] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [5] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*]) to ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[5, 4, 3, 2]
           [5, 4, 3, 2]
           [5, 4, 3, 2]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 5, 2, 1]
           [0, 5, 2, 1]
           [0, 5, 2, 1]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*,*]) to ({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[5, 4, 3, 2]
           [1, 0, -1, -2]
           [-3, -4, -5, -6]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 5, 2, 1]
           [1, 1, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*]) to ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[5, 4, 3, 2]
           [5, 4, 3, 2]
           [5, 4, 3, 2]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 5, 2, 1]
           [0, 5, 2, 1]
           [0, 5, 2, 1]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*]) to ({'  T':i8[*,*]}, {'  U':i8[*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(3,0)<0,0> [] },
    { Sub: Ten<i8>(3,0)<0,0> [] },
    { Mul: Ten<i8>(3,0)<0,0> [] },
    { Div: Ten<i8>(3,0)<0,0> [] },
    { Min: Ten<i8>(3,0)<0,0> [] },
    { Max: Ten<i8>(3,0)<0,0> [] })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>(3,4)<0,0>
          [[4, 4, 4, 4]
           [4, 4, 4, 4]
           [4, 4, 4, 4]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[6, 6, 6, 6]
           [6, 6, 6, 6]
           [6, 6, 6, 6]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[-5, -5, -5, -5]
           [-5, -5, -5, -5]
           [-5, -5, -5, -5]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[-5, -5, -5, -5]
           [-5, -5, -5, -5]
           [-5, -5, -5, -5]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[-1, -1, -1, -1]
           [-1, -1, -1, -1]
           [-1, -1, -1, -1]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>(3,4)<0,0>
          [[6, 6, 6, 6]
           [6, 6, 6, 6]
           [6, 6, 6, 6]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[4, 4, 4, 4]
           [4, 4, 4, 4]
           [4, 4, 4, 4]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>(3,4)<0,0>
          [[10, 10, 10, 10]
           [10, 10, 10, 10]
           [10, 10, 10, 10]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[*,*]) to ({'  T':i8[*,*]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<0,0>
          [[10, 10, 10, 10]
           [10, 10, 10, 10]
           [10, 10, 10, 10]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>(3,4)<0,0>
          [[-9223372036854775803, -9223372036854775803, -9223372036854775803, -9223372036854775803]
           [-9223372036854775803, -9223372036854775803, -9223372036854775803, -9223372036854775803]
           [-9223372036854775803, -9223372036854775803, -9223372036854775803, -9223372036854775803]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[-9223372036854775803, -9223372036854775803, -9223372036854775803, -9223372036854775803]
           [-9223372036854775803, -9223372036854775803, -9223372036854775803, -9223372036854775803]
           [-9223372036854775803, -9223372036854775803, -9223372036854775803, -9223372036854775803]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[*,*]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[*,*], U:i8[]) to ({'  T':i8[*,*]}, {'  U':i8[]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>(3,4)<0,0>
          [[-9223372036854775804, -9223372036854775804, -9223372036854775804, -9223372036854775804]
           [-9223372036854775804, -9223372036854775804, -9223372036854775804, -9223372036854775804]
           [-9223372036854775804, -9223372036854775804, -9223372036854775804, -9223372036854775804]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[-9223372036854775802, -9223372036854775802, -9223372036854775802, -9223372036854775802]
           [-9223372036854775802, -9223372036854775802, -9223372036854775802, -9223372036854775802]
           [-9223372036854775802, -9223372036854775802, -9223372036854775802, -9223372036854775802]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(12)<1> [-9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805, -9223372036854775804, -9223372036854775803, -9223372036854775802, -9223372036854775801, -9223372036854775800, -9223372036854775799, -9223372036854775798, -9223372036854775797] },
    { Sub: Ten<i8>(12)<1> [-9223372036854775808, 9223372036854775807, 9223372036854775806, 9223372036854775805, 9223372036854775804, 9223372036854775803, 9223372036854775802, 9223372036854775801, 9223372036854775800, 9223372036854775799, 9223372036854775798, 9223372036854775797] },
    { Mul: Ten<i8>(12)<1> [0, -9223372036854775808, 0, -9223372036854775808, 0, -9223372036854775808, 0, -9223372036854775808, 0, -9223372036854775808, 0, -9223372036854775808] },
    { Div: Ten<i8>(12)<1> [0, -9223372036854775808, -4611686018427387904, -3074457345618258602, -2305843009213693952, -1844674407370955161, -1537228672809129301, -1317624576693539401, -1152921504606846976, -1024819115206086200, -922337203685477580, -838488366986797800] },
    { Min: Ten<i8>(12)<0> [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808] },
    { Max: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[-9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805]
           [-9223372036854775804, -9223372036854775803, -9223372036854775802, -9223372036854775801]
           [-9223372036854775800, -9223372036854775799, -9223372036854775798, -9223372036854775797]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[-9223372036854775808, 9223372036854775807, 9223372036854775806, 9223372036854775805]
           [9223372036854775804, 9223372036854775803, 9223372036854775802, 9223372036854775801]
           [9223372036854775800, 9223372036854775799, 9223372036854775798, 9223372036854775797]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, -9223372036854775808, 0, -9223372036854775808]
           [0, -9223372036854775808, 0, -9223372036854775808]
           [0, -9223372036854775808, 0, -9223372036854775808]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, -9223372036854775808, -4611686018427387904, -3074457345618258602]
           [-2305843009213693952, -1844674407370955161, -1537228672809129301, -1317624576693539401]
           [-1152921504606846976, -1024819115206086200, -922337203685477580, -838488366986797800]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]]
    },
    { Max: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(4)<1> [-9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805] },
    { Sub: Ten<i8>(4)<1> [-9223372036854775808, 9223372036854775807, 9223372036854775806, 9223372036854775805] },
    { Mul: Ten<i8>(4)<1> [0, -9223372036854775808, 0, -9223372036854775808] },
    { Div: Ten<i8>(4)<1> [0, -9223372036854775808, -4611686018427387904, -3074457345618258602] },
    { Min: Ten<i8>(4)<0> [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808] },
    { Max: Ten<i8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>()<> [9223372036854775807] },
    { Sub: Ten<i8>()<> [-9223372036854775807] },
    { Mul: Ten<i8>()<> [-9223372036854775808] },
    { Div: Ten<i8>()<> [-9223372036854775808] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [-1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>()<> [-9223372036854775808] },
    { Sub: Ten<i8>()<> [-9223372036854775808] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [0] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>()<> [-9223372036854775807] },
    { Sub: Ten<i8>()<> [9223372036854775807] },
    { Mul: Ten<i8>()<> [-9223372036854775808] },
    { Div: Ten<i8>()<> [-9223372036854775808] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [1] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>()<> [-9223372036854775803] },
    { Sub: Ten<i8>()<> [9223372036854775803] },
    { Mul: Ten<i8>()<> [-9223372036854775808] },
    { Div: Ten<i8>()<> [-1844674407370955161] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [5] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<0,0>
          [[-9223372036854775803, -9223372036854775803, -9223372036854775803, -9223372036854775803]
           [-9223372036854775803, -9223372036854775803, -9223372036854775803, -9223372036854775803]
           [-9223372036854775803, -9223372036854775803, -9223372036854775803, -9223372036854775803]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[-1844674407370955161, -1844674407370955161, -1844674407370955161, -1844674407370955161]
           [-1844674407370955161, -1844674407370955161, -1844674407370955161, -1844674407370955161]
           [-1844674407370955161, -1844674407370955161, -1844674407370955161, -1844674407370955161]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
           [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>()<> [0] },
    { Sub: Ten<i8>()<> [0] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [1] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [-9223372036854775808] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [-9223372036854775808] },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>()<> [-1] },
    { Sub: Ten<i8>()<> [1] },
    { Mul: Ten<i8>()<> [-9223372036854775808] },
    { Div: Ten<i8>()<> [-1] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<i8>(12)<1> [9223372036854775807, -9223372036854775808, -9223372036854775807, -9223372036854775806, -9223372036854775805, -9223372036854775804, -9223372036854775803, -9223372036854775802, -9223372036854775801, -9223372036854775800, -9223372036854775799, -9223372036854775798] },
    { Sub: Ten<i8>(12)<1> [9223372036854775807, 9223372036854775806, 9223372036854775805, 9223372036854775804, 9223372036854775803, 9223372036854775802, 9223372036854775801, 9223372036854775800, 9223372036854775799, 9223372036854775798, 9223372036854775797, 9223372036854775796] },
    { Mul: Ten<i8>(12)<1> [0, 9223372036854775807, -2, 9223372036854775805, -4, 9223372036854775803, -6, 9223372036854775801, -8, 9223372036854775799, -10, 9223372036854775797] },
    { Div: Ten<i8>(12)<1> [0, 9223372036854775807, 4611686018427387903, 3074457345618258602, 2305843009213693951, 1844674407370955161, 1537228672809129301, 1317624576693539401, 1152921504606846975, 1024819115206086200, 922337203685477580, 838488366986797800] },
    { Min: Ten<i8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<i8>(12)<0> [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<i8>(3,4)<4,1>
          [[9223372036854775807, -9223372036854775808, -9223372036854775807, -9223372036854775806]
           [-9223372036854775805, -9223372036854775804, -9223372036854775803, -9223372036854775802]
           [-9223372036854775801, -9223372036854775800, -9223372036854775799, -9223372036854775798]]
    },
    { Sub: Ten<i8>(3,4)<4,1>
          [[9223372036854775807, 9223372036854775806, 9223372036854775805, 9223372036854775804]
           [9223372036854775803, 9223372036854775802, 9223372036854775801, 9223372036854775800]
           [9223372036854775799, 9223372036854775798, 9223372036854775797, 9223372036854775796]]
    },
    { Mul: Ten<i8>(3,4)<4,1>
          [[0, 9223372036854775807, -2, 9223372036854775805]
           [-4, 9223372036854775803, -6, 9223372036854775801]
           [-8, 9223372036854775799, -10, 9223372036854775797]]
    },
    { Div: Ten<i8>(3,4)<4,1>
          [[0, 9223372036854775807, 4611686018427387903, 3074457345618258602]
           [2305843009213693951, 1844674407370955161, 1537228672809129301, 1317624576693539401]
           [1152921504606846975, 1024819115206086200, 922337203685477580, 838488366986797800]]
    },
    { Min: Ten<i8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<i8>(4)<1> [9223372036854775807, -9223372036854775808, -9223372036854775807, -9223372036854775806] },
    { Sub: Ten<i8>(4)<1> [9223372036854775807, 9223372036854775806, 9223372036854775805, 9223372036854775804] },
    { Mul: Ten<i8>(4)<1> [0, 9223372036854775807, -2, 9223372036854775805] },
    { Div: Ten<i8>(4)<1> [0, 9223372036854775807, 4611686018427387903, 3074457345618258602] },
    { Min: Ten<i8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<i8>(4)<0> [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*])}):({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]}))
Func sig: (T:i8[], U:i8[*]) to ({'  T':i8[]}, {'  U':i8[*]}, {Add:i8[*]}, {Sub:i8[*]}, {Mul:i8[*]}, {Div:i8[*]}, {Min:i8[*]}, {Max:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>(0)<0> [] },
    { Add: Ten<i8>(0)<0> [] },
    { Sub: Ten<i8>(0)<0> [] },
    { Mul: Ten<i8>(0)<0> [] },
    { Div: Ten<i8>(0)<0> [] },
    { Min: Ten<i8>(0)<0> [] },
    { Max: Ten<i8>(0)<0> [] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>()<> [-1] },
    { Add: Ten<i8>()<> [9223372036854775806] },
    { Sub: Ten<i8>()<> [-9223372036854775808] },
    { Mul: Ten<i8>()<> [-9223372036854775807] },
    { Div: Ten<i8>()<> [-9223372036854775807] },
    { Min: Ten<i8>()<> [-1] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>()<> [0] },
    { Add: Ten<i8>()<> [9223372036854775807] },
    { Sub: Ten<i8>()<> [9223372036854775807] },
    { Mul: Ten<i8>()<> [0] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [0] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>()<> [1] },
    { Add: Ten<i8>()<> [-9223372036854775808] },
    { Sub: Ten<i8>()<> [9223372036854775806] },
    { Mul: Ten<i8>()<> [9223372036854775807] },
    { Div: Ten<i8>()<> [9223372036854775807] },
    { Min: Ten<i8>()<> [1] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>()<> [5] },
    { Add: Ten<i8>()<> [-9223372036854775804] },
    { Sub: Ten<i8>()<> [9223372036854775802] },
    { Mul: Ten<i8>()<> [9223372036854775803] },
    { Div: Ten<i8>()<> [1844674407370955161] },
    { Min: Ten<i8>()<> [5] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[*,*])}):({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]}))
Func sig: (T:i8[], U:i8[*,*]) to ({'  T':i8[]}, {'  U':i8[*,*]}, {Add:i8[*,*]}, {Sub:i8[*,*]}, {Mul:i8[*,*]}, {Div:i8[*,*]}, {Min:i8[*,*]}, {Max:i8[*,*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<i8>(3,4)<0,0>
          [[-9223372036854775804, -9223372036854775804, -9223372036854775804, -9223372036854775804]
           [-9223372036854775804, -9223372036854775804, -9223372036854775804, -9223372036854775804]
           [-9223372036854775804, -9223372036854775804, -9223372036854775804, -9223372036854775804]]
    },
    { Sub: Ten<i8>(3,4)<0,0>
          [[9223372036854775802, 9223372036854775802, 9223372036854775802, 9223372036854775802]
           [9223372036854775802, 9223372036854775802, 9223372036854775802, 9223372036854775802]
           [9223372036854775802, 9223372036854775802, 9223372036854775802, 9223372036854775802]]
    },
    { Mul: Ten<i8>(3,4)<0,0>
          [[9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]]
    },
    { Div: Ten<i8>(3,4)<0,0>
          [[1844674407370955161, 1844674407370955161, 1844674407370955161, 1844674407370955161]
           [1844674407370955161, 1844674407370955161, 1844674407370955161, 1844674407370955161]
           [1844674407370955161, 1844674407370955161, 1844674407370955161, 1844674407370955161]]
    },
    { Min: Ten<i8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<i8>(3,4)<0,0>
          [[9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]]
    })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>()<> [-9223372036854775808] },
    { Add: Ten<i8>()<> [-1] },
    { Sub: Ten<i8>()<> [-1] },
    { Mul: Ten<i8>()<> [-9223372036854775808] },
    { Div: Ten<i8>()<> [0] },
    { Min: Ten<i8>()<> [-9223372036854775808] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###

**** New definitions: T, type: i8[]
**** New definitions: U, type: i8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
BndKind:Tuple, Type:({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):i8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):i8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):i8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):i8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):i8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):i8[])}):({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]}))
Func sig: (T:i8[], U:i8[]) to ({'  T':i8[]}, {'  U':i8[]}, {Add:i8[]}, {Sub:i8[]}, {Mul:i8[]}, {Div:i8[]}, {Min:i8[]}, {Max:i8[]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>()<> [9223372036854775807] },
    {   U: Ten<i8>()<> [9223372036854775807] },
    { Add: Ten<i8>()<> [-2] },
    { Sub: Ten<i8>()<> [0] },
    { Mul: Ten<i8>()<> [1] },
    { Div: Ten<i8>()<> [1] },
    { Min: Ten<i8>()<> [9223372036854775807] },
    { Max: Ten<i8>()<> [9223372036854775807] })
###
