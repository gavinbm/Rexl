**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[*]) to ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(12)<1> [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22] },
    { Sub: Ten<u8>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Mul: Ten<u8>(12)<1> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121] },
    { Div: Ten<u8>(12)<1> [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },
    { Min: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*], U:u8[*,*]) to ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [18446744073709551612, 18446744073709551612, 18446744073709551612, 18446744073709551612]
           [18446744073709551608, 18446744073709551608, 18446744073709551608, 18446744073709551608]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[*]) to ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(4)<1> [0, 2, 4, 6] },
    { Sub: Ten<u8>(4)<1> [0, 0, 0, 0] },
    { Mul: Ten<u8>(4)<1> [0, 1, 4, 9] },
    { Div: Ten<u8>(4)<1> [0, 1, 1, 1] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[*]) to ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>(12)<1> [18446744073709551615, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] },
    { Sub: Ten<u8>(12)<1> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] },
    { Mul: Ten<u8>(12)<1> [0, 18446744073709551615, 18446744073709551614, 18446744073709551613, 18446744073709551612, 18446744073709551611, 18446744073709551610, 18446744073709551609, 18446744073709551608, 18446744073709551607, 18446744073709551606, 18446744073709551605] },
    { Div: Ten<u8>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<u8>(12)<0> [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Sub: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Mul: Ten<u8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Div: Ten<u8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<u8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Max: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>(12)<1> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] },
    { Sub: Ten<u8>(12)<1> [18446744073709551615, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] },
    { Mul: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Div: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Min: Ten<u8>(12)<1> [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },
    { Max: Ten<u8>(12)<1> [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>(12)<1> [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16] },
    { Sub: Ten<u8>(12)<1> [18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614, 18446744073709551615, 0, 1, 2, 3, 4, 5, 6] },
    { Mul: Ten<u8>(12)<1> [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] },
    { Div: Ten<u8>(12)<1> [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2] },
    { Min: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5] },
    { Max: Ten<u8>(12)<1> [5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*], U:u8[*,*]) to ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614]
           [18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614]
           [18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>(12)<1> [9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811, 9223372036854775812, 9223372036854775813, 9223372036854775814, 9223372036854775815, 9223372036854775816, 9223372036854775817, 9223372036854775818, 9223372036854775819] },
    { Sub: Ten<u8>(12)<1> [9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811, 9223372036854775812, 9223372036854775813, 9223372036854775814, 9223372036854775815, 9223372036854775816, 9223372036854775817, 9223372036854775818, 9223372036854775819] },
    { Mul: Ten<u8>(12)<1> [0, 9223372036854775808, 0, 9223372036854775808, 0, 9223372036854775808, 0, 9223372036854775808, 0, 9223372036854775808, 0, 9223372036854775808] },
    { Div: Ten<u8>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<u8>(12)<1> [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>(12)<1> [9223372036854775807, 9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811, 9223372036854775812, 9223372036854775813, 9223372036854775814, 9223372036854775815, 9223372036854775816, 9223372036854775817, 9223372036854775818] },
    { Sub: Ten<u8>(12)<1> [9223372036854775809, 9223372036854775810, 9223372036854775811, 9223372036854775812, 9223372036854775813, 9223372036854775814, 9223372036854775815, 9223372036854775816, 9223372036854775817, 9223372036854775818, 9223372036854775819, 9223372036854775820] },
    { Mul: Ten<u8>(12)<1> [0, 9223372036854775807, 18446744073709551614, 9223372036854775805, 18446744073709551612, 9223372036854775803, 18446744073709551610, 9223372036854775801, 18446744073709551608, 9223372036854775799, 18446744073709551606, 9223372036854775797] },
    { Div: Ten<u8>(12)<1> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<u8>(12)<1> [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807] })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*]) to ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [4, 4, 4, 4]
           [8, 8, 8, 8]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 5, 3, 2]
           [0, 9, 5, 3]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*,*]) to ({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [8, 10, 12, 14]
           [16, 18, 20, 22]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [16, 25, 36, 49]
           [64, 81, 100, 121]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*]) to ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [4, 4, 4, 4]
           [8, 8, 8, 8]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 5, 3, 2]
           [0, 9, 5, 3]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*]) to ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(3,0)<0,0> [] },
    { Sub: Ten<u8>(3,0)<0,0> [] },
    { Mul: Ten<u8>(3,0)<0,0> [] },
    { Div: Ten<u8>(3,0)<0,0> [] },
    { Min: Ten<u8>(3,0)<0,0> [] },
    { Max: Ten<u8>(3,0)<0,0> [] })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>(3,4)<4,1>
          [[18446744073709551615, 0, 1, 2]
           [3, 4, 5, 6]
           [7, 8, 9, 10]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[1, 2, 3, 4]
           [5, 6, 7, 8]
           [9, 10, 11, 12]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 18446744073709551615, 18446744073709551614, 18446744073709551613]
           [18446744073709551612, 18446744073709551611, 18446744073709551610, 18446744073709551609]
           [18446744073709551608, 18446744073709551607, 18446744073709551606, 18446744073709551605]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]
           [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]
           [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>(3,4)<4,1>
          [[1, 2, 3, 4]
           [5, 6, 7, 8]
           [9, 10, 11, 12]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[18446744073709551615, 0, 1, 2]
           [3, 4, 5, 6]
           [7, 8, 9, 10]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[1, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614]
           [18446744073709551615, 0, 1, 2]
           [3, 4, 5, 6]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 1, 1, 1]
           [1, 1, 2, 2]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*,*]) to ({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614]
           [18446744073709551615, 0, 1, 2]
           [3, 4, 5, 6]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 1, 1, 1]
           [1, 1, 2, 2]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>(3,4)<4,1>
          [[9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811]
           [9223372036854775812, 9223372036854775813, 9223372036854775814, 9223372036854775815]
           [9223372036854775816, 9223372036854775817, 9223372036854775818, 9223372036854775819]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811]
           [9223372036854775812, 9223372036854775813, 9223372036854775814, 9223372036854775815]
           [9223372036854775816, 9223372036854775817, 9223372036854775818, 9223372036854775819]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 9223372036854775808, 0, 9223372036854775808]
           [0, 9223372036854775808, 0, 9223372036854775808]
           [0, 9223372036854775808, 0, 9223372036854775808]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>(3,4)<4,1>
          [[9223372036854775807, 9223372036854775808, 9223372036854775809, 9223372036854775810]
           [9223372036854775811, 9223372036854775812, 9223372036854775813, 9223372036854775814]
           [9223372036854775815, 9223372036854775816, 9223372036854775817, 9223372036854775818]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[9223372036854775809, 9223372036854775810, 9223372036854775811, 9223372036854775812]
           [9223372036854775813, 9223372036854775814, 9223372036854775815, 9223372036854775816]
           [9223372036854775817, 9223372036854775818, 9223372036854775819, 9223372036854775820]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 9223372036854775807, 18446744073709551614, 9223372036854775805]
           [18446744073709551612, 9223372036854775803, 18446744073709551610, 9223372036854775801]
           [18446744073709551608, 9223372036854775799, 18446744073709551606, 9223372036854775797]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]]
    })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[*]) to ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(4)<1> [0, 2, 4, 6] },
    { Sub: Ten<u8>(4)<1> [0, 0, 0, 0] },
    { Mul: Ten<u8>(4)<1> [0, 1, 4, 9] },
    { Div: Ten<u8>(4)<1> [0, 1, 1, 1] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*], U:u8[*,*]) to ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[0, 2, 4, 6]
           [4, 6, 8, 10]
           [8, 10, 12, 14]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [18446744073709551612, 18446744073709551612, 18446744073709551612, 18446744073709551612]
           [18446744073709551608, 18446744073709551608, 18446744073709551608, 18446744073709551608]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 1, 4, 9]
           [0, 5, 12, 21]
           [0, 9, 20, 33]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[*]) to ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(4)<1> [0, 2, 4, 6] },
    { Sub: Ten<u8>(4)<1> [0, 0, 0, 0] },
    { Mul: Ten<u8>(4)<1> [0, 1, 4, 9] },
    { Div: Ten<u8>(4)<1> [0, 1, 1, 1] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[*]) to ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>(4)<1> [18446744073709551615, 0, 1, 2] },
    { Sub: Ten<u8>(4)<1> [1, 2, 3, 4] },
    { Mul: Ten<u8>(4)<1> [0, 18446744073709551615, 18446744073709551614, 18446744073709551613] },
    { Div: Ten<u8>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<0> [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Sub: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Mul: Ten<u8>(4)<0> [0, 0, 0, 0] },
    { Div: Ten<u8>(4)<0> [0, 0, 0, 0] },
    { Min: Ten<u8>(4)<0> [0, 0, 0, 0] },
    { Max: Ten<u8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>(4)<1> [1, 2, 3, 4] },
    { Sub: Ten<u8>(4)<1> [18446744073709551615, 0, 1, 2] },
    { Mul: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Div: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Min: Ten<u8>(4)<1> [0, 1, 1, 1] },
    { Max: Ten<u8>(4)<1> [1, 1, 2, 3] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>(4)<1> [5, 6, 7, 8] },
    { Sub: Ten<u8>(4)<1> [18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614] },
    { Mul: Ten<u8>(4)<1> [0, 5, 10, 15] },
    { Div: Ten<u8>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<1> [5, 5, 5, 5] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*], U:u8[*,*]) to ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614]
           [18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614]
           [18446744073709551611, 18446744073709551612, 18446744073709551613, 18446744073709551614]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>(4)<1> [9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811] },
    { Sub: Ten<u8>(4)<1> [9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811] },
    { Mul: Ten<u8>(4)<1> [0, 9223372036854775808, 0, 9223372036854775808] },
    { Div: Ten<u8>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<1> [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(4)<1> [0, 1, 2, 3] },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>(4)<1> [9223372036854775807, 9223372036854775808, 9223372036854775809, 9223372036854775810] },
    { Sub: Ten<u8>(4)<1> [9223372036854775809, 9223372036854775810, 9223372036854775811, 9223372036854775812] },
    { Mul: Ten<u8>(4)<1> [0, 9223372036854775807, 18446744073709551614, 9223372036854775805] },
    { Div: Ten<u8>(4)<1> [0, 0, 0, 0] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<1> [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[*]) to ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*], U:u8[*,*]) to ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,0)<0,0> [] },
    { Sub: Ten<u8>(3,0)<0,0> [] },
    { Mul: Ten<u8>(3,0)<0,0> [] },
    { Div: Ten<u8>(3,0)<0,0> [] },
    { Min: Ten<u8>(3,0)<0,0> [] },
    { Max: Ten<u8>(3,0)<0,0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[*]) to ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[*]) to ({'  T':u8[*]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*], U:u8[*,*]) to ({'  T':u8[*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,0)<0,0> [] },
    { Sub: Ten<u8>(3,0)<0,0> [] },
    { Mul: Ten<u8>(3,0)<0,0> [] },
    { Div: Ten<u8>(3,0)<0,0> [] },
    { Min: Ten<u8>(3,0)<0,0> [] },
    { Max: Ten<u8>(3,0)<0,0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[*], U:u8[]) to ({'  T':u8[*]}, {'  U':u8[]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(0)<0> [] },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(12)<1> [18446744073709551615, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] },
    { Sub: Ten<u8>(12)<1> [18446744073709551615, 18446744073709551614, 18446744073709551613, 18446744073709551612, 18446744073709551611, 18446744073709551610, 18446744073709551609, 18446744073709551608, 18446744073709551607, 18446744073709551606, 18446744073709551605, 18446744073709551604] },
    { Mul: Ten<u8>(12)<1> [0, 18446744073709551615, 18446744073709551614, 18446744073709551613, 18446744073709551612, 18446744073709551611, 18446744073709551610, 18446744073709551609, 18446744073709551608, 18446744073709551607, 18446744073709551606, 18446744073709551605] },
    { Div: Ten<u8>(12)<1> [0, 18446744073709551615, 9223372036854775807, 6148914691236517205, 4611686018427387903, 3689348814741910323, 3074457345618258602, 2635249153387078802, 2305843009213693951, 2049638230412172401, 1844674407370955161, 1676976733973595601] },
    { Min: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<u8>(12)<0> [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[18446744073709551615, 0, 1, 2]
           [3, 4, 5, 6]
           [7, 8, 9, 10]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[18446744073709551615, 18446744073709551614, 18446744073709551613, 18446744073709551612]
           [18446744073709551611, 18446744073709551610, 18446744073709551609, 18446744073709551608]
           [18446744073709551607, 18446744073709551606, 18446744073709551605, 18446744073709551604]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 18446744073709551615, 18446744073709551614, 18446744073709551613]
           [18446744073709551612, 18446744073709551611, 18446744073709551610, 18446744073709551609]
           [18446744073709551608, 18446744073709551607, 18446744073709551606, 18446744073709551605]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 18446744073709551615, 9223372036854775807, 6148914691236517205]
           [4611686018427387903, 3689348814741910323, 3074457345618258602, 2635249153387078802]
           [2305843009213693951, 2049638230412172401, 1844674407370955161, 1676976733973595601]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]
           [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]
           [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(4)<1> [18446744073709551615, 0, 1, 2] },
    { Sub: Ten<u8>(4)<1> [18446744073709551615, 18446744073709551614, 18446744073709551613, 18446744073709551612] },
    { Mul: Ten<u8>(4)<1> [0, 18446744073709551615, 18446744073709551614, 18446744073709551613] },
    { Div: Ten<u8>(4)<1> [0, 18446744073709551615, 9223372036854775807, 6148914691236517205] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<0> [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>()<> [18446744073709551614] },
    { Sub: Ten<u8>()<> [0] },
    { Mul: Ten<u8>()<> [1] },
    { Div: Ten<u8>()<> [1] },
    { Min: Ten<u8>()<> [18446744073709551615] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>()<> [18446744073709551615] },
    { Sub: Ten<u8>()<> [18446744073709551615] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>()<> [0] },
    { Sub: Ten<u8>()<> [18446744073709551614] },
    { Mul: Ten<u8>()<> [18446744073709551615] },
    { Div: Ten<u8>()<> [18446744073709551615] },
    { Min: Ten<u8>()<> [1] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>()<> [4] },
    { Sub: Ten<u8>()<> [18446744073709551610] },
    { Mul: Ten<u8>()<> [18446744073709551611] },
    { Div: Ten<u8>()<> [3689348814741910323] },
    { Min: Ten<u8>()<> [5] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<0,0>
          [[4, 4, 4, 4]
           [4, 4, 4, 4]
           [4, 4, 4, 4]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[18446744073709551610, 18446744073709551610, 18446744073709551610, 18446744073709551610]
           [18446744073709551610, 18446744073709551610, 18446744073709551610, 18446744073709551610]
           [18446744073709551610, 18446744073709551610, 18446744073709551610, 18446744073709551610]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[18446744073709551611, 18446744073709551611, 18446744073709551611, 18446744073709551611]
           [18446744073709551611, 18446744073709551611, 18446744073709551611, 18446744073709551611]
           [18446744073709551611, 18446744073709551611, 18446744073709551611, 18446744073709551611]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[3689348814741910323, 3689348814741910323, 3689348814741910323, 3689348814741910323]
           [3689348814741910323, 3689348814741910323, 3689348814741910323, 3689348814741910323]
           [3689348814741910323, 3689348814741910323, 3689348814741910323, 3689348814741910323]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]
           [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]
           [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>()<> [9223372036854775807] },
    { Sub: Ten<u8>()<> [9223372036854775807] },
    { Mul: Ten<u8>()<> [9223372036854775808] },
    { Div: Ten<u8>()<> [1] },
    { Min: Ten<u8>()<> [9223372036854775808] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [18446744073709551615] },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>()<> [9223372036854775806] },
    { Sub: Ten<u8>()<> [9223372036854775808] },
    { Mul: Ten<u8>()<> [9223372036854775809] },
    { Div: Ten<u8>()<> [2] },
    { Min: Ten<u8>()<> [9223372036854775807] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Sub: Ten<u8>(12)<1> [0, 18446744073709551615, 18446744073709551614, 18446744073709551613, 18446744073709551612, 18446744073709551611, 18446744073709551610, 18446744073709551609, 18446744073709551608, 18446744073709551607, 18446744073709551606, 18446744073709551605] },
    { Mul: Ten<u8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Div: Ten<u8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<u8>(12)<0> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Max: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[0, 18446744073709551615, 18446744073709551614, 18446744073709551613]
           [18446744073709551612, 18446744073709551611, 18446744073709551610, 18446744073709551609]
           [18446744073709551608, 18446744073709551607, 18446744073709551606, 18446744073709551605]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Sub: Ten<u8>(4)<1> [0, 18446744073709551615, 18446744073709551614, 18446744073709551613] },
    { Mul: Ten<u8>(4)<0> [0, 0, 0, 0] },
    { Div: Ten<u8>(4)<0> [0, 0, 0, 0] },
    { Min: Ten<u8>(4)<0> [0, 0, 0, 0] },
    { Max: Ten<u8>(4)<1> [0, 1, 2, 3] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>()<> [18446744073709551615] },
    { Sub: Ten<u8>()<> [1] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>()<> [0] },
    { Sub: Ten<u8>()<> [0] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [0] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>()<> [1] },
    { Sub: Ten<u8>()<> [18446744073709551615] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [1] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>()<> [5] },
    { Sub: Ten<u8>()<> [18446744073709551611] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [5] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[18446744073709551611, 18446744073709551611, 18446744073709551611, 18446744073709551611]
           [18446744073709551611, 18446744073709551611, 18446744073709551611, 18446744073709551611]
           [18446744073709551611, 18446744073709551611, 18446744073709551611, 18446744073709551611]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>()<> [9223372036854775808] },
    { Sub: Ten<u8>()<> [9223372036854775808] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [0] },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>()<> [9223372036854775807] },
    { Sub: Ten<u8>()<> [9223372036854775809] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [9223372036854775807] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(12)<1> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] },
    { Sub: Ten<u8>(12)<1> [1, 0, 18446744073709551615, 18446744073709551614, 18446744073709551613, 18446744073709551612, 18446744073709551611, 18446744073709551610, 18446744073709551609, 18446744073709551608, 18446744073709551607, 18446744073709551606] },
    { Mul: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Div: Ten<u8>(12)<1> [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<u8>(12)<1> [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },
    { Max: Ten<u8>(12)<1> [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[1, 2, 3, 4]
           [5, 6, 7, 8]
           [9, 10, 11, 12]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[1, 0, 18446744073709551615, 18446744073709551614]
           [18446744073709551613, 18446744073709551612, 18446744073709551611, 18446744073709551610]
           [18446744073709551609, 18446744073709551608, 18446744073709551607, 18446744073709551606]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 1, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[1, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(4)<1> [1, 2, 3, 4] },
    { Sub: Ten<u8>(4)<1> [1, 0, 18446744073709551615, 18446744073709551614] },
    { Mul: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Div: Ten<u8>(4)<1> [0, 1, 0, 0] },
    { Min: Ten<u8>(4)<1> [0, 1, 1, 1] },
    { Max: Ten<u8>(4)<1> [1, 1, 2, 3] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>()<> [0] },
    { Sub: Ten<u8>()<> [2] },
    { Mul: Ten<u8>()<> [18446744073709551615] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [1] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>()<> [1] },
    { Sub: Ten<u8>()<> [1] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [1] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>()<> [2] },
    { Sub: Ten<u8>()<> [0] },
    { Mul: Ten<u8>()<> [1] },
    { Div: Ten<u8>()<> [1] },
    { Min: Ten<u8>()<> [1] },
    { Max: Ten<u8>()<> [1] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>()<> [6] },
    { Sub: Ten<u8>()<> [18446744073709551612] },
    { Mul: Ten<u8>()<> [5] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [1] },
    { Max: Ten<u8>()<> [5] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<0,0>
          [[6, 6, 6, 6]
           [6, 6, 6, 6]
           [6, 6, 6, 6]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[18446744073709551612, 18446744073709551612, 18446744073709551612, 18446744073709551612]
           [18446744073709551612, 18446744073709551612, 18446744073709551612, 18446744073709551612]
           [18446744073709551612, 18446744073709551612, 18446744073709551612, 18446744073709551612]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>()<> [9223372036854775809] },
    { Sub: Ten<u8>()<> [9223372036854775809] },
    { Mul: Ten<u8>()<> [9223372036854775808] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [1] },
    { Max: Ten<u8>()<> [9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [1] },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>()<> [9223372036854775808] },
    { Sub: Ten<u8>()<> [9223372036854775810] },
    { Mul: Ten<u8>()<> [9223372036854775807] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [1] },
    { Max: Ten<u8>()<> [9223372036854775807] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(12)<1> [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16] },
    { Sub: Ten<u8>(12)<1> [5, 4, 3, 2, 1, 0, 18446744073709551615, 18446744073709551614, 18446744073709551613, 18446744073709551612, 18446744073709551611, 18446744073709551610] },
    { Mul: Ten<u8>(12)<1> [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] },
    { Div: Ten<u8>(12)<1> [0, 5, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0] },
    { Min: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5] },
    { Max: Ten<u8>(12)<1> [5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[5, 4, 3, 2]
           [1, 0, 18446744073709551615, 18446744073709551614]
           [18446744073709551613, 18446744073709551612, 18446744073709551611, 18446744073709551610]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 5, 2, 1]
           [1, 1, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(4)<1> [5, 6, 7, 8] },
    { Sub: Ten<u8>(4)<1> [5, 4, 3, 2] },
    { Mul: Ten<u8>(4)<1> [0, 5, 10, 15] },
    { Div: Ten<u8>(4)<1> [0, 5, 2, 1] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<1> [5, 5, 5, 5] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>()<> [4] },
    { Sub: Ten<u8>()<> [6] },
    { Mul: Ten<u8>()<> [18446744073709551611] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [5] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>()<> [5] },
    { Sub: Ten<u8>()<> [5] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [5] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>()<> [6] },
    { Sub: Ten<u8>()<> [4] },
    { Mul: Ten<u8>()<> [5] },
    { Div: Ten<u8>()<> [5] },
    { Min: Ten<u8>()<> [1] },
    { Max: Ten<u8>()<> [5] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>()<> [10] },
    { Sub: Ten<u8>()<> [0] },
    { Mul: Ten<u8>()<> [25] },
    { Div: Ten<u8>()<> [1] },
    { Min: Ten<u8>()<> [5] },
    { Max: Ten<u8>()<> [5] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<0,0>
          [[10, 10, 10, 10]
           [10, 10, 10, 10]
           [10, 10, 10, 10]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>()<> [9223372036854775813] },
    { Sub: Ten<u8>()<> [9223372036854775813] },
    { Mul: Ten<u8>()<> [9223372036854775808] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [5] },
    { Max: Ten<u8>()<> [9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [5] },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>()<> [9223372036854775812] },
    { Sub: Ten<u8>()<> [9223372036854775814] },
    { Mul: Ten<u8>()<> [9223372036854775803] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [5] },
    { Max: Ten<u8>()<> [9223372036854775807] })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*]) to ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[5, 4, 3, 2]
           [5, 4, 3, 2]
           [5, 4, 3, 2]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 5, 2, 1]
           [0, 5, 2, 1]
           [0, 5, 2, 1]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*,*]) to ({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [9, 10, 11, 12]
           [13, 14, 15, 16]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[5, 4, 3, 2]
           [1, 0, 18446744073709551615, 18446744073709551614]
           [18446744073709551613, 18446744073709551612, 18446744073709551611, 18446744073709551610]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [20, 25, 30, 35]
           [40, 45, 50, 55]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 5, 2, 1]
           [1, 1, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 6, 7]
           [8, 9, 10, 11]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*]) to ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(3,4)<4,1>
          [[5, 6, 7, 8]
           [5, 6, 7, 8]
           [5, 6, 7, 8]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[5, 4, 3, 2]
           [5, 4, 3, 2]
           [5, 4, 3, 2]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 5, 10, 15]
           [0, 5, 10, 15]
           [0, 5, 10, 15]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 5, 2, 1]
           [0, 5, 2, 1]
           [0, 5, 2, 1]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [0, 1, 2, 3]
           [0, 1, 2, 3]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*]) to ({'  T':u8[*,*]}, {'  U':u8[*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(3,0)<0,0> [] },
    { Sub: Ten<u8>(3,0)<0,0> [] },
    { Mul: Ten<u8>(3,0)<0,0> [] },
    { Div: Ten<u8>(3,0)<0,0> [] },
    { Min: Ten<u8>(3,0)<0,0> [] },
    { Max: Ten<u8>(3,0)<0,0> [] })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>(3,4)<0,0>
          [[4, 4, 4, 4]
           [4, 4, 4, 4]
           [4, 4, 4, 4]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[6, 6, 6, 6]
           [6, 6, 6, 6]
           [6, 6, 6, 6]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[18446744073709551611, 18446744073709551611, 18446744073709551611, 18446744073709551611]
           [18446744073709551611, 18446744073709551611, 18446744073709551611, 18446744073709551611]
           [18446744073709551611, 18446744073709551611, 18446744073709551611, 18446744073709551611]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]
           [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]
           [18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>(3,4)<0,0>
          [[6, 6, 6, 6]
           [6, 6, 6, 6]
           [6, 6, 6, 6]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[4, 4, 4, 4]
           [4, 4, 4, 4]
           [4, 4, 4, 4]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>(3,4)<0,0>
          [[10, 10, 10, 10]
           [10, 10, 10, 10]
           [10, 10, 10, 10]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[*,*]) to ({'  T':u8[*,*]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<0,0>
          [[10, 10, 10, 10]
           [10, 10, 10, 10]
           [10, 10, 10, 10]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[25, 25, 25, 25]
           [25, 25, 25, 25]
           [25, 25, 25, 25]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[1, 1, 1, 1]
           [1, 1, 1, 1]
           [1, 1, 1, 1]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>(3,4)<0,0>
          [[9223372036854775813, 9223372036854775813, 9223372036854775813, 9223372036854775813]
           [9223372036854775813, 9223372036854775813, 9223372036854775813, 9223372036854775813]
           [9223372036854775813, 9223372036854775813, 9223372036854775813, 9223372036854775813]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[9223372036854775813, 9223372036854775813, 9223372036854775813, 9223372036854775813]
           [9223372036854775813, 9223372036854775813, 9223372036854775813, 9223372036854775813]
           [9223372036854775813, 9223372036854775813, 9223372036854775813, 9223372036854775813]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]]
    })
###

**** New definitions: T, type: u8[*,*]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[*,*], U:u8[]) to ({'  T':u8[*,*]}, {'  U':u8[]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>(3,4)<0,0>
          [[9223372036854775812, 9223372036854775812, 9223372036854775812, 9223372036854775812]
           [9223372036854775812, 9223372036854775812, 9223372036854775812, 9223372036854775812]
           [9223372036854775812, 9223372036854775812, 9223372036854775812, 9223372036854775812]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[9223372036854775814, 9223372036854775814, 9223372036854775814, 9223372036854775814]
           [9223372036854775814, 9223372036854775814, 9223372036854775814, 9223372036854775814]
           [9223372036854775814, 9223372036854775814, 9223372036854775814, 9223372036854775814]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[0, 0, 0, 0]
           [0, 0, 0, 0]
           [0, 0, 0, 0]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(12)<1> [9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811, 9223372036854775812, 9223372036854775813, 9223372036854775814, 9223372036854775815, 9223372036854775816, 9223372036854775817, 9223372036854775818, 9223372036854775819] },
    { Sub: Ten<u8>(12)<1> [9223372036854775808, 9223372036854775807, 9223372036854775806, 9223372036854775805, 9223372036854775804, 9223372036854775803, 9223372036854775802, 9223372036854775801, 9223372036854775800, 9223372036854775799, 9223372036854775798, 9223372036854775797] },
    { Mul: Ten<u8>(12)<1> [0, 9223372036854775808, 0, 9223372036854775808, 0, 9223372036854775808, 0, 9223372036854775808, 0, 9223372036854775808, 0, 9223372036854775808] },
    { Div: Ten<u8>(12)<1> [0, 9223372036854775808, 4611686018427387904, 3074457345618258602, 2305843009213693952, 1844674407370955161, 1537228672809129301, 1317624576693539401, 1152921504606846976, 1024819115206086200, 922337203685477580, 838488366986797800] },
    { Min: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<u8>(12)<1> [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811]
           [9223372036854775812, 9223372036854775813, 9223372036854775814, 9223372036854775815]
           [9223372036854775816, 9223372036854775817, 9223372036854775818, 9223372036854775819]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[9223372036854775808, 9223372036854775807, 9223372036854775806, 9223372036854775805]
           [9223372036854775804, 9223372036854775803, 9223372036854775802, 9223372036854775801]
           [9223372036854775800, 9223372036854775799, 9223372036854775798, 9223372036854775797]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 9223372036854775808, 0, 9223372036854775808]
           [0, 9223372036854775808, 0, 9223372036854775808]
           [0, 9223372036854775808, 0, 9223372036854775808]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 9223372036854775808, 4611686018427387904, 3074457345618258602]
           [2305843009213693952, 1844674407370955161, 1537228672809129301, 1317624576693539401]
           [1152921504606846976, 1024819115206086200, 922337203685477580, 838488366986797800]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(4)<1> [9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811] },
    { Sub: Ten<u8>(4)<1> [9223372036854775808, 9223372036854775807, 9223372036854775806, 9223372036854775805] },
    { Mul: Ten<u8>(4)<1> [0, 9223372036854775808, 0, 9223372036854775808] },
    { Div: Ten<u8>(4)<1> [0, 9223372036854775808, 4611686018427387904, 3074457345618258602] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<1> [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>()<> [9223372036854775807] },
    { Sub: Ten<u8>()<> [9223372036854775809] },
    { Mul: Ten<u8>()<> [9223372036854775808] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [9223372036854775808] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>()<> [9223372036854775808] },
    { Sub: Ten<u8>()<> [9223372036854775808] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>()<> [9223372036854775809] },
    { Sub: Ten<u8>()<> [9223372036854775807] },
    { Mul: Ten<u8>()<> [9223372036854775808] },
    { Div: Ten<u8>()<> [9223372036854775808] },
    { Min: Ten<u8>()<> [1] },
    { Max: Ten<u8>()<> [9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>()<> [9223372036854775813] },
    { Sub: Ten<u8>()<> [9223372036854775803] },
    { Mul: Ten<u8>()<> [9223372036854775808] },
    { Div: Ten<u8>()<> [1844674407370955161] },
    { Min: Ten<u8>()<> [5] },
    { Max: Ten<u8>()<> [9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<0,0>
          [[9223372036854775813, 9223372036854775813, 9223372036854775813, 9223372036854775813]
           [9223372036854775813, 9223372036854775813, 9223372036854775813, 9223372036854775813]
           [9223372036854775813, 9223372036854775813, 9223372036854775813, 9223372036854775813]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[1844674407370955161, 1844674407370955161, 1844674407370955161, 1844674407370955161]
           [1844674407370955161, 1844674407370955161, 1844674407370955161, 1844674407370955161]
           [1844674407370955161, 1844674407370955161, 1844674407370955161, 1844674407370955161]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]
           [9223372036854775808, 9223372036854775808, 9223372036854775808, 9223372036854775808]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>()<> [0] },
    { Sub: Ten<u8>()<> [0] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [1] },
    { Min: Ten<u8>()<> [9223372036854775808] },
    { Max: Ten<u8>()<> [9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775808] },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>()<> [18446744073709551615] },
    { Sub: Ten<u8>()<> [1] },
    { Mul: Ten<u8>()<> [9223372036854775808] },
    { Div: Ten<u8>()<> [1] },
    { Min: Ten<u8>()<> [9223372036854775807] },
    { Max: Ten<u8>()<> [9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Add: Ten<u8>(12)<1> [9223372036854775807, 9223372036854775808, 9223372036854775809, 9223372036854775810, 9223372036854775811, 9223372036854775812, 9223372036854775813, 9223372036854775814, 9223372036854775815, 9223372036854775816, 9223372036854775817, 9223372036854775818] },
    { Sub: Ten<u8>(12)<1> [9223372036854775807, 9223372036854775806, 9223372036854775805, 9223372036854775804, 9223372036854775803, 9223372036854775802, 9223372036854775801, 9223372036854775800, 9223372036854775799, 9223372036854775798, 9223372036854775797, 9223372036854775796] },
    { Mul: Ten<u8>(12)<1> [0, 9223372036854775807, 18446744073709551614, 9223372036854775805, 18446744073709551612, 9223372036854775803, 18446744073709551610, 9223372036854775801, 18446744073709551608, 9223372036854775799, 18446744073709551606, 9223372036854775797] },
    { Div: Ten<u8>(12)<1> [0, 9223372036854775807, 4611686018427387903, 3074457345618258602, 2305843009213693951, 1844674407370955161, 1537228672809129301, 1317624576693539401, 1152921504606846975, 1024819115206086200, 922337203685477580, 838488366986797800] },
    { Min: Ten<u8>(12)<1> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },
    { Max: Ten<u8>(12)<1> [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Add: Ten<u8>(3,4)<4,1>
          [[9223372036854775807, 9223372036854775808, 9223372036854775809, 9223372036854775810]
           [9223372036854775811, 9223372036854775812, 9223372036854775813, 9223372036854775814]
           [9223372036854775815, 9223372036854775816, 9223372036854775817, 9223372036854775818]]
    },
    { Sub: Ten<u8>(3,4)<4,1>
          [[9223372036854775807, 9223372036854775806, 9223372036854775805, 9223372036854775804]
           [9223372036854775803, 9223372036854775802, 9223372036854775801, 9223372036854775800]
           [9223372036854775799, 9223372036854775798, 9223372036854775797, 9223372036854775796]]
    },
    { Mul: Ten<u8>(3,4)<4,1>
          [[0, 9223372036854775807, 18446744073709551614, 9223372036854775805]
           [18446744073709551612, 9223372036854775803, 18446744073709551610, 9223372036854775801]
           [18446744073709551608, 9223372036854775799, 18446744073709551606, 9223372036854775797]]
    },
    { Div: Ten<u8>(3,4)<4,1>
          [[0, 9223372036854775807, 4611686018427387903, 3074457345618258602]
           [2305843009213693951, 1844674407370955161, 1537228672809129301, 1317624576693539401]
           [1152921504606846975, 1024819115206086200, 922337203685477580, 838488366986797800]]
    },
    { Min: Ten<u8>(3,4)<4,1>
          [[0, 1, 2, 3]
           [4, 5, 6, 7]
           [8, 9, 10, 11]]
    },
    { Max: Ten<u8>(3,4)<4,1>
          [[9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Add: Ten<u8>(4)<1> [9223372036854775807, 9223372036854775808, 9223372036854775809, 9223372036854775810] },
    { Sub: Ten<u8>(4)<1> [9223372036854775807, 9223372036854775806, 9223372036854775805, 9223372036854775804] },
    { Mul: Ten<u8>(4)<1> [0, 9223372036854775807, 18446744073709551614, 9223372036854775805] },
    { Div: Ten<u8>(4)<1> [0, 9223372036854775807, 4611686018427387903, 3074457345618258602] },
    { Min: Ten<u8>(4)<1> [0, 1, 2, 3] },
    { Max: Ten<u8>(4)<1> [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*])}):({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]}))
Func sig: (T:u8[], U:u8[*]) to ({'  T':u8[]}, {'  U':u8[*]}, {Add:u8[*]}, {Sub:u8[*]}, {Mul:u8[*]}, {Div:u8[*]}, {Min:u8[*]}, {Max:u8[*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>(0)<0> [] },
    { Add: Ten<u8>(0)<0> [] },
    { Sub: Ten<u8>(0)<0> [] },
    { Mul: Ten<u8>(0)<0> [] },
    { Div: Ten<u8>(0)<0> [] },
    { Min: Ten<u8>(0)<0> [] },
    { Max: Ten<u8>(0)<0> [] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>()<> [18446744073709551615] },
    { Add: Ten<u8>()<> [9223372036854775806] },
    { Sub: Ten<u8>()<> [9223372036854775808] },
    { Mul: Ten<u8>()<> [9223372036854775809] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [9223372036854775807] },
    { Max: Ten<u8>()<> [18446744073709551615] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>()<> [0] },
    { Add: Ten<u8>()<> [9223372036854775807] },
    { Sub: Ten<u8>()<> [9223372036854775807] },
    { Mul: Ten<u8>()<> [0] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [0] },
    { Max: Ten<u8>()<> [9223372036854775807] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>()<> [1] },
    { Add: Ten<u8>()<> [9223372036854775808] },
    { Sub: Ten<u8>()<> [9223372036854775806] },
    { Mul: Ten<u8>()<> [9223372036854775807] },
    { Div: Ten<u8>()<> [9223372036854775807] },
    { Min: Ten<u8>()<> [1] },
    { Max: Ten<u8>()<> [9223372036854775807] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>()<> [5] },
    { Add: Ten<u8>()<> [9223372036854775812] },
    { Sub: Ten<u8>()<> [9223372036854775802] },
    { Mul: Ten<u8>()<> [9223372036854775803] },
    { Div: Ten<u8>()<> [1844674407370955161] },
    { Min: Ten<u8>()<> [5] },
    { Max: Ten<u8>()<> [9223372036854775807] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[*,*]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[*,*])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[*,*])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[*,*])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[*,*])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[*,*])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[*,*])}):({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]}))
Func sig: (T:u8[], U:u8[*,*]) to ({'  T':u8[]}, {'  U':u8[*,*]}, {Add:u8[*,*]}, {Sub:u8[*,*]}, {Mul:u8[*,*]}, {Div:u8[*,*]}, {Min:u8[*,*]}, {Max:u8[*,*]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Add: Ten<u8>(3,4)<0,0>
          [[9223372036854775812, 9223372036854775812, 9223372036854775812, 9223372036854775812]
           [9223372036854775812, 9223372036854775812, 9223372036854775812, 9223372036854775812]
           [9223372036854775812, 9223372036854775812, 9223372036854775812, 9223372036854775812]]
    },
    { Sub: Ten<u8>(3,4)<0,0>
          [[9223372036854775802, 9223372036854775802, 9223372036854775802, 9223372036854775802]
           [9223372036854775802, 9223372036854775802, 9223372036854775802, 9223372036854775802]
           [9223372036854775802, 9223372036854775802, 9223372036854775802, 9223372036854775802]]
    },
    { Mul: Ten<u8>(3,4)<0,0>
          [[9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]
           [9223372036854775803, 9223372036854775803, 9223372036854775803, 9223372036854775803]]
    },
    { Div: Ten<u8>(3,4)<0,0>
          [[1844674407370955161, 1844674407370955161, 1844674407370955161, 1844674407370955161]
           [1844674407370955161, 1844674407370955161, 1844674407370955161, 1844674407370955161]
           [1844674407370955161, 1844674407370955161, 1844674407370955161, 1844674407370955161]]
    },
    { Min: Ten<u8>(3,4)<0,0>
          [[5, 5, 5, 5]
           [5, 5, 5, 5]
           [5, 5, 5, 5]]
    },
    { Max: Ten<u8>(3,4)<0,0>
          [[9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]
           [9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807]]
    })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>()<> [9223372036854775808] },
    { Add: Ten<u8>()<> [18446744073709551615] },
    { Sub: Ten<u8>()<> [18446744073709551615] },
    { Mul: Ten<u8>()<> [9223372036854775808] },
    { Div: Ten<u8>()<> [0] },
    { Min: Ten<u8>()<> [9223372036854775807] },
    { Max: Ten<u8>()<> [9223372036854775808] })
###

**** New definitions: T, type: u8[]
**** New definitions: U, type: u8[]

> ({'  T': T }, {'  U': U }, {'Add': T->Add(U) }, {'Sub': T->Sub(U) }, {'Mul': T->Mul(U) }, {'Div': T->Div(U) }, {'Min': T->Min(U) }, {'Max': T->Max(U) })
({ '  T' : T }, { '  U' : U }, { 'Add' : T->Add(U) }, { 'Sub' : T->Sub(U) }, { 'Mul' : T->Mul(U) }, { 'Div' : T->Div(U) }, { 'Min' : T->Min(U) }, { 'Max' : T->Max(U) }) : ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
BndKind:Tuple, Type:({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Add:Call(∂.Tensor.Add(Global(T), Global(U)):u8[])}, {Sub:Call(∂.Tensor.Sub(Global(T), Global(U)):u8[])}, {Mul:Call(∂.Tensor.Mul(Global(T), Global(U)):u8[])}, {Div:Call(∂.Tensor.Div(Global(T), Global(U)):u8[])}, {Min:Call(∂.Tensor.Min(Global(T), Global(U)):u8[])}, {Max:Call(∂.Tensor.Max(Global(T), Global(U)):u8[])}):({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]}))
Func sig: (T:u8[], U:u8[]) to ({'  T':u8[]}, {'  U':u8[]}, {Add:u8[]}, {Sub:u8[]}, {Mul:u8[]}, {Div:u8[]}, {Min:u8[]}, {Max:u8[]})
Type: ({Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>},{Ten<u8>}), Value: (
    {   T: Ten<u8>()<> [9223372036854775807] },
    {   U: Ten<u8>()<> [9223372036854775807] },
    { Add: Ten<u8>()<> [18446744073709551614] },
    { Sub: Ten<u8>()<> [0] },
    { Mul: Ten<u8>()<> [1] },
    { Div: Ten<u8>()<> [1] },
    { Min: Ten<u8>()<> [9223372036854775807] },
    { Max: Ten<u8>()<> [9223372036854775807] })
###
