**** New globals: {T:{QR:r8?, R:r8}*, r:r8, sqr:r8?*, sr:r8*}

> TTest.OneSample(sr)
TTest.OneSample(sr) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.OneSample(Global(sr))))
// (<ctx>, ∂.sr:r8*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.1 [Seq<r8>]
      1) ldloc.1 [Seq<r8>]
      9) ldc.r8 [0]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecReq(Seq<r8>, r8, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 128

Func sig: (<ctx>:x, sr:r8*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.OneSample(sr, r)
TTest.OneSample(sr, r) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.OneSample(Global(sr), Global(r))))
// (<ctx>, ∂.sr:r8*, ∂.r:r8) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.1 [Seq<r8>]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [Seq<r8>]
      1) ldloc.2 [r8]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecReq(Seq<r8>, r8, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 129

Func sig: (<ctx>:x, sr:r8*, r:r8) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.OneSample(sqr)
TTest.OneSample(sqr) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.OneSample(Global(sqr))))
// (<ctx>, ∂.sqr:r8?*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<Opt<r8>>
      1) stloc.1 [Seq<Opt<r8>>]
      1) ldloc.1 [Seq<Opt<r8>>]
      9) ldc.r8 [0]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecOpt(Seq<Opt<r8>>, r8, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 128

Func sig: (<ctx>:x, sqr:r8?*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.OneSample(sqr, r)
TTest.OneSample(sqr, r) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.OneSample(Global(sqr), Global(r))))
// (<ctx>, ∂.sqr:r8?*, ∂.r:r8) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<Opt<r8>>
      1) stloc.1 [Seq<Opt<r8>>]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [Seq<Opt<r8>>]
      1) ldloc.2 [r8]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecOpt(Seq<Opt<r8>>, r8, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 129

Func sig: (<ctx>:x, sqr:r8?*, r:r8) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.TwoSample(sr, sr)
TTest.TwoSample(sr, sr) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
BndKind:Call, Type:{CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}, Bnd:(Call(∂.TTest.TwoSample(Global(sr), Global(sr))))
// (<ctx>, ∂.sr:r8*) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.1 [Seq<r8>]
      1) ldloc.1 [Seq<r8>]
      1) ldloc.1 [Seq<r8>]
      1) ldc.i4.0
      5) newobj {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      2) ldc.i4.s [15]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F9:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:i8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F10:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F11:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecReq(Seq<r8>, Seq<r8>, bool, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out i8, out r8, out r8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 140

Func sig: (<ctx>:x, sr:r8*) to {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
Type: {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { CountX: 0, CountY: 0, Dof: NaN, MeanX: NaN, MeanY: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, VarX: NaN, VarY: NaN }
*** Ctx ping count: 0
###
> TTest.TwoSample(sr, sqr)
TTest.TwoSample(sr, sqr) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
BndKind:Call, Type:{CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}, Bnd:(Call(∂.TTest.TwoSample(Global(sr), Global(sqr))))
// (<ctx>, ∂.sr:r8*, ∂.sqr:r8?*) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.1 [Seq<r8>]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<Opt<r8>>
      1) stloc.2 [Seq<Opt<r8>>]
      1) ldloc.1 [Seq<r8>]
      1) ldloc.2 [Seq<Opt<r8>>]
      1) ldc.i4.0
      5) newobj {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      2) ldc.i4.s [15]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F9:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:i8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F10:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F11:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecYOpt(Seq<r8>, Seq<Opt<r8>>, bool, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out i8, out r8, out r8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 149

Func sig: (<ctx>:x, sr:r8*, sqr:r8?*) to {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
Type: {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { CountX: 0, CountY: 0, Dof: NaN, MeanX: NaN, MeanY: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, VarX: NaN, VarY: NaN }
*** Ctx ping count: 0
###
> TTest.TwoSample(sqr, sr)
TTest.TwoSample(sqr, sr) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
BndKind:Call, Type:{CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}, Bnd:(Call(∂.TTest.TwoSample(Global(sqr), Global(sr))))
// (<ctx>, ∂.sqr:r8?*, ∂.sr:r8*) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<Opt<r8>>
      1) stloc.1 [Seq<Opt<r8>>]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.2 [Seq<r8>]
      1) ldloc.1 [Seq<Opt<r8>>]
      1) ldloc.2 [Seq<r8>]
      1) ldc.i4.0
      5) newobj {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      2) ldc.i4.s [15]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F9:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:i8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F10:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F11:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecXOpt(Seq<Opt<r8>>, Seq<r8>, bool, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out i8, out r8, out r8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 149

Func sig: (<ctx>:x, sqr:r8?*, sr:r8*) to {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
Type: {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { CountX: 0, CountY: 0, Dof: NaN, MeanX: NaN, MeanY: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, VarX: NaN, VarY: NaN }
*** Ctx ping count: 0
###
> TTest.TwoSample(sqr, sqr)
TTest.TwoSample(sqr, sqr) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
BndKind:Call, Type:{CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}, Bnd:(Call(∂.TTest.TwoSample(Global(sqr), Global(sqr))))
// (<ctx>, ∂.sqr:r8?*) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<Opt<r8>>
      1) stloc.1 [Seq<Opt<r8>>]
      1) ldloc.1 [Seq<Opt<r8>>]
      1) ldloc.1 [Seq<Opt<r8>>]
      1) ldc.i4.0
      5) newobj {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      2) ldc.i4.s [15]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F9:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:i8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F10:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F11:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecOpt(Seq<Opt<r8>>, Seq<Opt<r8>>, bool, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out i8, out r8, out r8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 140

Func sig: (<ctx>:x, sqr:r8?*) to {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
Type: {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { CountX: 0, CountY: 0, Dof: NaN, MeanX: NaN, MeanY: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, VarX: NaN, VarY: NaN }
*** Ctx ping count: 0
###
> TTest.TwoSample(sr, sr, equal_var: false)
TTest.TwoSample(sr, sr, equal_var : false) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
BndKind:Call, Type:{CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}, Bnd:(Call(∂.TTest.TwoSample(Global(sr), Global(sr), equal_var : false:b)))
// (<ctx>, ∂.sr:r8*) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.1 [Seq<r8>]
      1) ldloc.1 [Seq<r8>]
      1) ldloc.1 [Seq<r8>]
      1) ldc.i4.0
      5) newobj {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      2) ldc.i4.s [15]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F9:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:i8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F10:r8
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F11:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecReq(Seq<r8>, Seq<r8>, bool, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out i8, out r8, out r8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 140

Func sig: (<ctx>:x, sr:r8*) to {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
Type: {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { CountX: 0, CountY: 0, Dof: NaN, MeanX: NaN, MeanY: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, VarX: NaN, VarY: NaN }
*** Ctx ping count: 0
###
> TTest.TwoSample(sqr, sr, equal_var: true)
TTest.TwoSample(sqr, sr, equal_var : true) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
BndKind:Call, Type:{CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}, Bnd:(Call(∂.TTest.TwoSample(Global(sqr), Global(sr), equal_var : true:b)))
// (<ctx>, ∂.sqr:r8?*, ∂.sr:r8*) : {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<Opt<r8>>
      1) stloc.1 [Seq<Opt<r8>>]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.2 [Seq<r8>]
      1) ldloc.1 [Seq<Opt<r8>>]
      1) ldloc.2 [Seq<r8>]
      1) ldc.i4.1
      5) newobj {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      2) ldc.i4.s [15]
      5) stfld {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F9:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:i8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F10:r8
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}::_F11:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecXOpt(Seq<Opt<r8>>, Seq<r8>, bool, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out i8, out r8, out r8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.3 [{i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 149

Func sig: (<ctx>:x, sqr:r8?*, sr:r8*) to {CountX:i8, CountY:i8, Dof:r8, MeanX:r8, MeanY:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, VarX:r8, VarY:r8}
Type: {i8,i8,r8,r8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { CountX: 0, CountY: 0, Dof: NaN, MeanX: NaN, MeanY: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, VarX: NaN, VarY: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(sr, sr)
TTest.Paired(sr, sr) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired(Global(sr), Global(sr))))
// (<ctx>, ∂.sr:r8*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.1 [Seq<r8>]
      1) ldloc.1 [Seq<r8>]
      1) ldloc.1 [Seq<r8>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecReq(Seq<r8>, Seq<r8>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 120

Func sig: (<ctx>:x, sr:r8*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(sr, sqr)
TTest.Paired(sr, sqr) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired(Global(sr), Global(sqr))))
// (<ctx>, ∂.sr:r8*, ∂.sqr:r8?*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.1 [Seq<r8>]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<Opt<r8>>
      1) stloc.2 [Seq<Opt<r8>>]
      1) ldloc.1 [Seq<r8>]
      1) ldloc.2 [Seq<Opt<r8>>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecYOpt(Seq<r8>, Seq<Opt<r8>>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 129

Func sig: (<ctx>:x, sr:r8*, sqr:r8?*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(sqr, sqr)
TTest.Paired(sqr, sqr) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired(Global(sqr), Global(sqr))))
// (<ctx>, ∂.sqr:r8?*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<Opt<r8>>
      1) stloc.1 [Seq<Opt<r8>>]
      1) ldloc.1 [Seq<Opt<r8>>]
      1) ldloc.1 [Seq<Opt<r8>>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecOpt(Seq<Opt<r8>>, Seq<Opt<r8>>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 120

Func sig: (<ctx>:x, sqr:r8?*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(sqr, sr)
TTest.Paired(sqr, sr) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired(Global(sqr), Global(sr))))
// (<ctx>, ∂.sqr:r8?*, ∂.sr:r8*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<Opt<r8>>
      1) stloc.1 [Seq<Opt<r8>>]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<r8>
      1) stloc.2 [Seq<r8>]
      1) ldloc.1 [Seq<Opt<r8>>]
      1) ldloc.2 [Seq<r8>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecXOpt(Seq<Opt<r8>>, Seq<r8>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.3 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 129

Func sig: (<ctx>:x, sqr:r8?*, sr:r8*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(T, R, R)
TTest.Paired(T, R, R) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired([map:1] Global(T), GetField(Scope(1), R), GetField(Scope(1), R))))
// (<ctx>, ∂.T:{QR:r8?, R:r8}*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Paired_1(Arr<obj>, {r8,r8}):r8
      1) ldarg.1 [{r8,r8}]
      5) ldfld {r8,r8}::_F1:r8
      1) ret
  Total Size: 7

Paired_2(Arr<obj>, {r8,r8}):r8
      1) ldarg.1 [{r8,r8}]
      5) ldfld {r8,r8}::_F1:r8
      1) ret
  Total Size: 7

top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<{r8,r8}>
      1) stloc.1 [Seq<{r8,r8}>]
      1) ldloc.1 [Seq<{r8,r8}>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [Func<{r8,r8},r8>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.1
      5) ldelem [Func<{r8,r8},r8>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecReqSel(Seq<{r8,r8}>, Func<{r8,r8},r8>, Func<{r8,r8},r8>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.2
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 133

Func sig: (<ctx>:x, T:{QR:r8?, R:r8}*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(T, R, QR)
TTest.Paired(T, R, QR) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired([map:1] Global(T), GetField(Scope(1), R), GetField(Scope(1), QR))))
// (<ctx>, ∂.T:{QR:r8?, R:r8}*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Paired_1(Arr<obj>, {r8,r8}):r8
      1) ldarg.1 [{r8,r8}]
      5) ldfld {r8,r8}::_F1:r8
      1) ret
  Total Size: 7

Paired_2(Arr<obj>, {r8,r8}):Opt<r8>
      1) ldarg.1 [{r8,r8}]
      1) dup
      5) ldfld {r8,r8}::_B0:u1
      1) ldc.i4.1
      1) and
      5) brfalse [0]
      5) ldfld {r8,r8}::_F0:r8
      5) newobj Opt<r8>(r8)
      5) br [1]
  Label [0]:
      1) pop
      5) call static CodeGenUtil::GetDefault():Opt<r8>
  Label [1]:
      1) ret
  Total Size: 36

top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<{r8,r8}>
      1) stloc.1 [Seq<{r8,r8}>]
      1) ldloc.1 [Seq<{r8,r8}>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [Func<{r8,r8},r8>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.1
      5) ldelem [Func<{r8,r8},Opt<r8>>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecYOptSel(Seq<{r8,r8}>, Func<{r8,r8},r8>, Func<{r8,r8},Opt<r8>>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.2
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 133

Func sig: (<ctx>:x, T:{QR:r8?, R:r8}*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(T, QR, R)
TTest.Paired(T, QR, R) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired([map:1] Global(T), GetField(Scope(1), QR), GetField(Scope(1), R))))
// (<ctx>, ∂.T:{QR:r8?, R:r8}*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Paired_1(Arr<obj>, {r8,r8}):Opt<r8>
      1) ldarg.1 [{r8,r8}]
      1) dup
      5) ldfld {r8,r8}::_B0:u1
      1) ldc.i4.1
      1) and
      5) brfalse [0]
      5) ldfld {r8,r8}::_F0:r8
      5) newobj Opt<r8>(r8)
      5) br [1]
  Label [0]:
      1) pop
      5) call static CodeGenUtil::GetDefault():Opt<r8>
  Label [1]:
      1) ret
  Total Size: 36

Paired_2(Arr<obj>, {r8,r8}):r8
      1) ldarg.1 [{r8,r8}]
      5) ldfld {r8,r8}::_F1:r8
      1) ret
  Total Size: 7

top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<{r8,r8}>
      1) stloc.1 [Seq<{r8,r8}>]
      1) ldloc.1 [Seq<{r8,r8}>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [Func<{r8,r8},Opt<r8>>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.1
      5) ldelem [Func<{r8,r8},r8>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecXOptSel(Seq<{r8,r8}>, Func<{r8,r8},Opt<r8>>, Func<{r8,r8},r8>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.2
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 133

Func sig: (<ctx>:x, T:{QR:r8?, R:r8}*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(T, QR, QR)
TTest.Paired(T, QR, QR) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired([map:1] Global(T), GetField(Scope(1), QR), GetField(Scope(1), QR))))
// (<ctx>, ∂.T:{QR:r8?, R:r8}*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Paired_1(Arr<obj>, {r8,r8}):Opt<r8>
      1) ldarg.1 [{r8,r8}]
      1) dup
      5) ldfld {r8,r8}::_B0:u1
      1) ldc.i4.1
      1) and
      5) brfalse [0]
      5) ldfld {r8,r8}::_F0:r8
      5) newobj Opt<r8>(r8)
      5) br [1]
  Label [0]:
      1) pop
      5) call static CodeGenUtil::GetDefault():Opt<r8>
  Label [1]:
      1) ret
  Total Size: 36

Paired_2(Arr<obj>, {r8,r8}):Opt<r8>
      1) ldarg.1 [{r8,r8}]
      1) dup
      5) ldfld {r8,r8}::_B0:u1
      1) ldc.i4.1
      1) and
      5) brfalse [0]
      5) ldfld {r8,r8}::_F0:r8
      5) newobj Opt<r8>(r8)
      5) br [1]
  Label [0]:
      1) pop
      5) call static CodeGenUtil::GetDefault():Opt<r8>
  Label [1]:
      1) ret
  Total Size: 36

top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<{r8,r8}>
      1) stloc.1 [Seq<{r8,r8}>]
      1) ldloc.1 [Seq<{r8,r8}>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [Func<{r8,r8},Opt<r8>>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.1
      5) ldelem [Func<{r8,r8},Opt<r8>>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecOptSel(Seq<{r8,r8}>, Func<{r8,r8},Opt<r8>>, Func<{r8,r8},Opt<r8>>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.2
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 133

Func sig: (<ctx>:x, T:{QR:r8?, R:r8}*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(T, R + #, R)
TTest.Paired(T, R + #, R) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired([map:2] Global(T), Add(GetField(Scope(2), R), Num<r8>(Scope(1))), GetField(Scope(2), R))))
// (<ctx>, ∂.T:{QR:r8?, R:r8}*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Paired_1(Arr<obj>, i8, {r8,r8}):r8
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_F1:r8
      1) ldarg.1 [i8]
      1) conv.r8
      1) add
      1) ret
  Total Size: 10

Paired_2(Arr<obj>, i8, {r8,r8}):r8
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_F1:r8
      1) ret
  Total Size: 7

top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<{r8,r8}>
      1) stloc.1 [Seq<{r8,r8}>]
      1) ldloc.1 [Seq<{r8,r8}>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [Func<i8,{r8,r8},r8>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.1
      5) ldelem [Func<i8,{r8,r8},r8>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecReqSelInd(Seq<{r8,r8}>, Func<i8,{r8,r8},r8>, Func<i8,{r8,r8},r8>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.2
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 133

Func sig: (<ctx>:x, T:{QR:r8?, R:r8}*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(T, R, QR + #)
TTest.Paired(T, R, QR + #) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired([map:2] Global(T), GetField(Scope(2), R), Call(∂.Guard([guard:3] GetField(Scope(2), QR), Add(Scope(3), Num<r8>(Scope(1)))):r8?))))
// (<ctx>, ∂.T:{QR:r8?, R:r8}*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Paired_1(Arr<obj>, i8, {r8,r8}):r8
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_F1:r8
      1) ret
  Total Size: 7

Paired_2(Arr<obj>, i8, {r8,r8}):Opt<r8>
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_B0:u1
      1) ldc.i4.1
      1) and
      5) brfalse [0]
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_F0:r8
      1) stloc.0 [r8]
      1) ldloc.0 [r8]
      1) ldarg.1 [i8]
      1) conv.r8
      1) add
      5) newobj Opt<r8>(r8)
      5) br [1]
  Label [0]:
      5) call static CodeGenUtil::GetDefault():Opt<r8>
  Label [1]:
      1) ret
  Total Size: 40

top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<{r8,r8}>
      1) stloc.1 [Seq<{r8,r8}>]
      1) ldloc.1 [Seq<{r8,r8}>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [Func<i8,{r8,r8},r8>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.1
      5) ldelem [Func<i8,{r8,r8},Opt<r8>>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecYOptSelInd(Seq<{r8,r8}>, Func<i8,{r8,r8},r8>, Func<i8,{r8,r8},Opt<r8>>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.2
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 133

Func sig: (<ctx>:x, T:{QR:r8?, R:r8}*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(T, QR + #, R)
TTest.Paired(T, QR + #, R) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired([map:2] Global(T), Call(∂.Guard([guard:3] GetField(Scope(2), QR), Add(Scope(3), Num<r8>(Scope(1)))):r8?), GetField(Scope(2), R))))
// (<ctx>, ∂.T:{QR:r8?, R:r8}*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Paired_1(Arr<obj>, i8, {r8,r8}):Opt<r8>
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_B0:u1
      1) ldc.i4.1
      1) and
      5) brfalse [0]
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_F0:r8
      1) stloc.0 [r8]
      1) ldloc.0 [r8]
      1) ldarg.1 [i8]
      1) conv.r8
      1) add
      5) newobj Opt<r8>(r8)
      5) br [1]
  Label [0]:
      5) call static CodeGenUtil::GetDefault():Opt<r8>
  Label [1]:
      1) ret
  Total Size: 40

Paired_2(Arr<obj>, i8, {r8,r8}):r8
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_F1:r8
      1) ret
  Total Size: 7

top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<{r8,r8}>
      1) stloc.1 [Seq<{r8,r8}>]
      1) ldloc.1 [Seq<{r8,r8}>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [Func<i8,{r8,r8},Opt<r8>>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.1
      5) ldelem [Func<i8,{r8,r8},r8>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecXOptSelInd(Seq<{r8,r8}>, Func<i8,{r8,r8},Opt<r8>>, Func<i8,{r8,r8},r8>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.2
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 133

Func sig: (<ctx>:x, T:{QR:r8?, R:r8}*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
> TTest.Paired(T, QR + #, QR + #)
TTest.Paired(T, QR + #, QR + #) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
BndKind:Call, Type:{Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}, Bnd:(Call(∂.TTest.Paired([map:2] Global(T), Call(∂.Guard([guard:3] GetField(Scope(2), QR), Add(Scope(3), Num<r8>(Scope(1)))):r8?), Call(∂.Guard([guard:4] GetField(Scope(2), QR), Add(Scope(4), Num<r8>(Scope(1)))):r8?))))
// (<ctx>, ∂.T:{QR:r8?, R:r8}*) : {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Paired_1(Arr<obj>, i8, {r8,r8}):Opt<r8>
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_B0:u1
      1) ldc.i4.1
      1) and
      5) brfalse [0]
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_F0:r8
      1) stloc.0 [r8]
      1) ldloc.0 [r8]
      1) ldarg.1 [i8]
      1) conv.r8
      1) add
      5) newobj Opt<r8>(r8)
      5) br [1]
  Label [0]:
      5) call static CodeGenUtil::GetDefault():Opt<r8>
  Label [1]:
      1) ret
  Total Size: 40

Paired_2(Arr<obj>, i8, {r8,r8}):Opt<r8>
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_B0:u1
      1) ldc.i4.1
      1) and
      5) brfalse [0]
      1) ldarg.2 [{r8,r8}]
      5) ldfld {r8,r8}::_F0:r8
      1) stloc.0 [r8]
      1) ldloc.0 [r8]
      1) ldarg.1 [i8]
      1) conv.r8
      1) add
      5) newobj Opt<r8>(r8)
      5) br [1]
  Label [0]:
      5) call static CodeGenUtil::GetDefault():Opt<r8>
  Label [1]:
      1) ret
  Total Size: 40

top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):Seq<{r8,r8}>
      1) stloc.1 [Seq<{r8,r8}>]
      1) ldloc.1 [Seq<{r8,r8}>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.0
      5) ldelem [Func<i8,{r8,r8},Opt<r8>>]
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.1
      5) ldelem [Func<i8,{r8,r8},Opt<r8>>]
      5) newobj {i8,r8,r8,r8,r8,r8,r8,r8,r8}()
      1) dup
      5) ldc.i4 [255]
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B0:u1
      1) dup
      1) ldc.i4.1
      5) stfld {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_B1:u1
      1) stloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F4:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F5:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F3:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F1:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F6:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F7:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F0:i8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F2:r8
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      5) ldflda {i8,r8,r8,r8,r8,r8,r8,r8,r8}::_F8:r8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static Execs::ExecOptSelInd(Seq<{r8,r8}>, Func<i8,{r8,r8},Opt<r8>>, Func<i8,{r8,r8},Opt<r8>>, out r8, out r8, out r8, out r8, out r8, out r8, out i8, out r8, out r8, ExecCtx, i4):Void
      1) ldloc.2 [{i8,r8,r8,r8,r8,r8,r8,r8,r8}]
      1) dup
      1) ldarg.0 [Arr<obj>]
      1) ldc.i4.2
      5) ldelem [RecordRuntimeTypeInfo]
      5) stfld {}::_rrti:RecordRuntimeTypeInfo
      1) ret
  Total Size: 133

Func sig: (<ctx>:x, T:{QR:r8?, R:r8}*) to {Count:i8, Dof:r8, Mean:r8, P2:r8, PL:r8, PR:r8, Stderr:r8, T:r8, Var:r8}
Type: {i8,r8,r8,r8,r8,r8,r8,r8,r8}, Value: { Count: 0, Dof: NaN, Mean: NaN, P2: NaN, PL: NaN, PR: NaN, Stderr: NaN, T: NaN, Var: NaN }
*** Ctx ping count: 0
###
