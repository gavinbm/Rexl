> CastI1("false") = CastI1(Wrap("false"))
CastI1("false") @= CastI1(Wrap("false")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(false)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("true") = CastI1(Wrap("true"))
CastI1("true") @= CastI1(Wrap("true")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(true)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("128") = CastI1(Wrap("128"))
CastI1("128") @= CastI1(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-128:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(128)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("128") = CastI2(Wrap("128"))
CastI2("128") @= CastI2(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(128:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(128)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("128") = CastI4(Wrap("128"))
CastI4("128") @= CastI4(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(128:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(128)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("128") = CastI8(Wrap("128"))
CastI8("128") @= CastI8(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(128:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(128)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("255") = CastI1(Wrap("255"))
CastI1("255") @= CastI1(Wrap("255")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(255)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("255") = CastI2(Wrap("255"))
CastI2("255") @= CastI2(Wrap("255")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(255:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(255)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("255") = CastI4(Wrap("255"))
CastI4("255") @= CastI4(Wrap("255")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(255:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(255)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("255") = CastI8(Wrap("255"))
CastI8("255") @= CastI8(Wrap("255")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(255:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(255)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("32768") = CastI1(Wrap("32768"))
CastI1("32768") @= CastI1(Wrap("32768")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(32768)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("32768") = CastI2(Wrap("32768"))
CastI2("32768") @= CastI2(Wrap("32768")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-32768:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(32768)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("32768") = CastI4(Wrap("32768"))
CastI4("32768") @= CastI4(Wrap("32768")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(32768:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(32768)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("32768") = CastI8(Wrap("32768"))
CastI8("32768") @= CastI8(Wrap("32768")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(32768:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(32768)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("65535") = CastI1(Wrap("65535"))
CastI1("65535") @= CastI1(Wrap("65535")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(65535)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("65535") = CastI2(Wrap("65535"))
CastI2("65535") @= CastI2(Wrap("65535")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(65535)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("65535") = CastI4(Wrap("65535"))
CastI4("65535") @= CastI4(Wrap("65535")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(65535:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(65535)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("65535") = CastI8(Wrap("65535"))
CastI8("65535") @= CastI8(Wrap("65535")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(65535:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(65535)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("2147483648") = CastI1(Wrap("2147483648"))
CastI1("2147483648") @= CastI1(Wrap("2147483648")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(2147483648)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("2147483648") = CastI2(Wrap("2147483648"))
CastI2("2147483648") @= CastI2(Wrap("2147483648")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(2147483648)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("2147483648") = CastI4(Wrap("2147483648"))
CastI4("2147483648") @= CastI4(Wrap("2147483648")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-2147483648:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(2147483648)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("2147483648") = CastI8(Wrap("2147483648"))
CastI8("2147483648") @= CastI8(Wrap("2147483648")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(2147483648:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(2147483648)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("4294967295") = CastI1(Wrap("4294967295"))
CastI1("4294967295") @= CastI1(Wrap("4294967295")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(4294967295)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("4294967295") = CastI2(Wrap("4294967295"))
CastI2("4294967295") @= CastI2(Wrap("4294967295")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(4294967295)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("4294967295") = CastI4(Wrap("4294967295"))
CastI4("4294967295") @= CastI4(Wrap("4294967295")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(4294967295)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("4294967295") = CastI8(Wrap("4294967295"))
CastI8("4294967295") @= CastI8(Wrap("4294967295")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(4294967295:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(4294967295)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("9223372036854775808") = CastI1(Wrap("9223372036854775808"))
CastI1("9223372036854775808") @= CastI1(Wrap("9223372036854775808")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(9223372036854775808)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("9223372036854775808") = CastI2(Wrap("9223372036854775808"))
CastI2("9223372036854775808") @= CastI2(Wrap("9223372036854775808")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(9223372036854775808)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("9223372036854775808") = CastI4(Wrap("9223372036854775808"))
CastI4("9223372036854775808") @= CastI4(Wrap("9223372036854775808")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(9223372036854775808)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("9223372036854775808") = CastI8(Wrap("9223372036854775808"))
CastI8("9223372036854775808") @= CastI8(Wrap("9223372036854775808")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-9223372036854775808:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(9223372036854775808)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("9223372036854775808") = CastIA(Wrap("9223372036854775808"))
CastIA("9223372036854775808") @= CastIA(Wrap("9223372036854775808")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(9223372036854775808:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(9223372036854775808)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("18446744073709551615") = CastI1(Wrap("18446744073709551615"))
CastI1("18446744073709551615") @= CastI1(Wrap("18446744073709551615")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(18446744073709551615)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("18446744073709551615") = CastI2(Wrap("18446744073709551615"))
CastI2("18446744073709551615") @= CastI2(Wrap("18446744073709551615")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(18446744073709551615)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("18446744073709551615") = CastI4(Wrap("18446744073709551615"))
CastI4("18446744073709551615") @= CastI4(Wrap("18446744073709551615")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(18446744073709551615)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("18446744073709551615") = CastI8(Wrap("18446744073709551615"))
CastI8("18446744073709551615") @= CastI8(Wrap("18446744073709551615")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(18446744073709551615)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("18446744073709551615") = CastIA(Wrap("18446744073709551615"))
CastIA("18446744073709551615") @= CastIA(Wrap("18446744073709551615")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(18446744073709551615:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(18446744073709551615)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("127") = CastI1(Wrap("127"))
CastI1("127") @= CastI1(Wrap("127")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(127:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(127)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("127") = CastI2(Wrap("127"))
CastI2("127") @= CastI2(Wrap("127")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(127:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(127)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("127") = CastI4(Wrap("127"))
CastI4("127") @= CastI4(Wrap("127")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(127:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(127)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("127") = CastI8(Wrap("127"))
CastI8("127") @= CastI8(Wrap("127")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(127:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(127)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("32767") = CastI1(Wrap("32767"))
CastI1("32767") @= CastI1(Wrap("32767")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(32767)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("32767") = CastI2(Wrap("32767"))
CastI2("32767") @= CastI2(Wrap("32767")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(32767:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(32767)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("32767") = CastI4(Wrap("32767"))
CastI4("32767") @= CastI4(Wrap("32767")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(32767:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(32767)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("32767") = CastI8(Wrap("32767"))
CastI8("32767") @= CastI8(Wrap("32767")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(32767:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(32767)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("2147483647") = CastI1(Wrap("2147483647"))
CastI1("2147483647") @= CastI1(Wrap("2147483647")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(2147483647)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("2147483647") = CastI2(Wrap("2147483647"))
CastI2("2147483647") @= CastI2(Wrap("2147483647")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(2147483647)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("2147483647") = CastI4(Wrap("2147483647"))
CastI4("2147483647") @= CastI4(Wrap("2147483647")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(2147483647:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(2147483647)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("2147483647") = CastI8(Wrap("2147483647"))
CastI8("2147483647") @= CastI8(Wrap("2147483647")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(2147483647:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(2147483647)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("9223372036854775807") = CastI1(Wrap("9223372036854775807"))
CastI1("9223372036854775807") @= CastI1(Wrap("9223372036854775807")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(9223372036854775807)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("9223372036854775807") = CastI2(Wrap("9223372036854775807"))
CastI2("9223372036854775807") @= CastI2(Wrap("9223372036854775807")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(9223372036854775807)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("9223372036854775807") = CastI4(Wrap("9223372036854775807"))
CastI4("9223372036854775807") @= CastI4(Wrap("9223372036854775807")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(9223372036854775807)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("9223372036854775807") = CastI8(Wrap("9223372036854775807"))
CastI8("9223372036854775807") @= CastI8(Wrap("9223372036854775807")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(9223372036854775807:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(9223372036854775807)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("9223372036854775807") = CastIA(Wrap("9223372036854775807"))
CastIA("9223372036854775807") @= CastIA(Wrap("9223372036854775807")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(9223372036854775807:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(9223372036854775807)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("32767.9") = CastI2(Wrap("32767.9"))
CastI2("32767.9") @= CastI2(Wrap("32767.9")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(32767.9)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("32768.8") = CastI2(Wrap("32768.8"))
CastI2("32768.8") @= CastI2(Wrap("32768.8")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(32768.8)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("-123.456") = CastI2(Wrap("-123.456"))
CastI2("-123.456") @= CastI2(Wrap("-123.456")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(-123.456)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("-0.0") = CastI2(Wrap("-0.0"))
CastI2("-0.0") @= CastI2(Wrap("-0.0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(-0.0)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("-0.0") = CastIA(Wrap("-0.0"))
CastIA("-0.0") @= CastIA(Wrap("-0.0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(-0.0)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("32767.9") = CastR4(Wrap("32767.9"))
CastR4("32767.9") @= CastR4(Wrap("32767.9")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(32767.900390625:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(32767.9)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("32768.8") = CastR4(Wrap("32768.8"))
CastR4("32768.8") @= CastR4(Wrap("32768.8")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(32768.80078125:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(32768.8)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-123.456") = CastR4(Wrap("-123.456"))
CastR4("-123.456") @= CastR4(Wrap("-123.456")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-123.45600128173828:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(-123.456)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> 1/CastR4("-0.0") = 1/CastR4(Wrap("-0.0"))
1 / CastR4("-0.0") @= 1 / CastR4(Wrap("-0.0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r8 @= Mul([/] Num<r8>(Call(∂.CastR4(Call(∂.Test.Wrap(str(-0.0)):s)):r4)))))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("2e300") = CastI8(Wrap("2e300"))
CastI8("2e300") @= CastI8(Wrap("2e300")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(2e300)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU8("2e300") = CastU8(Wrap("2e300"))
CastU8("2e300") @= CastU8(Wrap("2e300")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:u8 @= Call(∂.CastU8(Call(∂.Test.Wrap(str(2e300)):s)):u8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("2e300") = CastR8(Wrap("2e300"))
CastR8("2e300") @= CastR8(Wrap("2e300")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(2E+300:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(2e300)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("-50") = CastI1(Wrap("-50"))
CastI1("-50") @= CastI1(Wrap("-50")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-50:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(-50)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("50") = CastI1(Wrap("50"))
CastI1("50") @= CastI1(Wrap("50")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(50:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(50)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1("50") = CastU1(Wrap("50"))
CastU1("50") @= CastU1(Wrap("50")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(50:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str(50)):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1("-50") = CastU1(Wrap("-50"))
CastU1("-50") @= CastU1(Wrap("-50")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(206:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str(-50)):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("50") = CastR4(Wrap("50"))
CastR4("50") @= CastR4(Wrap("50")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(50:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(50)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-50") = CastR8(Wrap("-50"))
CastR8("-50") @= CastR8(Wrap("-50")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-50:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(-50)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("81985529216486895") = CastI1(Wrap("81985529216486895"))
CastI1("81985529216486895") @= CastI1(Wrap("81985529216486895")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-17:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(81985529216486895)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("81985529216486895") = CastI2(Wrap("81985529216486895"))
CastI2("81985529216486895") @= CastI2(Wrap("81985529216486895")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-12817:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(81985529216486895)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("81985529216486895") = CastI4(Wrap("81985529216486895"))
CastI4("81985529216486895") @= CastI4(Wrap("81985529216486895")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1985229329:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(81985529216486895)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("81985529216486895") = CastI8(Wrap("81985529216486895"))
CastI8("81985529216486895") @= CastI8(Wrap("81985529216486895")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(81985529216486895:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(81985529216486895)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("81985529216486896") = CastI1(Wrap("81985529216486896"))
CastI1("81985529216486896") @= CastI1(Wrap("81985529216486896")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-16:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(81985529216486896)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("81985529216486896") = CastI2(Wrap("81985529216486896"))
CastI2("81985529216486896") @= CastI2(Wrap("81985529216486896")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-12816:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(81985529216486896)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI4("81985529216486896") = CastI4(Wrap("81985529216486896"))
CastI4("81985529216486896") @= CastI4(Wrap("81985529216486896")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-1985229328:i4 @= Call(∂.CastI4(Call(∂.Test.Wrap(str(81985529216486896)):s)):i4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("81985529216486896") = CastI8(Wrap("81985529216486896"))
CastI8("81985529216486896") @= CastI8(Wrap("81985529216486896")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(81985529216486896:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(81985529216486896)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("128") = CastI1(Wrap("128"))
CastI1("128") @= CastI1(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-128:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(128)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("-128") = CastI1(Wrap("-128"))
CastI1("-128") @= CastI1(Wrap("-128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-128:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(-128)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1("128") = CastU1(Wrap("128"))
CastU1("128") @= CastU1(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(128:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str(128)):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU2("128") = CastU2(Wrap("128"))
CastU2("128") @= CastU2(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(128:u2 @= Call(∂.CastU2(Call(∂.Test.Wrap(str(128)):s)):u2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU4("128") = CastU4(Wrap("128"))
CastU4("128") @= CastU4(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(128:u4 @= Call(∂.CastU4(Call(∂.Test.Wrap(str(128)):s)):u4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU8("128") = CastU8(Wrap("128"))
CastU8("128") @= CastU8(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(128:u8 @= Call(∂.CastU8(Call(∂.Test.Wrap(str(128)):s)):u8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("128") = CastR4(Wrap("128"))
CastR4("128") @= CastR4(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(128:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(128)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("128") = CastR8(Wrap("128"))
CastR8("128") @= CastR8(Wrap("128")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(128:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(128)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-4e37") = CastR4(Wrap("-4e37"))
CastR4("-4e37") @= CastR4(Wrap("-4e37")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-3.999999973526325E+37:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(-4e37)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-4 e37") = CastR4(Wrap("-4 e37"))
CastR4("-4 e37") @= CastR4(Wrap("-4 e37")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(-4 e37)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-2e200") = CastR8(Wrap("-2e200"))
CastR8("-2e200") @= CastR8(Wrap("-2e200")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-2E+200:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(-2e200)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-2e-200") = CastR8(Wrap("-2e-200"))
CastR8("-2e-200") @= CastR8(Wrap("-2e-200")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-2E-200:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(-2e-200)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-2e300") = CastR4(Wrap("-2e300"))
CastR4("-2e300") @= CastR4(Wrap("-2e300")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(-2e300)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-2e300") = CastR8(Wrap("-2e300"))
CastR8("-2e300") @= CastR8(Wrap("-2e300")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-2E+300:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(-2e300)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("") = CastI1(Wrap(""))
CastI1("") @= CastI1(Wrap("")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str()):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1("") = CastU1(Wrap(""))
CastU1("") @= CastU1(Wrap("")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str()):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("") = CastR4(Wrap(""))
CastR4("") @= CastR4(Wrap("")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str()):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1(" ") = CastI1(Wrap(" "))
CastI1(" ") @= CastI1(Wrap(" ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str( )):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1(" ") = CastU1(Wrap(" "))
CastU1(" ") @= CastU1(Wrap(" ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str( )):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4(" ") = CastR4(Wrap(" "))
CastR4(" ") @= CastR4(Wrap(" ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str( )):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("123") = CastI1(Wrap("123"))
CastI1("123") @= CastI1(Wrap("123")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(123:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(123)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1("123") = CastU1(Wrap("123"))
CastU1("123") @= CastU1(Wrap("123")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(123:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str(123)):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("123") = CastR4(Wrap("123"))
CastR4("123") @= CastR4(Wrap("123")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(123:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(123)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1(" 123 ") = CastI1(Wrap(" 123 "))
CastI1(" 123 ") @= CastI1(Wrap(" 123 ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(123:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str( 123 )):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1(" 123 ") = CastU1(Wrap(" 123 "))
CastU1(" 123 ") @= CastU1(Wrap(" 123 ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(123:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str( 123 )):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4(" 123 ") = CastR4(Wrap(" 123 "))
CastR4(" 123 ") @= CastR4(Wrap(" 123 ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(123:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str( 123 )):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1(" 12 3 ") = CastI1(Wrap(" 12 3 "))
CastI1(" 12 3 ") @= CastI1(Wrap(" 12 3 ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str( 12 3 )):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1(" 12 3 ") = CastU1(Wrap(" 12 3 "))
CastU1(" 12 3 ") @= CastU1(Wrap(" 12 3 ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str( 12 3 )):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4(" 12 3 ") = CastR4(Wrap(" 12 3 "))
CastR4(" 12 3 ") @= CastR4(Wrap(" 12 3 ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str( 12 3 )):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1(Null("hi")) = CastI1(Wrap(Null("hi")))
CastI1(Null("hi")) @= CastI1(Wrap(Null("hi"))) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(<null>)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1(Null("hi")) = CastU1(Wrap(Null("hi")))
CastU1(Null("hi")) @= CastU1(Wrap(Null("hi"))) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str(<null>)):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4(Null("hi")) = CastR4(Wrap(Null("hi")))
CastR4(Null("hi")) @= CastR4(Wrap(Null("hi"))) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(<null>)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("∞") = CastI8(Wrap("∞"))
CastI8("∞") @= CastI8(Wrap("∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(∞)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("∞") = CastR8(Wrap("∞"))
CastR8("∞") @= CastR8(Wrap("∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(∞:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(∞)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("∞") = CastR4(Wrap("∞"))
CastR4("∞") @= CastR4(Wrap("∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(∞:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(∞)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("∞") = CastIA(Wrap("∞"))
CastIA("∞") @= CastIA(Wrap("∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(∞)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("-∞") = CastI8(Wrap("-∞"))
CastI8("-∞") @= CastI8(Wrap("-∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(-∞)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-∞") = CastR8(Wrap("-∞"))
CastR8("-∞") @= CastR8(Wrap("-∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(-∞)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-∞") = CastR4(Wrap("-∞"))
CastR4("-∞") @= CastR4(Wrap("-∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(-∞)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("-∞") = CastIA(Wrap("-∞"))
CastIA("-∞") @= CastIA(Wrap("-∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(-∞)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("Infinity") = CastI8(Wrap("Infinity"))
CastI8("Infinity") @= CastI8(Wrap("Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(Infinity)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("Infinity") = CastR8(Wrap("Infinity"))
CastR8("Infinity") @= CastR8(Wrap("Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(∞:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(Infinity)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("Infinity") = CastR4(Wrap("Infinity"))
CastR4("Infinity") @= CastR4(Wrap("Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(∞:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(Infinity)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("Infinity") = CastIA(Wrap("Infinity"))
CastIA("Infinity") @= CastIA(Wrap("Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(Infinity)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI8("-Infinity") = CastI8(Wrap("-Infinity"))
CastI8("-Infinity") @= CastI8(Wrap("-Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i8 @= Call(∂.CastI8(Call(∂.Test.Wrap(str(-Infinity)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-Infinity") = CastR8(Wrap("-Infinity"))
CastR8("-Infinity") @= CastR8(Wrap("-Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r8 @= Call(∂.CastR8(Call(∂.Test.Wrap(str(-Infinity)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-Infinity") = CastR4(Wrap("-Infinity"))
CastR4("-Infinity") @= CastR4(Wrap("-Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(-Infinity)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("-Infinity") = CastIA(Wrap("-Infinity"))
CastIA("-Infinity") @= CastIA(Wrap("-Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(-Infinity)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> Wrap(CastI8("NaN"))   = CastI8(Wrap("NaN"))
Wrap(CastI8("NaN")) @= CastI8(Wrap("NaN")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(Call(∂.Test.Wrap(0:i8):i8) @= Call(∂.CastI8(Call(∂.Test.Wrap(str(NaN)):s)):i8)))
Func sig: () to b
Type: bool, Value: true 
###
> Wrap(CastR8("NaN"))   = CastR8(Wrap("NaN"))
Wrap(CastR8("NaN")) @= CastR8(Wrap("NaN")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(Call(∂.Test.Wrap(NaN:r8):r8) @= Call(∂.CastR8(Call(∂.Test.Wrap(str(NaN)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> Wrap(CastR8("NaN")) !$= CastR8(Wrap("NaN"))
Wrap(CastR8("NaN")) !$= CastR8(Wrap("NaN")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(Call(∂.Test.Wrap(NaN:r8):r8) !$= Call(∂.CastR8(Call(∂.Test.Wrap(str(NaN)):s)):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> Wrap(CastR4("NaN"))   = CastR4(Wrap("NaN"))
Wrap(CastR4("NaN")) @= CastR4(Wrap("NaN")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(Call(∂.Test.Wrap(NaN:r4):r4) @= Call(∂.CastR4(Call(∂.Test.Wrap(str(NaN)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> Wrap(CastR4("NaN")) !$= CastR4(Wrap("NaN"))
Wrap(CastR4("NaN")) !$= CastR4(Wrap("NaN")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(Call(∂.Test.Wrap(NaN:r4):r4) !$= Call(∂.CastR4(Call(∂.Test.Wrap(str(NaN)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> Wrap(CastIA("NaN"))   = CastIA(Wrap("NaN"))
Wrap(CastIA("NaN")) @= CastIA(Wrap("NaN")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(Call(∂.Test.Wrap(0:i):i) @= Call(∂.CastIA(Call(∂.Test.Wrap(str(NaN)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("NaN")
CastR8("NaN") : r8
BndKind:Flt, Type:r8, Bnd:(NaN:r8)
Func sig: () to r8
Type: r8, Value: NaN
###
> CastR8(Wrap("NaN"))
CastR8(Wrap("NaN")) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.CastR8(Call(∂.Test.Wrap(str(NaN)):s)):r8))
Func sig: () to r8
Type: r8, Value: NaN
###
> CastI2("12,345") = CastI2(Wrap("12,345"))
CastI2("12,345") @= CastI2(Wrap("12,345")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12345:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(12,345)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU2("12,345") = CastU2(Wrap("12,345"))
CastU2("12,345") @= CastU2(Wrap("12,345")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12345:u2 @= Call(∂.CastU2(Call(∂.Test.Wrap(str(12,345)):s)):u2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("12,345") = CastR4(Wrap("12,345"))
CastR4("12,345") @= CastR4(Wrap("12,345")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12345:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(12,345)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("12,345") = CastIA(Wrap("12,345"))
CastIA("12,345") @= CastIA(Wrap("12,345")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12345:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(12,345)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("(123)") = CastI1(Wrap("(123)"))
CastI1("(123)") @= CastI1(Wrap("(123)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-123:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str((123))):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1("(123)") = CastU1(Wrap("(123)"))
CastU1("(123)") @= CastU1(Wrap("(123)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(133:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str((123))):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("(123)") = CastR4(Wrap("(123)"))
CastR4("(123)") @= CastR4(Wrap("(123)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-123:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str((123))):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("(123)") = CastIA(Wrap("(123)"))
CastIA("(123)") @= CastIA(Wrap("(123)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-123:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str((123))):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("(12,345)") = CastI2(Wrap("(12,345)"))
CastI2("(12,345)") @= CastI2(Wrap("(12,345)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-12345:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str((12,345))):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU2("(12,345)") = CastU2(Wrap("(12,345)"))
CastU2("(12,345)") @= CastU2(Wrap("(12,345)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(53191:u2 @= Call(∂.CastU2(Call(∂.Test.Wrap(str((12,345))):s)):u2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("(12,345)") = CastR4(Wrap("(12,345)"))
CastR4("(12,345)") @= CastR4(Wrap("(12,345)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-12345:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str((12,345))):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("(12,345)") = CastIA(Wrap("(12,345)"))
CastIA("(12,345)") @= CastIA(Wrap("(12,345)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-12345:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str((12,345))):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("9.223372") = CastI1(Wrap("9.223372"))
CastI1("9.223372") @= CastI1(Wrap("9.223372")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str(9.223372)):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1("9.223372") = CastU1(Wrap("9.223372"))
CastU1("9.223372") @= CastU1(Wrap("9.223372")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str(9.223372)):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("9.223372") = CastR4(Wrap("9.223372"))
CastR4("9.223372") @= CastR4(Wrap("9.223372")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(9.223372459411621:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(9.223372)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("9.223372") = CastIA(Wrap("9.223372"))
CastIA("9.223372") @= CastIA(Wrap("9.223372")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(9.223372)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI2("9,223.372") = CastI2(Wrap("9,223.372"))
CastI2("9,223.372") @= CastI2(Wrap("9,223.372")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i2 @= Call(∂.CastI2(Call(∂.Test.Wrap(str(9,223.372)):s)):i2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU2("9,223.372") = CastU2(Wrap("9,223.372"))
CastU2("9,223.372") @= CastU2(Wrap("9,223.372")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:u2 @= Call(∂.CastU2(Call(∂.Test.Wrap(str(9,223.372)):s)):u2)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("9,223.372") = CastR4(Wrap("9,223.372"))
CastR4("9,223.372") @= CastR4(Wrap("9,223.372")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(9223.3720703125:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str(9,223.372)):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("9,223.372") = CastIA(Wrap("9,223.372"))
CastIA("9,223.372") @= CastIA(Wrap("9,223.372")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str(9,223.372)):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
> CastI1("(9.223372)") = CastI1(Wrap("(9.223372)"))
CastI1("(9.223372)") @= CastI1(Wrap("(9.223372)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i1 @= Call(∂.CastI1(Call(∂.Test.Wrap(str((9.223372))):s)):i1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastU1("(9.223372)") = CastU1(Wrap("(9.223372)"))
CastU1("(9.223372)") @= CastU1(Wrap("(9.223372)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:u1 @= Call(∂.CastU1(Call(∂.Test.Wrap(str((9.223372))):s)):u1)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("(9.223372)") = CastR4(Wrap("(9.223372)"))
CastR4("(9.223372)") @= CastR4(Wrap("(9.223372)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-9.223372459411621:r4 @= Call(∂.CastR4(Call(∂.Test.Wrap(str((9.223372))):s)):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> CastIA("(9.223372)") = CastIA(Wrap("(9.223372)"))
CastIA("(9.223372)") @= CastIA(Wrap("(9.223372)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:i @= Call(∂.CastIA(Call(∂.Test.Wrap(str((9.223372))):s)):i)))
Func sig: () to b
Type: bool, Value: true 
###
