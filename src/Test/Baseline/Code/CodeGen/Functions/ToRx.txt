> null = ToR4(Wrap(""))
null @= ToR4(Wrap("")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 3    = ToR4(Wrap("3"))
3 @= ToR4(Wrap("3")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(3:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(3)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> null = ToR4(Wrap(""),  null)
null @= ToR4(Wrap(""), null) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s), null:r4?):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 3    = ToR4(Wrap("3"), null)
3 @= ToR4(Wrap("3"), null) : b
BndKind:Compare, Type:b, Bnd:(Cmp(3:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(3)):s), null:r4?):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> null = ToR4(Wrap(""),  Null(5))
null @= ToR4(Wrap(""), Null(5)) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s), null:r4?):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 5    = ToR4(Wrap(""),  Opt (5))
5 @= ToR4(Wrap(""), Opt(5)) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s), Opt<r4?>(5:r4)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 3    = ToR4(Wrap("3"), Null(5))
3 @= ToR4(Wrap("3"), Null(5)) : b
BndKind:Compare, Type:b, Bnd:(Cmp(3:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(3)):s), null:r4?):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 3    = ToR4(Wrap("3"), Opt (5))
3 @= ToR4(Wrap("3"), Opt(5)) : b
BndKind:Compare, Type:b, Bnd:(Cmp(3:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(3)):s), Opt<r4?>(5:r4)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 5    = ToR4(Wrap(""),  5)
5 @= ToR4(Wrap(""), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s), 5:r4):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> 3    = ToR4(Wrap("3"), 5)
3 @= ToR4(Wrap("3"), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(3:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(3)):s), 5:r4):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> null = To(Wrap(""),  Null(5r4))
null @= To(Wrap(""), Null(5)) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s), null:r4?):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 5    = To(Wrap(""),  Opt (5r4))
5 @= To(Wrap(""), Opt(5)) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s), Opt<r4?>(5:r4)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 3    = To(Wrap("3"), Null(5r4))
3 @= To(Wrap("3"), Null(5)) : b
BndKind:Compare, Type:b, Bnd:(Cmp(3:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(3)):s), null:r4?):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 3    = To(Wrap("3"), Opt (5r4))
3 @= To(Wrap("3"), Opt(5)) : b
BndKind:Compare, Type:b, Bnd:(Cmp(3:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(3)):s), Opt<r4?>(5:r4)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 5    = To(Wrap(""),  5r4)
5 @= To(Wrap(""), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s), 5:r4):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> 3    = To(Wrap("3"), 5r4)
3 @= To(Wrap("3"), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(3:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(3)):s), 5:r4):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> ToR4(["", "0"])
ToR4(["", "0"]) : r4?*
BndKind:Call, Type:r4?*, Bnd:(Call(∂.ForEach([map:1] [str(), str(0)]:s*, Call(∂.ToR4(Scope(1)):r4?)):r4?*))
Func sig: () to r4?*
Sequence: Seq<Opt<r4>>
 0) <null>
 1) 0
###
> To([null, "", "0"], 3r4)
To([null, "", "0"], 3) : r4*
BndKind:Call, Type:r4*, Bnd:(Call(∂.ForEach([map:1] [str(<null>), str(), str(0)]:s*, Call(∂.ToR4(Scope(1), 3:r4):r4)):r4*))
Func sig: () to r4*
Sequence: Seq<r4>
 0) 3
 1) 3
 2) 0
###
> null = ToR4(Wrap(""))
null @= ToR4(Wrap("")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> null = ToR4(Wrap(" "))
null @= ToR4(Wrap(" ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str( )):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 5 = To(Wrap(""), 5r4)
5 @= To(Wrap(""), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str()):s), 5:r4):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> 5 = ToR4(Wrap(" "), 5r4)
5 @= ToR4(Wrap(" "), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str( )):s), 5:r4):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> null = ToR4(Wrap("false"))
null @= ToR4(Wrap("false")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str(false)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> null = ToR4(Wrap("true"))
null @= ToR4(Wrap("true")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str(true)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 5 = To(Wrap("false"), 5r4)
5 @= To(Wrap("false"), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(false)):s), 5:r4):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> 5 = ToR4(Wrap("true"), 5r4)
5 @= ToR4(Wrap("true"), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(true)):s), 5:r4):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> null = ToR4(Wrap("1_234"))
null @= ToR4(Wrap("1_234")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str(1_234)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 5 = To("1_234", 5r4)
5 @= To("1_234", 5) : b
BndKind:Int, Type:b, Bnd:(true:b)
Func sig: () to b
Type: bool, Value: true 
###
> 0      = ToR4(Wrap("-0"))
0 @= ToR4(Wrap("-0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(-0)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> -12.34 = ToR4(Wrap("(12.34)"))
-12.34 @= ToR4(Wrap("(12.34)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-12.34:r8 @= Call(∂.Guard([guard:1] Call(∂.ToR4(Call(∂.Test.Wrap(str((12.34))):s)):r4?), Num<r8>(Scope(1))):r8?)))
Func sig: () to b
Type: bool, Value: false
###
> null = ToR4(Wrap("-4 e37"))
null @= ToR4(Wrap("-4 e37")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r4? @= Call(∂.ToR4(Call(∂.Test.Wrap(str(-4 e37)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> 5 = To(Wrap("-4 e37"), 5r4)
5 @= To(Wrap("-4 e37"), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(-4 e37)):s), 5:r4):r4)))
Func sig: () to b
Type: bool, Value: true 
###
> null = ToR8(Wrap("-4 e37"))
null @= ToR8(Wrap("-4 e37")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(null:r8? @= Call(∂.ToR8(Call(∂.Test.Wrap(str(-4 e37)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> 5    = To(Wrap("-4 e37"), 5r8)
5 @= To(Wrap("-4 e37"), 5) : b
BndKind:Compare, Type:b, Bnd:(Cmp(5:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(-4 e37)):s), 5:r8):r8)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("0")         = ToR4(Wrap("0"))
CastR4("0") @= ToR4(Wrap("0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(0)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("0.0")       = ToR4(Wrap("0.0"))
CastR4("0.0") @= ToR4(Wrap("0.0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(0.0)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-0")        = ToR4(Wrap("-0"))
CastR4("-0") @= ToR4(Wrap("-0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-0:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(-0)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-0.0")      = ToR4(Wrap("-0.0"))
CastR4("-0.0") @= ToR4(Wrap("-0.0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-0:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(-0.0)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("12.34")     = ToR4(Wrap("12.34"))
CastR4("12.34") @= ToR4(Wrap("12.34")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12.34000015258789:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(12.34)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4(" 12.34 ")   = ToR4(Wrap(" 12.34 "))
CastR4(" 12.34 ") @= ToR4(Wrap(" 12.34 ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12.34000015258789:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str( 12.34 )):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("12,345")    = ToR4(Wrap("12,345"))
CastR4("12,345") @= ToR4(Wrap("12,345")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12345:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(12,345)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("(123)")     = ToR4(Wrap("(123)"))
CastR4("(123)") @= ToR4(Wrap("(123)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-123:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str((123))):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("2e20")      = ToR4(Wrap("2e20"))
CastR4("2e20") @= ToR4(Wrap("2e20")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(2.0000000400817547E+20:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(2e20)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("∞")         = ToR4(Wrap("∞"))
CastR4("∞") @= ToR4(Wrap("∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(∞:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(∞)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-∞")        = ToR4(Wrap("-∞"))
CastR4("-∞") @= ToR4(Wrap("-∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(-∞)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("Infinity")  = ToR4(Wrap("Infinity"))
CastR4("Infinity") @= ToR4(Wrap("Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(∞:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(Infinity)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR4("-Infinity") = ToR4(Wrap("-Infinity"))
CastR4("-Infinity") @= ToR4(Wrap("-Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r4 @= Call(∂.ToR4(Call(∂.Test.Wrap(str(-Infinity)):s)):r4?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("0")         = ToR8(Wrap("0"))
CastR8("0") @= ToR8(Wrap("0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(0)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("0.0")       = ToR8(Wrap("0.0"))
CastR8("0.0") @= ToR8(Wrap("0.0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(0:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(0.0)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-0")        = ToR8(Wrap("-0"))
CastR8("-0") @= ToR8(Wrap("-0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-0:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(-0)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-0.0")      = ToR8(Wrap("-0.0"))
CastR8("-0.0") @= ToR8(Wrap("-0.0")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-0:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(-0.0)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("12.34")     = ToR8(Wrap("12.34"))
CastR8("12.34") @= ToR8(Wrap("12.34")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12.34:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(12.34)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8(" 12.34 ")   = ToR8(Wrap(" 12.34 "))
CastR8(" 12.34 ") @= ToR8(Wrap(" 12.34 ")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12.34:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str( 12.34 )):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("12,345")    = ToR8(Wrap("12,345"))
CastR8("12,345") @= ToR8(Wrap("12,345")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(12345:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(12,345)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("(123)")     = ToR8(Wrap("(123)"))
CastR8("(123)") @= ToR8(Wrap("(123)")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-123:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str((123))):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("2e20")      = ToR8(Wrap("2e20"))
CastR8("2e20") @= ToR8(Wrap("2e20")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(2E+20:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(2e20)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("∞")         = ToR8(Wrap("∞"))
CastR8("∞") @= ToR8(Wrap("∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(∞:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(∞)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-∞")        = ToR8(Wrap("-∞"))
CastR8("-∞") @= ToR8(Wrap("-∞")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(-∞)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("Infinity")  = ToR8(Wrap("Infinity"))
CastR8("Infinity") @= ToR8(Wrap("Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(∞:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(Infinity)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> CastR8("-Infinity") = ToR8(Wrap("-Infinity"))
CastR8("-Infinity") @= ToR8(Wrap("-Infinity")) : b
BndKind:Compare, Type:b, Bnd:(Cmp(-∞:r8 @= Call(∂.ToR8(Call(∂.Test.Wrap(str(-Infinity)):s)):r8?)))
Func sig: () to b
Type: bool, Value: true 
###
> ToR4(Wrap("NaN"))
ToR4(Wrap("NaN")) : r4?
BndKind:Call, Type:r4?, Bnd:(Call(∂.ToR4(Call(∂.Test.Wrap(str(NaN)):s)):r4?))
Func sig: () to r4?
Type: r4, Value: NaN
###
> ToR8(Wrap("NaN"))
ToR8(Wrap("NaN")) : r8?
BndKind:Call, Type:r8?, Bnd:(Call(∂.ToR8(Call(∂.Test.Wrap(str(NaN)):s)):r8?))
Func sig: () to r8?
Type: r8, Value: NaN
###

**** New udf: F8, arity: 1
**** New udf: F4, arity: 1

> 0x8000_0000_0000_0000u8->F8()
9223372036854775808->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(9.223372036854776E+18:r8 @= Num<r8>(Call(∂.Test.Wrap(9223372036854775808:u8):u8))), str(43E0000000000000), 9.223372036854776E+18:r8, str(8000000000000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E0000000000000, 9.223372036854776E+18, 8000000000000000)
###
> 0x8000_0000_0000_0400u8->F8()
9223372036854776832->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(9.223372036854776E+18:r8 @= Num<r8>(Call(∂.Test.Wrap(9223372036854776832:u8):u8))), str(43E0000000000000), 9.223372036854776E+18:r8, str(8000000000000400)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E0000000000000, 9.223372036854776E+18, 8000000000000400)
###
> 0x8000_0000_0000_0401u8->F8()
9223372036854776833->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(9.223372036854778E+18:r8 @= Num<r8>(Call(∂.Test.Wrap(9223372036854776833:u8):u8))), str(43E0000000000001), 9.223372036854778E+18:r8, str(8000000000000401)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E0000000000001, 9.223372036854778E+18, 8000000000000401)
###
> 0x8000_0000_0000_0800u8->F8()
9223372036854777856->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(9.223372036854778E+18:r8 @= Num<r8>(Call(∂.Test.Wrap(9223372036854777856:u8):u8))), str(43E0000000000001), 9.223372036854778E+18:r8, str(8000000000000800)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E0000000000001, 9.223372036854778E+18, 8000000000000800)
###
> 0x8000_0000_0000_0BFFu8->F8()
9223372036854778879->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(9.223372036854778E+18:r8 @= Num<r8>(Call(∂.Test.Wrap(9223372036854778879:u8):u8))), str(43E0000000000001), 9.223372036854778E+18:r8, str(8000000000000BFF)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E0000000000001, 9.223372036854778E+18, 8000000000000BFF)
###
> 0x8000_0000_0000_0C00u8->F8()
9223372036854778880->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(9.22337203685478E+18:r8 @= Num<r8>(Call(∂.Test.Wrap(9223372036854778880:u8):u8))), str(43E0000000000002), 9.22337203685478E+18:r8, str(8000000000000C00)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E0000000000002, 9.22337203685478E+18, 8000000000000C00)
###
> 0xC123_4567_89AB_C000u8->F8()
13917043584498647040->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.3917043584498647E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(13917043584498647040:u8):u8))), str(43E82468ACF13578), 1.3917043584498647E+19:r8, str(C123456789ABC000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E82468ACF13578, 1.3917043584498647E+19, C123456789ABC000)
###
> 0xC123_4567_89AB_C400u8->F8()
13917043584498648064->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.3917043584498647E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(13917043584498648064:u8):u8))), str(43E82468ACF13578), 1.3917043584498647E+19:r8, str(C123456789ABC400)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E82468ACF13578, 1.3917043584498647E+19, C123456789ABC400)
###
> 0xC123_4567_89AB_C401u8->F8()
13917043584498648065->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.391704358449865E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(13917043584498648065:u8):u8))), str(43E82468ACF13579), 1.391704358449865E+19:r8, str(C123456789ABC401)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E82468ACF13579, 1.391704358449865E+19, C123456789ABC401)
###
> 0xC123_4567_89AB_C800u8->F8()
13917043584498649088->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.391704358449865E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(13917043584498649088:u8):u8))), str(43E82468ACF13579), 1.391704358449865E+19:r8, str(C123456789ABC800)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E82468ACF13579, 1.391704358449865E+19, C123456789ABC800)
###
> 0xC123_4567_89AB_CBFFu8->F8()
13917043584498650111->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.391704358449865E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(13917043584498650111:u8):u8))), str(43E82468ACF13579), 1.391704358449865E+19:r8, str(C123456789ABCBFF)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E82468ACF13579, 1.391704358449865E+19, C123456789ABCBFF)
###
> 0xC123_4567_89AB_CC00u8->F8()
13917043584498650112->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.3917043584498651E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(13917043584498650112:u8):u8))), str(43E82468ACF1357A), 1.3917043584498651E+19:r8, str(C123456789ABCC00)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43E82468ACF1357A, 1.3917043584498651E+19, C123456789ABCC00)
###
> 0xFFFF_FFFF_FFFF_F800u8->F8()
18446744073709549568->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.844674407370955E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709549568:u8):u8))), str(43EFFFFFFFFFFFFF), 1.844674407370955E+19:r8, str(FFFFFFFFFFFFF800)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43EFFFFFFFFFFFFF, 1.844674407370955E+19, FFFFFFFFFFFFF800)
###
> 0xFFFF_FFFF_FFFF_FBFFu8->F8()
18446744073709550591->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.844674407370955E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709550591:u8):u8))), str(43EFFFFFFFFFFFFF), 1.844674407370955E+19:r8, str(FFFFFFFFFFFFFBFF)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43EFFFFFFFFFFFFF, 1.844674407370955E+19, FFFFFFFFFFFFFBFF)
###
> 0xFFFF_FFFF_FFFF_FC00u8->F8()
18446744073709550592->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.8446744073709552E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709550592:u8):u8))), str(43F0000000000000), 1.8446744073709552E+19:r8, str(FFFFFFFFFFFFFC00)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000000, 1.8446744073709552E+19, FFFFFFFFFFFFFC00)
###
> 0xFFFF_FFFF_FFFF_FC00u8->F8()
18446744073709550592->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.8446744073709552E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709550592:u8):u8))), str(43F0000000000000), 1.8446744073709552E+19:r8, str(FFFFFFFFFFFFFC00)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000000, 1.8446744073709552E+19, FFFFFFFFFFFFFC00)
###
> 0xFFFF_FFFF_FFFF_FFFFu8->F8()
18446744073709551615->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.8446744073709552E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709551615:u8):u8))), str(43F0000000000000), 1.8446744073709552E+19:r8, str(FFFFFFFFFFFFFFFF)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000000, 1.8446744073709552E+19, FFFFFFFFFFFFFFFF)
###
> 0x8000_0000u4->F4()
2147483648->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(2147483648:r4 @= Num<r4>(Call(∂.Test.Wrap(2147483648:u4):u4))), str(4F000000), 2147483648:r4, str(80000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 4F000000, 2.1474836E+09, 80000000)
###
> 0x8000_0080u4->F4()
2147483776->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(2147483648:r4 @= Num<r4>(Call(∂.Test.Wrap(2147483776:u4):u4))), str(4F000000), 2147483648:r4, str(80000080)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 4F000000, 2.1474836E+09, 80000080)
###
> 0x8000_0081u4->F4()
2147483777->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(2147483904:r4 @= Num<r4>(Call(∂.Test.Wrap(2147483777:u4):u4))), str(4F000001), 2147483904:r4, str(80000081)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 4F000001, 2.147484E+09, 80000081)
###
> 0x8000_0100u4->F4()
2147483904->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(2147483904:r4 @= Num<r4>(Call(∂.Test.Wrap(2147483904:u4):u4))), str(4F000001), 2147483904:r4, str(80000100)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 4F000001, 2.147484E+09, 80000100)
###
> 0x8000_017Fu4->F4()
2147484031->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(2147483904:r4 @= Num<r4>(Call(∂.Test.Wrap(2147484031:u4):u4))), str(4F000001), 2147483904:r4, str(8000017F)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 4F000001, 2.147484E+09, 8000017F)
###
> 0x8000_0180u4->F4()
2147484032->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(2147484160:r4 @= Num<r4>(Call(∂.Test.Wrap(2147484032:u4):u4))), str(4F000002), 2147484160:r4, str(80000180)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 4F000002, 2.1474842E+09, 80000180)
###
> 0x8000_0000_0000_0000u8->F4()
9223372036854775808->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(9.223372036854776E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(9223372036854775808:u8):u8))), str(5F000000), 9.223372036854776E+18:r4, str(8000000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F000000, 9.223372E+18, 8000000000000000)
###
> 0x8000_0080_0000_0000u8->F4()
9223372586610589696->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(9.223372036854776E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(9223372586610589696:u8):u8))), str(5F000000), 9.223372036854776E+18:r4, str(8000008000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F000000, 9.223372E+18, 8000008000000000)
###
> 0x8000_0080_0000_0001u8->F4()
9223372586610589697->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(9.223373136366404E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(9223372586610589697:u8):u8))), str(5F000001), 9.223373136366404E+18:r4, str(8000008000000001)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F000001, 9.223373E+18, 8000008000000001)
###
> 0x8000_0100_0000_0000u8->F4()
9223373136366403584->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(9.223373136366404E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(9223373136366403584:u8):u8))), str(5F000001), 9.223373136366404E+18:r4, str(8000010000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F000001, 9.223373E+18, 8000010000000000)
###
> 0x8000_017F_FFFF_FFFFu8->F4()
9223373686122217471->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(9.223373136366404E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(9223373686122217471:u8):u8))), str(5F000001), 9.223373136366404E+18:r4, str(8000017FFFFFFFFF)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F000001, 9.223373E+18, 8000017FFFFFFFFF)
###
> 0x8000_0180_0000_0000u8->F4()
9223373686122217472->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(9.223374235878031E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(9223373686122217472:u8):u8))), str(5F000002), 9.223374235878031E+18:r4, str(8000018000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F000002, 9.223374E+18, 8000018000000000)
###
> 0x4000_0000_0000_0000i8->F4()
4611686018427387904->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(4.611686018427388E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(4611686018427387904:i8):i8))), str(5E800000), 4.611686018427388E+18:r4, str(4000000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5E800000, 4.611686E+18, 4000000000000000)
###
> 0x4000_0040_0000_0000i8->F4()
4611686293305294848->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(4.611686018427388E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(4611686293305294848:i8):i8))), str(5E800000), 4.611686018427388E+18:r4, str(4000004000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5E800000, 4.611686E+18, 4000004000000000)
###
> 0x4000_0040_0000_0001i8->F4()
4611686293305294849->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(4.611686568183202E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(4611686293305294849:i8):i8))), str(5E800001), 4.611686568183202E+18:r4, str(4000004000000001)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5E800001, 4.6116866E+18, 4000004000000001)
###
> 0x4000_0080_0000_0000i8->F4()
4611686568183201792->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(4.611686568183202E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(4611686568183201792:i8):i8))), str(5E800001), 4.611686568183202E+18:r4, str(4000008000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5E800001, 4.6116866E+18, 4000008000000000)
###
> 0x4000_00BF_FFFF_FFFFi8->F4()
4611686843061108735->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(4.611686568183202E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(4611686843061108735:i8):i8))), str(5E800001), 4.611686568183202E+18:r4, str(400000BFFFFFFFFF)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5E800001, 4.6116866E+18, 400000BFFFFFFFFF)
###
> 0x4000_00C0_0000_0000i8->F4()
4611686843061108736->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(4.611687117939016E+18:r4 @= Num<r4>(Call(∂.Test.Wrap(4611686843061108736:i8):i8))), str(5E800002), 4.611687117939016E+18:r4, str(400000C000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5E800002, 4.611687E+18, 400000C000000000)
###
> 0x1_0000_0000_0000_0000ia->F8()
18446744073709551616->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.8446744073709552E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709551616:i):i))), str(43F0000000000000), 1.8446744073709552E+19:r8, str(10000000000000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000000, 1.8446744073709552E+19, 10000000000000000)
###
> 0x1_0000_0000_0000_0800ia->F8()
18446744073709553664->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.8446744073709552E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709553664:i):i))), str(43F0000000000000), 1.8446744073709552E+19:r8, str(10000000000000800)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000000, 1.8446744073709552E+19, 10000000000000800)
###
> 0x1_0000_0000_0000_0801ia->F8()
18446744073709553665->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.8446744073709556E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709553665:i):i))), str(43F0000000000001), 1.8446744073709556E+19:r8, str(10000000000000801)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000001, 1.8446744073709556E+19, 10000000000000801)
###
> 0x1_0000_0000_0000_0900ia->F8()
18446744073709553920->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.8446744073709556E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709553920:i):i))), str(43F0000000000001), 1.8446744073709556E+19:r8, str(10000000000000900)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000001, 1.8446744073709556E+19, 10000000000000900)
###
> 0x1_0000_0000_0000_1000ia->F8()
18446744073709555712->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.8446744073709556E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709555712:i):i))), str(43F0000000000001), 1.8446744073709556E+19:r8, str(10000000000001000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000001, 1.8446744073709556E+19, 10000000000001000)
###
> 0x1_0000_0000_0000_17FFia->F8()
18446744073709557759->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.8446744073709556E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709557759:i):i))), str(43F0000000000001), 1.8446744073709556E+19:r8, str(100000000000017FF)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000001, 1.8446744073709556E+19, 100000000000017FF)
###
> 0x1_0000_0000_0000_1800ia->F8()
18446744073709557760->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.844674407370956E+19:r8 @= Num<r8>(Call(∂.Test.Wrap(18446744073709557760:i):i))), str(43F0000000000002), 1.844674407370956E+19:r8, str(10000000000001800)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 43F0000000000002, 1.844674407370956E+19, 10000000000001800)
###
> 0x1_0000_0000_0000_0000ia->F4()
18446744073709551616->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.8446744073709552E+19:r4 @= Num<r4>(Call(∂.Test.Wrap(18446744073709551616:i):i))), str(5F800000), 1.8446744073709552E+19:r4, str(10000000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F800000, 1.8446744E+19, 10000000000000000)
###
> 0x1_0000_0100_0000_0000ia->F4()
18446745173221179392->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.8446744073709552E+19:r4 @= Num<r4>(Call(∂.Test.Wrap(18446745173221179392:i):i))), str(5F800000), 1.8446744073709552E+19:r4, str(10000010000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F800000, 1.8446744E+19, 10000010000000000)
###
> 0x1_0000_0100_0000_0001ia->F4()
18446745173221179393->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.8446746272732807E+19:r4 @= Num<r4>(Call(∂.Test.Wrap(18446745173221179393:i):i))), str(5F800001), 1.8446746272732807E+19:r4, str(10000010000000001)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F800001, 1.8446746E+19, 10000010000000001)
###
> 0x1_0000_0101_0000_0000ia->F4()
18446745177516146688->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.8446746272732807E+19:r4 @= Num<r4>(Call(∂.Test.Wrap(18446745177516146688:i):i))), str(5F800001), 1.8446746272732807E+19:r4, str(10000010100000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F800001, 1.8446746E+19, 10000010100000000)
###
> 0x1_0000_0180_0000_0000ia->F4()
18446745722976993280->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.8446746272732807E+19:r4 @= Num<r4>(Call(∂.Test.Wrap(18446745722976993280:i):i))), str(5F800001), 1.8446746272732807E+19:r4, str(10000018000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F800001, 1.8446746E+19, 10000018000000000)
###
> 0x1_0000_0200_0000_0000ia->F4()
18446746272732807168->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.8446746272732807E+19:r4 @= Num<r4>(Call(∂.Test.Wrap(18446746272732807168:i):i))), str(5F800001), 1.8446746272732807E+19:r4, str(10000020000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F800001, 1.8446746E+19, 10000020000000000)
###
> 0x1_0000_02FF_FFFF_FFFFia->F4()
18446747372244434943->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.8446746272732807E+19:r4 @= Num<r4>(Call(∂.Test.Wrap(18446747372244434943:i):i))), str(5F800001), 1.8446746272732807E+19:r4, str(1000002FFFFFFFFFF)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F800001, 1.8446746E+19, 1000002FFFFFFFFFF)
###
> 0x1_0000_0300_0000_0000ia->F4()
18446747372244434944->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.8446748471756063E+19:r4 @= Num<r4>(Call(∂.Test.Wrap(18446747372244434944:i):i))), str(5F800002), 1.8446748471756063E+19:r4, str(10000030000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 5F800002, 1.8446748E+19, 10000030000000000)
###
> 0x1_0000_0000_0000_0000_0000ia->F8()
1208925819614629174706176->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.2089258196146292E+24:r8 @= Num<r8>(Call(∂.Test.Wrap(1208925819614629174706176:i):i))), str(44F0000000000000), 1.2089258196146292E+24:r8, str(100000000000000000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 44F0000000000000, 1.2089258196146292E+24, 100000000000000000000)
###
> 0x1_0000_0000_0000_0800_0000ia->F8()
1208925819614629308923904->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.2089258196146292E+24:r8 @= Num<r8>(Call(∂.Test.Wrap(1208925819614629308923904:i):i))), str(44F0000000000000), 1.2089258196146292E+24:r8, str(100000000000008000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 44F0000000000000, 1.2089258196146292E+24, 100000000000008000000)
###
> 0x1_0000_0000_0000_0800_0001ia->F8()
1208925819614629308923905->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.2089258196146294E+24:r8 @= Num<r8>(Call(∂.Test.Wrap(1208925819614629308923905:i):i))), str(44F0000000000001), 1.2089258196146294E+24:r8, str(100000000000008000001)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 44F0000000000001, 1.2089258196146294E+24, 100000000000008000001)
###
> 0x1_0000_0000_0000_1000_0000ia->F8()
1208925819614629443141632->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.2089258196146294E+24:r8 @= Num<r8>(Call(∂.Test.Wrap(1208925819614629443141632:i):i))), str(44F0000000000001), 1.2089258196146294E+24:r8, str(100000000000010000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 44F0000000000001, 1.2089258196146294E+24, 100000000000010000000)
###
> 0x1_0000_0000_0000_17FF_FFFFia->F8()
1208925819614629577359359->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.2089258196146294E+24:r8 @= Num<r8>(Call(∂.Test.Wrap(1208925819614629577359359:i):i))), str(44F0000000000001), 1.2089258196146294E+24:r8, str(100000000000017FFFFFF)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 44F0000000000001, 1.2089258196146294E+24, 100000000000017FFFFFF)
###
> 0x1_0000_0000_0000_1800_0000ia->F8()
1208925819614629577359360->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.2089258196146297E+24:r8 @= Num<r8>(Call(∂.Test.Wrap(1208925819614629577359360:i):i))), str(44F0000000000002), 1.2089258196146297E+24:r8, str(100000000000018000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 44F0000000000002, 1.2089258196146297E+24, 100000000000018000000)
###
> 0x1_0000_0000_0000_0000_0000ia->F4()
1208925819614629174706176->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.2089258196146292E+24:r4 @= Num<r4>(Call(∂.Test.Wrap(1208925819614629174706176:i):i))), str(67800000), 1.2089258196146292E+24:r4, str(100000000000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 67800000, 1.2089258E+24, 100000000000000000000)
###
> 0x1_0000_0100_0000_0000_0000ia->F4()
1208925891672223212634112->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.2089258196146292E+24:r4 @= Num<r4>(Call(∂.Test.Wrap(1208925891672223212634112:i):i))), str(67800000), 1.2089258196146292E+24:r4, str(100000100000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 67800000, 1.2089258E+24, 100000100000000000000)
###
> 0x1_0000_0100_0000_0000_0001ia->F4()
1208925891672223212634113->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.2089259637298173E+24:r4 @= Num<r4>(Call(∂.Test.Wrap(1208925891672223212634113:i):i))), str(67800001), 1.2089259637298173E+24:r4, str(100000100000000000001)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 67800001, 1.208926E+24, 100000100000000000001)
###
> 0x1_0000_0200_0000_0000_0000ia->F4()
1208925963729817250562048->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.2089259637298173E+24:r4 @= Num<r4>(Call(∂.Test.Wrap(1208925963729817250562048:i):i))), str(67800001), 1.2089259637298173E+24:r4, str(100000200000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 67800001, 1.208926E+24, 100000200000000000000)
###
> 0x1_0000_02FF_FFFF_FFFF_FFFFia->F4()
1208926035787411288489983->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.2089259637298173E+24:r4 @= Num<r4>(Call(∂.Test.Wrap(1208926035787411288489983:i):i))), str(67800001), 1.2089259637298173E+24:r4, str(1000002FFFFFFFFFFFFFF)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 67800001, 1.208926E+24, 1000002FFFFFFFFFFFFFF)
###
> 0x1_0000_0300_0000_0000_0000ia->F4()
1208926035787411288489984->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(1.2089261078450053E+24:r4 @= Num<r4>(Call(∂.Test.Wrap(1208926035787411288489984:i):i))), str(67800002), 1.2089261078450053E+24:r4, str(100000300000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 67800002, 1.2089261E+24, 100000300000000000000)
###
> (0x8000ia shl 48)->(it - 0x000ia)->(it shl 961)->(it - 0)->F8()
(32768 shl 48)->(it - 0)->(it shl 961)->(it - 0)->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(∞:r8 @= Num<r8>(Call(∂.Test.Wrap(179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216:i):i))), str(7FF0000000000000), ∞:r8, str(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 7FF0000000000000, ∞, 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
###
> (0x8000ia shl 48)->(it - 0x200ia)->(it shl 961)->(it - 0)->F8()
(32768 shl 48)->(it - 512)->(it shl 961)->(it - 0)->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(∞:r8 @= Num<r8>(Call(∂.Test.Wrap(179769313486231580793728971405303415079934132710037826936173778980444968292764750946649017977587207096330286416692887910946555547851940402630657488671505820681908902000708383676273854845817711531764475730270069855571366959622842914819860834936475292719074168444365510704342711559699508093042880177904174497792:i):i))), str(7FF0000000000000), ∞:r8, str(0FFFFFFFFFFFFFC00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 7FF0000000000000, ∞, 0FFFFFFFFFFFFFC00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
###
> (0x8000ia shl 48)->(it - 0x200ia)->(it shl 961)->(it - 1)->F8()
(32768 shl 48)->(it - 512)->(it shl 961)->(it - 1)->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.7976931348623157E+308:r8 @= Num<r8>(Call(∂.Test.Wrap(179769313486231580793728971405303415079934132710037826936173778980444968292764750946649017977587207096330286416692887910946555547851940402630657488671505820681908902000708383676273854845817711531764475730270069855571366959622842914819860834936475292719074168444365510704342711559699508093042880177904174497791:i):i))), str(7FEFFFFFFFFFFFFF), 1.7976931348623157E+308:r8, str(0FFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 7FEFFFFFFFFFFFFF, 1.7976931348623157E+308, 0FFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)
###
> (0x8000ia shl 48)->(it - 0x201ia)->(it shl 961)->(it - 0)->F8()
(32768 shl 48)->(it - 513)->(it shl 961)->(it - 0)->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.7976931348623157E+308:r8 @= Num<r8>(Call(∂.Test.Wrap(179769313486231580774238343382503416919227367934287450314421325265254953239028938032223120596054354891399056284928867392495945715389123066263739148941099632588752927408083076837211299445904765472022896419289962558865767772664406157072489639085685542827581441213427579478687233953490952998879222997920346275840:i):i))), str(7FEFFFFFFFFFFFFF), 1.7976931348623157E+308:r8, str(0FFFFFFFFFFFFFBFE000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 7FEFFFFFFFFFFFFF, 1.7976931348623157E+308, 0FFFFFFFFFFFFFBFE000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
###
> (0x8000ia shl 48)->(it - 0x400ia)->(it shl 961)->(it - 0)->F8()
(32768 shl 48)->(it - 1024)->(it shl 961)->(it - 0)->F8() : (b, s, r8, s)
BndKind:Tuple, Type:(b, s, r8, s), Bnd:((Cmp(1.7976931348623157E+308:r8 @= Num<r8>(Call(∂.Test.Wrap(179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368:i):i))), str(7FEFFFFFFFFFFFFF), 1.7976931348623157E+308:r8, str(0FFFFFFFFFFFFF800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)):(b, s, r8, s))
Func sig: () to (b, s, r8, s)
Type: (bool,str,r8,str), Value: (true , 7FEFFFFFFFFFFFFF, 1.7976931348623157E+308, 0FFFFFFFFFFFFF800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
###
> (0x8000ia shl 16)->(it - 0x0000ia)->(it shl 97)->(it - 0)->F4()
(32768 shl 16)->(it - 0)->(it shl 97)->(it - 0)->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(∞:r4 @= Num<r4>(Call(∂.Test.Wrap(340282366920938463463374607431768211456:i):i))), str(7F800000), ∞:r4, str(100000000000000000000000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 7F800000, ∞, 100000000000000000000000000000000)
###
> (0x8000ia shl 16)->(it - 0x0040ia)->(it shl 97)->(it - 0)->F4()
(32768 shl 16)->(it - 64)->(it shl 97)->(it - 0)->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(∞:r4 @= Num<r4>(Call(∂.Test.Wrap(340282356779733661637539395458142568448:i):i))), str(7F800000), ∞:r4, str(0FFFFFF80000000000000000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 7F800000, ∞, 0FFFFFF80000000000000000000000000)
###
> (0x8000ia shl 16)->(it - 0x0040ia)->(it shl 97)->(it - 1)->F4()
(32768 shl 16)->(it - 64)->(it shl 97)->(it - 1)->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(3.4028234663852886E+38:r4 @= Num<r4>(Call(∂.Test.Wrap(340282356779733661637539395458142568447:i):i))), str(7F7FFFFF), 3.4028234663852886E+38:r4, str(0FFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFF)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 7F7FFFFF, 3.4028235E+38, 0FFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFF)
###
> (0x8000ia shl 16)->(it - 0x0041ia)->(it shl 97)->(it - 0)->F4()
(32768 shl 16)->(it - 65)->(it shl 97)->(it - 0)->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(3.4028234663852886E+38:r4 @= Num<r4>(Call(∂.Test.Wrap(340282356621277336609010720271054667776:i):i))), str(7F7FFFFF), 3.4028234663852886E+38:r4, str(0FFFFFF7E000000000000000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 7F7FFFFF, 3.4028235E+38, 0FFFFFF7E000000000000000000000000)
###
> (0x8000ia shl 16)->(it - 0x0080ia)->(it shl 97)->(it - 0)->F4()
(32768 shl 16)->(it - 128)->(it shl 97)->(it - 0)->F4() : (b, s, r4, s)
BndKind:Tuple, Type:(b, s, r4, s), Bnd:((Cmp(3.4028234663852886E+38:r4 @= Num<r4>(Call(∂.Test.Wrap(340282346638528859811704183484516925440:i):i))), str(7F7FFFFF), 3.4028234663852886E+38:r4, str(0FFFFFF00000000000000000000000000)):(b, s, r4, s))
Func sig: () to (b, s, r4, s)
Type: (bool,str,r4,str), Value: (true , 7F7FFFFF, 3.4028235E+38, 0FFFFFF00000000000000000000000000)
###
