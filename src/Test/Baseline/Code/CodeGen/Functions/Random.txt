**** New definitions: Seeds, type: i8*

> RandomS.Uniform(Seeds)
RandomS.Uniform(Seeds) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1)):r8)):r8*))
Func sig: (<ctx>:x, Seeds:i8*) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 0
 0) 0.7262432699679598
  ** [0] RNG seed: -1
 1) 0.9876665812859622
  ** [0] RNG seed: 1
 2) 0.15639625776391303
  ** [0] RNG seed: -9223372036854775808
 3) 0.09574226853239455
  ** [0] RNG seed: 65537
 4) 0.28695044679890874
  ** [0] RNG seed: 281479271743489
 5) 0.37411638459848073
  ** [0] RNG seed: 4294967295
 6) 0.6019429134214032
  ** [0] RNG seed: -4294967296
 7) 0.6339709435747801
  ** [0] RNG seed: -2401053088876216593
 8) 0.8310524932253419
  ** [0] RNG seed: -4688283849255297363
 9) 0.0686672246403374
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, Wrap(-1))
RandomS.Uniform(Seeds, Wrap(-1)) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.With([with:1] Call(∂.Test.Wrap(-1:i8):i8), Call(∂.ForEach([map:2] Global(Seeds), Call(∂.RandomS.Uniform(Scope(2), Scope(1)):r8*)):r8**)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) <null>
 1) <null>
 2) <null>
 3) <null>
 4) <null>
 5) <null>
 6) <null>
 7) <null>
 8) <null>
 9) <null>
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, Wrap(0))
RandomS.Uniform(Seeds, Wrap(0)) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.With([with:1] Call(∂.Test.Wrap(0:i8):i8), Call(∂.ForEach([map:2] Global(Seeds), Call(∂.RandomS.Uniform(Scope(2), Scope(1)):r8*)):r8**)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) <null>
 1) <null>
 2) <null>
 3) <null>
 4) <null>
 5) <null>
 6) <null>
 7) <null>
 8) <null>
 9) <null>
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 0, 1)
RandomS.Uniform(Seeds, 0, 1) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1)):r8)):r8*))
Func sig: (<ctx>:x, Seeds:i8*) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 0
 0) 0.7262432699679598
  ** [0] RNG seed: -1
 1) 0.9876665812859622
  ** [0] RNG seed: 1
 2) 0.15639625776391303
  ** [0] RNG seed: -9223372036854775808
 3) 0.09574226853239455
  ** [0] RNG seed: 65537
 4) 0.28695044679890874
  ** [0] RNG seed: 281479271743489
 5) 0.37411638459848073
  ** [0] RNG seed: 4294967295
 6) 0.6019429134214032
  ** [0] RNG seed: -4294967296
 7) 0.6339709435747801
  ** [0] RNG seed: -2401053088876216593
 8) 0.8310524932253419
  ** [0] RNG seed: -4688283849255297363
 9) 0.0686672246403374
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 1, 0)
RandomS.Uniform(Seeds, 1, 0) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 1:r8, 0:r8):r8)):r8*))
Func sig: (<ctx>:x, Seeds:i8*) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 0
 0) 0.27375673003204015
  ** [0] RNG seed: -1
 1) 0.012333418714037814
  ** [0] RNG seed: 1
 2) 0.8436037422360869
  ** [0] RNG seed: -9223372036854775808
 3) 0.9042577314676055
  ** [0] RNG seed: 65537
 4) 0.7130495532010912
  ** [0] RNG seed: 281479271743489
 5) 0.6258836154015193
  ** [0] RNG seed: 4294967295
 6) 0.39805708657859684
  ** [0] RNG seed: -4294967296
 7) 0.3660290564252199
  ** [0] RNG seed: -2401053088876216593
 8) 0.16894750677465808
  ** [0] RNG seed: -4688283849255297363
 9) 0.9313327753596626
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 0, 100)
RandomS.Uniform(Seeds, 0, 100) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 0:r8, 100:r8):r8)):r8*))
Func sig: (<ctx>:x, Seeds:i8*) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 0
 0) 72.62432699679599
  ** [0] RNG seed: -1
 1) 98.76665812859622
  ** [0] RNG seed: 1
 2) 15.639625776391302
  ** [0] RNG seed: -9223372036854775808
 3) 9.574226853239455
  ** [0] RNG seed: 65537
 4) 28.695044679890874
  ** [0] RNG seed: 281479271743489
 5) 37.41163845984807
  ** [0] RNG seed: 4294967295
 6) 60.19429134214032
  ** [0] RNG seed: -4294967296
 7) 63.39709435747801
  ** [0] RNG seed: -2401053088876216593
 8) 83.10524932253419
  ** [0] RNG seed: -4688283849255297363
 9) 6.86672246403374
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 100, 0)
RandomS.Uniform(Seeds, 100, 0) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 100:r8, 0:r8):r8)):r8*))
Func sig: (<ctx>:x, Seeds:i8*) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 0
 0) 27.375673003204014
  ** [0] RNG seed: -1
 1) 1.2333418714037814
  ** [0] RNG seed: 1
 2) 84.36037422360869
  ** [0] RNG seed: -9223372036854775808
 3) 90.42577314676055
  ** [0] RNG seed: 65537
 4) 71.30495532010912
  ** [0] RNG seed: 281479271743489
 5) 62.58836154015193
  ** [0] RNG seed: 4294967295
 6) 39.80570865785968
  ** [0] RNG seed: -4294967296
 7) 36.60290564252199
  ** [0] RNG seed: -2401053088876216593
 8) 16.894750677465808
  ** [0] RNG seed: -4688283849255297363
 9) 93.13327753596626
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 25, 125)
RandomS.Uniform(Seeds, 25, 125) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 25:r8, 125:r8):r8)):r8*))
Func sig: (<ctx>:x, Seeds:i8*) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 0
 0) 97.62432699679599
  ** [0] RNG seed: -1
 1) 123.76665812859622
  ** [0] RNG seed: 1
 2) 40.6396257763913
  ** [0] RNG seed: -9223372036854775808
 3) 34.57422685323945
  ** [0] RNG seed: 65537
 4) 53.69504467989087
  ** [0] RNG seed: 281479271743489
 5) 62.41163845984808
  ** [0] RNG seed: 4294967295
 6) 85.19429134214032
  ** [0] RNG seed: -4294967296
 7) 88.39709435747801
  ** [0] RNG seed: -2401053088876216593
 8) 108.10524932253419
  ** [0] RNG seed: -4688283849255297363
 9) 31.86672246403374
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 125, 25)
RandomS.Uniform(Seeds, 125, 25) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 125:r8, 25:r8):r8)):r8*))
Func sig: (<ctx>:x, Seeds:i8*) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 0
 0) 52.375673003204014
  ** [0] RNG seed: -1
 1) 26.23334187140378
  ** [0] RNG seed: 1
 2) 109.36037422360869
  ** [0] RNG seed: -9223372036854775808
 3) 115.42577314676055
  ** [0] RNG seed: 65537
 4) 96.30495532010912
  ** [0] RNG seed: 281479271743489
 5) 87.58836154015192
  ** [0] RNG seed: 4294967295
 6) 64.80570865785968
  ** [0] RNG seed: -4294967296
 7) 61.60290564252199
  ** [0] RNG seed: -2401053088876216593
 8) 41.89475067746581
  ** [0] RNG seed: -4688283849255297363
 9) 118.13327753596626
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 25, 125, Wrap(-1))
RandomS.Uniform(Seeds, 25, 125, Wrap(-1)) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.With([with:1] Call(∂.Test.Wrap(-1:i8):i8), Call(∂.ForEach([map:2] Global(Seeds), Call(∂.RandomS.Uniform(Scope(2), 25:r8, 125:r8, Scope(1)):r8*)):r8**)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) <null>
 1) <null>
 2) <null>
 3) <null>
 4) <null>
 5) <null>
 6) <null>
 7) <null>
 8) <null>
 9) <null>
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 25, 125, Wrap(0))
RandomS.Uniform(Seeds, 25, 125, Wrap(0)) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.With([with:1] Call(∂.Test.Wrap(0:i8):i8), Call(∂.ForEach([map:2] Global(Seeds), Call(∂.RandomS.Uniform(Scope(2), 25:r8, 125:r8, Scope(1)):r8*)):r8**)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) <null>
 1) <null>
 2) <null>
 3) <null>
 4) <null>
 5) <null>
 6) <null>
 7) <null>
 8) <null>
 9) <null>
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 0, 1, 3)
RandomS.Uniform(Seeds, 0, 1, 3) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 3:i8):r8*)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) Sequence: Seq<r8>
  ** [0] RNG seed: 0
     0) 0.7262432699679598
     1) 0.8173253595909687
     2) 0.7680226893946634
 1) Sequence: Seq<r8>
  ** [0] RNG seed: -1
     0) 0.9876665812859622
     1) 0.7340581723181802
     2) 0.2167313337403961
 2) Sequence: Seq<r8>
  ** [0] RNG seed: 1
     0) 0.15639625776391303
     1) 0.582575246031664
     2) 0.14087246411520638
 3) Sequence: Seq<r8>
  ** [0] RNG seed: -9223372036854775808
     0) 0.09574226853239455
     1) 0.6289824571595446
     2) 0.1428830177257224
 4) Sequence: Seq<r8>
  ** [0] RNG seed: 65537
     0) 0.28695044679890874
     1) 0.27109874937268846
     2) 0.06790889057699073
 5) Sequence: Seq<r8>
  ** [0] RNG seed: 281479271743489
     0) 0.37411638459848073
     1) 0.1639604708943332
     2) 0.5930726973307657
 6) Sequence: Seq<r8>
  ** [0] RNG seed: 4294967295
     0) 0.6019429134214032
     1) 0.01559851319324156
     2) 0.0434282473490705
 7) Sequence: Seq<r8>
  ** [0] RNG seed: -4294967296
     0) 0.6339709435747801
     1) 0.28915662844160417
     2) 0.44188447084365623
 8) Sequence: Seq<r8>
  ** [0] RNG seed: -2401053088876216593
     0) 0.8310524932253419
     1) 0.36358888836744657
     2) 0.7220984658794936
 9) Sequence: Seq<r8>
  ** [0] RNG seed: -4688283849255297363
     0) 0.0686672246403374
     1) 0.36540472012264874
     2) 0.9449341548350333
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 1, 0, 3)
RandomS.Uniform(Seeds, 1, 0, 3) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 1:r8, 0:r8, 3:i8):r8*)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) Sequence: Seq<r8>
  ** [0] RNG seed: 0
     0) 0.27375673003204015
     1) 0.18267464040903125
     2) 0.23197731060533655
 1) Sequence: Seq<r8>
  ** [0] RNG seed: -1
     0) 0.012333418714037814
     1) 0.26594182768181984
     2) 0.7832686662596039
 2) Sequence: Seq<r8>
  ** [0] RNG seed: 1
     0) 0.8436037422360869
     1) 0.417424753968336
     2) 0.8591275358847936
 3) Sequence: Seq<r8>
  ** [0] RNG seed: -9223372036854775808
     0) 0.9042577314676055
     1) 0.3710175428404554
     2) 0.8571169822742776
 4) Sequence: Seq<r8>
  ** [0] RNG seed: 65537
     0) 0.7130495532010912
     1) 0.7289012506273116
     2) 0.9320911094230093
 5) Sequence: Seq<r8>
  ** [0] RNG seed: 281479271743489
     0) 0.6258836154015193
     1) 0.8360395291056668
     2) 0.40692730266923427
 6) Sequence: Seq<r8>
  ** [0] RNG seed: 4294967295
     0) 0.39805708657859684
     1) 0.9844014868067584
     2) 0.9565717526509295
 7) Sequence: Seq<r8>
  ** [0] RNG seed: -4294967296
     0) 0.3660290564252199
     1) 0.7108433715583958
     2) 0.5581155291563438
 8) Sequence: Seq<r8>
  ** [0] RNG seed: -2401053088876216593
     0) 0.16894750677465808
     1) 0.6364111116325535
     2) 0.27790153412050644
 9) Sequence: Seq<r8>
  ** [0] RNG seed: -4688283849255297363
     0) 0.9313327753596626
     1) 0.6345952798773513
     2) 0.05506584516496671
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 0, 100, 3)
RandomS.Uniform(Seeds, 0, 100, 3) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 0:r8, 100:r8, 3:i8):r8*)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) Sequence: Seq<r8>
  ** [0] RNG seed: 0
     0) 72.62432699679599
     1) 81.73253595909688
     2) 76.80226893946634
 1) Sequence: Seq<r8>
  ** [0] RNG seed: -1
     0) 98.76665812859622
     1) 73.40581723181802
     2) 21.67313337403961
 2) Sequence: Seq<r8>
  ** [0] RNG seed: 1
     0) 15.639625776391302
     1) 58.2575246031664
     2) 14.087246411520638
 3) Sequence: Seq<r8>
  ** [0] RNG seed: -9223372036854775808
     0) 9.574226853239455
     1) 62.89824571595446
     2) 14.28830177257224
 4) Sequence: Seq<r8>
  ** [0] RNG seed: 65537
     0) 28.695044679890874
     1) 27.109874937268845
     2) 6.790889057699073
 5) Sequence: Seq<r8>
  ** [0] RNG seed: 281479271743489
     0) 37.41163845984807
     1) 16.396047089433317
     2) 59.30726973307657
 6) Sequence: Seq<r8>
  ** [0] RNG seed: 4294967295
     0) 60.19429134214032
     1) 1.5598513193241559
     2) 4.34282473490705
 7) Sequence: Seq<r8>
  ** [0] RNG seed: -4294967296
     0) 63.39709435747801
     1) 28.915662844160416
     2) 44.18844708436562
 8) Sequence: Seq<r8>
  ** [0] RNG seed: -2401053088876216593
     0) 83.10524932253419
     1) 36.358888836744654
     2) 72.20984658794936
 9) Sequence: Seq<r8>
  ** [0] RNG seed: -4688283849255297363
     0) 6.86672246403374
     1) 36.54047201226487
     2) 94.49341548350333
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 100, 0, 3)
RandomS.Uniform(Seeds, 100, 0, 3) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 100:r8, 0:r8, 3:i8):r8*)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) Sequence: Seq<r8>
  ** [0] RNG seed: 0
     0) 27.375673003204014
     1) 18.267464040903125
     2) 23.197731060533656
 1) Sequence: Seq<r8>
  ** [0] RNG seed: -1
     0) 1.2333418714037814
     1) 26.594182768181984
     2) 78.32686662596039
 2) Sequence: Seq<r8>
  ** [0] RNG seed: 1
     0) 84.36037422360869
     1) 41.7424753968336
     2) 85.91275358847936
 3) Sequence: Seq<r8>
  ** [0] RNG seed: -9223372036854775808
     0) 90.42577314676055
     1) 37.10175428404554
     2) 85.71169822742776
 4) Sequence: Seq<r8>
  ** [0] RNG seed: 65537
     0) 71.30495532010912
     1) 72.89012506273116
     2) 93.20911094230094
 5) Sequence: Seq<r8>
  ** [0] RNG seed: 281479271743489
     0) 62.58836154015193
     1) 83.60395291056668
     2) 40.69273026692343
 6) Sequence: Seq<r8>
  ** [0] RNG seed: 4294967295
     0) 39.80570865785968
     1) 98.44014868067585
     2) 95.65717526509296
 7) Sequence: Seq<r8>
  ** [0] RNG seed: -4294967296
     0) 36.60290564252199
     1) 71.08433715583958
     2) 55.81155291563438
 8) Sequence: Seq<r8>
  ** [0] RNG seed: -2401053088876216593
     0) 16.894750677465808
     1) 63.641111163255346
     2) 27.790153412050643
 9) Sequence: Seq<r8>
  ** [0] RNG seed: -4688283849255297363
     0) 93.13327753596626
     1) 63.45952798773513
     2) 5.506584516496671
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 25, 125, 3)
RandomS.Uniform(Seeds, 25, 125, 3) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 25:r8, 125:r8, 3:i8):r8*)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) Sequence: Seq<r8>
  ** [0] RNG seed: 0
     0) 97.62432699679599
     1) 106.73253595909688
     2) 101.80226893946634
 1) Sequence: Seq<r8>
  ** [0] RNG seed: -1
     0) 123.76665812859622
     1) 98.40581723181802
     2) 46.67313337403961
 2) Sequence: Seq<r8>
  ** [0] RNG seed: 1
     0) 40.6396257763913
     1) 83.2575246031664
     2) 39.08724641152064
 3) Sequence: Seq<r8>
  ** [0] RNG seed: -9223372036854775808
     0) 34.57422685323945
     1) 87.89824571595446
     2) 39.28830177257224
 4) Sequence: Seq<r8>
  ** [0] RNG seed: 65537
     0) 53.69504467989087
     1) 52.10987493726885
     2) 31.790889057699076
 5) Sequence: Seq<r8>
  ** [0] RNG seed: 281479271743489
     0) 62.41163845984808
     1) 41.39604708943332
     2) 84.30726973307658
 6) Sequence: Seq<r8>
  ** [0] RNG seed: 4294967295
     0) 85.19429134214032
     1) 26.559851319324157
     2) 29.34282473490705
 7) Sequence: Seq<r8>
  ** [0] RNG seed: -4294967296
     0) 88.39709435747801
     1) 53.91566284416041
     2) 69.18844708436562
 8) Sequence: Seq<r8>
  ** [0] RNG seed: -2401053088876216593
     0) 108.10524932253419
     1) 61.35888883674466
     2) 97.20984658794936
 9) Sequence: Seq<r8>
  ** [0] RNG seed: -4688283849255297363
     0) 31.86672246403374
     1) 61.54047201226488
     2) 119.49341548350333
*** Ctx ping count: 0
###
> RandomS.Uniform(Seeds, 125, 25, 3)
RandomS.Uniform(Seeds, 125, 25, 3) : r8**
BndKind:Call, Type:r8**, Bnd:(Call(∂.ForEach([map:1] Global(Seeds), Call(∂.RandomS.Uniform(Scope(1), 125:r8, 25:r8, 3:i8):r8*)):r8**))
Func sig: (<ctx>:x, Seeds:i8*) to r8**
Sequence: Seq<Seq<r8>>
 0) Sequence: Seq<r8>
  ** [0] RNG seed: 0
     0) 52.375673003204014
     1) 43.26746404090312
     2) 48.197731060533656
 1) Sequence: Seq<r8>
  ** [0] RNG seed: -1
     0) 26.23334187140378
     1) 51.59418276818199
     2) 103.32686662596039
 2) Sequence: Seq<r8>
  ** [0] RNG seed: 1
     0) 109.36037422360869
     1) 66.7424753968336
     2) 110.91275358847936
 3) Sequence: Seq<r8>
  ** [0] RNG seed: -9223372036854775808
     0) 115.42577314676055
     1) 62.10175428404554
     2) 110.71169822742776
 4) Sequence: Seq<r8>
  ** [0] RNG seed: 65537
     0) 96.30495532010912
     1) 97.89012506273116
     2) 118.20911094230094
 5) Sequence: Seq<r8>
  ** [0] RNG seed: 281479271743489
     0) 87.58836154015192
     1) 108.60395291056668
     2) 65.69273026692343
 6) Sequence: Seq<r8>
  ** [0] RNG seed: 4294967295
     0) 64.80570865785968
     1) 123.44014868067583
     2) 120.65717526509295
 7) Sequence: Seq<r8>
  ** [0] RNG seed: -4294967296
     0) 61.60290564252199
     1) 96.08433715583958
     2) 80.81155291563438
 8) Sequence: Seq<r8>
  ** [0] RNG seed: -2401053088876216593
     0) 41.89475067746581
     1) 88.64111116325535
     2) 52.79015341205064
 9) Sequence: Seq<r8>
  ** [0] RNG seed: -4688283849255297363
     0) 118.13327753596626
     1) 88.45952798773513
     2) 30.50658451649667
*** Ctx ping count: 0
###

**** New definitions: Inf, type: r8
**** New definitions: NInf, type: r8
**** New definitions: NaN, type: r8

> RandomS.Uniform(0, -5, NaN)
RandomS.Uniform(0, -5, NaN) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, -5:r8, Global(NaN)):r8))
Func sig: (<ctx>:x, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NaN, 5)
RandomS.Uniform(0, NaN, 5) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NaN), 5:r8):r8))
Func sig: (<ctx>:x, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NaN, NaN)
RandomS.Uniform(0, NaN, NaN) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NaN), Global(NaN)):r8))
Func sig: (<ctx>:x, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, -5, NaN, 3)
RandomS.Uniform(0, -5, NaN, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, -5:r8, Global(NaN), 3:i8):r8*))
Func sig: (<ctx>:x, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NaN, 5, 3)
RandomS.Uniform(0, NaN, 5, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NaN), 5:r8, 3:i8):r8*))
Func sig: (<ctx>:x, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NaN, NaN, 3)
RandomS.Uniform(0, NaN, NaN, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NaN), Global(NaN), 3:i8):r8*))
Func sig: (<ctx>:x, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, 0, Inf)
RandomS.Uniform(0, 0, Inf) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, 0:r8, Global(Inf)):r8))
Func sig: (<ctx>:x, Inf:r8) to r8
Type: r8, Value: ∞
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NInf, 0)
RandomS.Uniform(0, NInf, 0) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NInf), 0:r8):r8))
Func sig: (<ctx>:x, NInf:r8) to r8
Type: r8, Value: -∞
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NInf, Inf)
RandomS.Uniform(0, NInf, Inf) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NInf), Global(Inf)):r8))
Func sig: (<ctx>:x, NInf:r8, Inf:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, Inf, NInf)
RandomS.Uniform(0, Inf, NInf) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(Inf), Global(NInf)):r8))
Func sig: (<ctx>:x, Inf:r8, NInf:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, Inf, Inf)
RandomS.Uniform(0, Inf, Inf) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(Inf), Global(Inf)):r8))
Func sig: (<ctx>:x, Inf:r8) to r8
Type: r8, Value: ∞
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NInf, NInf)
RandomS.Uniform(0, NInf, NInf) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NInf), Global(NInf)):r8))
Func sig: (<ctx>:x, NInf:r8) to r8
Type: r8, Value: -∞
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NInf, NaN)
RandomS.Uniform(0, NInf, NaN) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NInf), Global(NaN)):r8))
Func sig: (<ctx>:x, NInf:r8, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, Inf, NaN)
RandomS.Uniform(0, Inf, NaN) : r8
BndKind:Call, Type:r8, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(Inf), Global(NaN)):r8))
Func sig: (<ctx>:x, Inf:r8, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, 0, Inf, 3)
RandomS.Uniform(0, 0, Inf, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, 0:r8, Global(Inf), 3:i8):r8*))
Func sig: (<ctx>:x, Inf:r8) to r8*
Sequence: Seq<r8>
 0) ∞
 1) ∞
 2) ∞
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NInf, 0, 3)
RandomS.Uniform(0, NInf, 0, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NInf), 0:r8, 3:i8):r8*))
Func sig: (<ctx>:x, NInf:r8) to r8*
Sequence: Seq<r8>
 0) -∞
 1) -∞
 2) -∞
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NInf, Inf, 3)
RandomS.Uniform(0, NInf, Inf, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NInf), Global(Inf), 3:i8):r8*))
Func sig: (<ctx>:x, NInf:r8, Inf:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, Inf, NInf, 3)
RandomS.Uniform(0, Inf, NInf, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(Inf), Global(NInf), 3:i8):r8*))
Func sig: (<ctx>:x, Inf:r8, NInf:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, Inf, Inf, 3)
RandomS.Uniform(0, Inf, Inf, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(Inf), Global(Inf), 3:i8):r8*))
Func sig: (<ctx>:x, Inf:r8) to r8*
Sequence: Seq<r8>
 0) ∞
 1) ∞
 2) ∞
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NInf, NInf, 3)
RandomS.Uniform(0, NInf, NInf, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NInf), Global(NInf), 3:i8):r8*))
Func sig: (<ctx>:x, NInf:r8) to r8*
Sequence: Seq<r8>
 0) -∞
 1) -∞
 2) -∞
*** Ctx ping count: 0
###
> RandomS.Uniform(0, NInf, NaN, 3)
RandomS.Uniform(0, NInf, NaN, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(NInf), Global(NaN), 3:i8):r8*))
Func sig: (<ctx>:x, NInf:r8, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> RandomS.Uniform(0, Inf, NaN, 3)
RandomS.Uniform(0, Inf, NaN, 3) : r8*
BndKind:Call, Type:r8*, Bnd:(Call(∂.RandomS.Uniform(0:i8, Global(Inf), Global(NaN), 3:i8):r8*))
Func sig: (<ctx>:x, Inf:r8, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
