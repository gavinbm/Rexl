> Random.Uniform()
Random.Uniform() : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform():r8))
AllKinds: CallVolatile
// (<ctx>) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 22

Func sig: (<ctx>:x) to r8
  ** [0] RNG seed: 1
Type: r8, Value: 0.15639625776391303
*** Ctx ping count: 0
###
> Random.Uniform(Wrap(-1))
Random.Uniform(Wrap(-1)) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Call(∂.Test.Wrap(-1:i8):i8)):r8*))
AllKinds: Int, Call, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldc.i4.m1
      1) conv.i8
      5) call static WrapFuncGen::Exec(i8):i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 24

Func sig: (<ctx>:x) to r8*
Type: <null>, Value: <null>
*** Ctx ping count: 0
###
> Random.Uniform(Wrap(0))
Random.Uniform(Wrap(0)) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Call(∂.Test.Wrap(0:i8):i8)):r8*))
AllKinds: Int, Call, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldc.i4.0
      1) conv.i8
      5) call static WrapFuncGen::Exec(i8):i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 24

Func sig: (<ctx>:x) to r8*
Type: <null>, Value: <null>
*** Ctx ping count: 0
###
> Random.Uniform(0, 1)
Random.Uniform(0, 1) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform():r8))
AllKinds: CallVolatile
// (<ctx>) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 22

Func sig: (<ctx>:x) to r8
  ** [0] RNG seed: 1
Type: r8, Value: 0.15639625776391303
*** Ctx ping count: 0
###
> Random.Uniform(1, 0)
Random.Uniform(1, 0) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(1:r8, 0:r8):r8))
AllKinds: Flt, CallVolatile
// (<ctx>) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [1]
      9) ldc.r8 [0]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 40

Func sig: (<ctx>:x) to r8
  ** [0] RNG seed: 1
Type: r8, Value: 0.8436037422360869
*** Ctx ping count: 0
###
> Random.Uniform(0, 100)
Random.Uniform(0, 100) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(0:r8, 100:r8):r8))
AllKinds: Flt, CallVolatile
// (<ctx>) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [0]
      9) ldc.r8 [100]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 40

Func sig: (<ctx>:x) to r8
  ** [0] RNG seed: 1
Type: r8, Value: 15.639625776391302
*** Ctx ping count: 0
###
> Random.Uniform(100, 0)
Random.Uniform(100, 0) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(100:r8, 0:r8):r8))
AllKinds: Flt, CallVolatile
// (<ctx>) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [100]
      9) ldc.r8 [0]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 40

Func sig: (<ctx>:x) to r8
  ** [0] RNG seed: 1
Type: r8, Value: 84.36037422360869
*** Ctx ping count: 0
###
> Random.Uniform(25, 125)
Random.Uniform(25, 125) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(25:r8, 125:r8):r8))
AllKinds: Flt, CallVolatile
// (<ctx>) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [25]
      9) ldc.r8 [125]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 40

Func sig: (<ctx>:x) to r8
  ** [0] RNG seed: 1
Type: r8, Value: 40.6396257763913
*** Ctx ping count: 0
###
> Random.Uniform(125, 25)
Random.Uniform(125, 25) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(125:r8, 25:r8):r8))
AllKinds: Flt, CallVolatile
// (<ctx>) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [125]
      9) ldc.r8 [25]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 40

Func sig: (<ctx>:x) to r8
  ** [0] RNG seed: 1
Type: r8, Value: 109.36037422360869
*** Ctx ping count: 0
###
> Random.Uniform(25, 125, Wrap(-1))
Random.Uniform(25, 125, Wrap(-1)) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(25:r8, 125:r8, Call(∂.Test.Wrap(-1:i8):i8)):r8*))
AllKinds: Int, Flt, Call, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [25]
      9) ldc.r8 [125]
      1) ldc.i4.m1
      1) conv.i8
      5) call static WrapFuncGen::Exec(i8):i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 42

Func sig: (<ctx>:x) to r8*
Type: <null>, Value: <null>
*** Ctx ping count: 0
###
> Random.Uniform(25, 125, Wrap(0))
Random.Uniform(25, 125, Wrap(0)) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(25:r8, 125:r8, Call(∂.Test.Wrap(0:i8):i8)):r8*))
AllKinds: Int, Flt, Call, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [25]
      9) ldc.r8 [125]
      1) ldc.i4.0
      1) conv.i8
      5) call static WrapFuncGen::Exec(i8):i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 42

Func sig: (<ctx>:x) to r8*
Type: <null>, Value: <null>
*** Ctx ping count: 0
###
> Random.Uniform(0, 1, 3)
Random.Uniform(0, 1, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(3:i8):r8*))
AllKinds: Int, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 19

Func sig: (<ctx>:x) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 1
 0) 0.15639625776391303
 1) 0.582575246031664
 2) 0.14087246411520638
*** Ctx ping count: 0
###
> Random.Uniform(1, 0, 3)
Random.Uniform(1, 0, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(1:r8, 0:r8, 3:i8):r8*))
AllKinds: Int, Flt, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [1]
      9) ldc.r8 [0]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 37

Func sig: (<ctx>:x) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 1
 0) 0.8436037422360869
 1) 0.417424753968336
 2) 0.8591275358847936
*** Ctx ping count: 0
###
> Random.Uniform(0, 100, 3)
Random.Uniform(0, 100, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(0:r8, 100:r8, 3:i8):r8*))
AllKinds: Int, Flt, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [0]
      9) ldc.r8 [100]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 37

Func sig: (<ctx>:x) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 1
 0) 15.639625776391302
 1) 58.2575246031664
 2) 14.087246411520638
*** Ctx ping count: 0
###
> Random.Uniform(100, 0, 3)
Random.Uniform(100, 0, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(100:r8, 0:r8, 3:i8):r8*))
AllKinds: Int, Flt, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [100]
      9) ldc.r8 [0]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 37

Func sig: (<ctx>:x) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 1
 0) 84.36037422360869
 1) 41.7424753968336
 2) 85.91275358847936
*** Ctx ping count: 0
###
> Random.Uniform(25, 125, 3)
Random.Uniform(25, 125, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(25:r8, 125:r8, 3:i8):r8*))
AllKinds: Int, Flt, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [25]
      9) ldc.r8 [125]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 37

Func sig: (<ctx>:x) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 1
 0) 40.6396257763913
 1) 83.2575246031664
 2) 39.08724641152064
*** Ctx ping count: 0
###
> Random.Uniform(125, 25, 3)
Random.Uniform(125, 25, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(125:r8, 25:r8, 3:i8):r8*))
AllKinds: Int, Flt, CallVolatile
// (<ctx>) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      9) ldc.r8 [125]
      9) ldc.r8 [25]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 37

Func sig: (<ctx>:x) to r8*
Sequence: Seq<r8>
  ** [0] RNG seed: 1
 0) 109.36037422360869
 1) 66.7424753968336
 2) 110.91275358847936
*** Ctx ping count: 0
###

**** New definitions: Inf, type: r8
**** New definitions: NInf, type: r8
**** New definitions: NaN, type: r8

> Random.Uniform(-5, NaN)
Random.Uniform(-5, NaN) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(-5:r8, Global(NaN)):r8))
AllKinds: Flt, Global, CallVolatile
// (<ctx>, ∂.NaN:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      9) ldc.r8 [-5]
      1) ldloc.1 [r8]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 41

Func sig: (<ctx>:x, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> Random.Uniform(NaN, 5)
Random.Uniform(NaN, 5) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(Global(NaN), 5:r8):r8))
AllKinds: Flt, Global, CallVolatile
// (<ctx>, ∂.NaN:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      9) ldc.r8 [5]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 41

Func sig: (<ctx>:x, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> Random.Uniform(NaN, NaN)
Random.Uniform(NaN, NaN) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(Global(NaN), Global(NaN)):r8))
AllKinds: Global, CallVolatile
// (<ctx>, ∂.NaN:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 33

Func sig: (<ctx>:x, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> Random.Uniform(-5, NaN, 3)
Random.Uniform(-5, NaN, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(-5:r8, Global(NaN), 3:i8):r8*))
AllKinds: Int, Flt, Global, CallVolatile
// (<ctx>, ∂.NaN:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      9) ldc.r8 [-5]
      1) ldloc.1 [r8]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 38

Func sig: (<ctx>:x, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> Random.Uniform(NaN, 5, 3)
Random.Uniform(NaN, 5, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Global(NaN), 5:r8, 3:i8):r8*))
AllKinds: Int, Flt, Global, CallVolatile
// (<ctx>, ∂.NaN:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      9) ldc.r8 [5]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 38

Func sig: (<ctx>:x, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> Random.Uniform(NaN, NaN, 3)
Random.Uniform(NaN, NaN, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Global(NaN), Global(NaN), 3:i8):r8*))
AllKinds: Int, Global, CallVolatile
// (<ctx>, ∂.NaN:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 30

Func sig: (<ctx>:x, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> Random.Uniform(0, Inf)
Random.Uniform(0, Inf) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(0:r8, Global(Inf)):r8))
AllKinds: Flt, Global, CallVolatile
// (<ctx>, ∂.Inf:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      9) ldc.r8 [0]
      1) ldloc.1 [r8]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 41

Func sig: (<ctx>:x, Inf:r8) to r8
Type: r8, Value: ∞
*** Ctx ping count: 0
###
> Random.Uniform(NInf, 0)
Random.Uniform(NInf, 0) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(Global(NInf), 0:r8):r8))
AllKinds: Flt, Global, CallVolatile
// (<ctx>, ∂.NInf:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      9) ldc.r8 [0]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 41

Func sig: (<ctx>:x, NInf:r8) to r8
Type: r8, Value: -∞
*** Ctx ping count: 0
###
> Random.Uniform(NInf, Inf)
Random.Uniform(NInf, Inf) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(Global(NInf), Global(Inf)):r8))
AllKinds: Global, CallVolatile
// (<ctx>, ∂.NInf:r8, ∂.Inf:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [r8]
      1) ldloc.2 [r8]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 42

Func sig: (<ctx>:x, NInf:r8, Inf:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> Random.Uniform(Inf, NInf)
Random.Uniform(Inf, NInf) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(Global(Inf), Global(NInf)):r8))
AllKinds: Global, CallVolatile
// (<ctx>, ∂.Inf:r8, ∂.NInf:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [r8]
      1) ldloc.2 [r8]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 42

Func sig: (<ctx>:x, Inf:r8, NInf:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> Random.Uniform(Inf, Inf)
Random.Uniform(Inf, Inf) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(Global(Inf), Global(Inf)):r8))
AllKinds: Global, CallVolatile
// (<ctx>, ∂.Inf:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 33

Func sig: (<ctx>:x, Inf:r8) to r8
Type: r8, Value: ∞
*** Ctx ping count: 0
###
> Random.Uniform(NInf, NInf)
Random.Uniform(NInf, NInf) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(Global(NInf), Global(NInf)):r8))
AllKinds: Global, CallVolatile
// (<ctx>, ∂.NInf:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 33

Func sig: (<ctx>:x, NInf:r8) to r8
Type: r8, Value: -∞
*** Ctx ping count: 0
###
> Random.Uniform(NInf, NaN)
Random.Uniform(NInf, NaN) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(Global(NInf), Global(NaN)):r8))
AllKinds: Global, CallVolatile
// (<ctx>, ∂.NInf:r8, ∂.NaN:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [r8]
      1) ldloc.2 [r8]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 42

Func sig: (<ctx>:x, NInf:r8, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> Random.Uniform(Inf, NaN)
Random.Uniform(Inf, NaN) : r8
BndKind:CallVolatile, Type:r8, Bnd:(CallVol(∂.Random.Uniform(Global(Inf), Global(NaN)):r8))
AllKinds: Global, CallVolatile
// (<ctx>, ∂.Inf:r8, ∂.NaN:r8) : r8
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [r8]
      1) ldloc.2 [r8]
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, ExecCtx, i4):r8
      5) box [r8]
      1) ret
  Total Size: 42

Func sig: (<ctx>:x, Inf:r8, NaN:r8) to r8
Type: r8, Value: NaN
*** Ctx ping count: 0
###
> Random.Uniform(0, Inf, 3)
Random.Uniform(0, Inf, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(0:r8, Global(Inf), 3:i8):r8*))
AllKinds: Int, Flt, Global, CallVolatile
// (<ctx>, ∂.Inf:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      9) ldc.r8 [0]
      1) ldloc.1 [r8]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 38

Func sig: (<ctx>:x, Inf:r8) to r8*
Sequence: Seq<r8>
 0) ∞
 1) ∞
 2) ∞
*** Ctx ping count: 0
###
> Random.Uniform(NInf, 0, 3)
Random.Uniform(NInf, 0, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Global(NInf), 0:r8, 3:i8):r8*))
AllKinds: Int, Flt, Global, CallVolatile
// (<ctx>, ∂.NInf:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      9) ldc.r8 [0]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 38

Func sig: (<ctx>:x, NInf:r8) to r8*
Sequence: Seq<r8>
 0) -∞
 1) -∞
 2) -∞
*** Ctx ping count: 0
###
> Random.Uniform(NInf, Inf, 3)
Random.Uniform(NInf, Inf, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Global(NInf), Global(Inf), 3:i8):r8*))
AllKinds: Int, Global, CallVolatile
// (<ctx>, ∂.NInf:r8, ∂.Inf:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [r8]
      1) ldloc.2 [r8]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 39

Func sig: (<ctx>:x, NInf:r8, Inf:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> Random.Uniform(Inf, NInf, 3)
Random.Uniform(Inf, NInf, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Global(Inf), Global(NInf), 3:i8):r8*))
AllKinds: Int, Global, CallVolatile
// (<ctx>, ∂.Inf:r8, ∂.NInf:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [r8]
      1) ldloc.2 [r8]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 39

Func sig: (<ctx>:x, Inf:r8, NInf:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> Random.Uniform(Inf, Inf, 3)
Random.Uniform(Inf, Inf, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Global(Inf), Global(Inf), 3:i8):r8*))
AllKinds: Int, Global, CallVolatile
// (<ctx>, ∂.Inf:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 30

Func sig: (<ctx>:x, Inf:r8) to r8*
Sequence: Seq<r8>
 0) ∞
 1) ∞
 2) ∞
*** Ctx ping count: 0
###
> Random.Uniform(NInf, NInf, 3)
Random.Uniform(NInf, NInf, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Global(NInf), Global(NInf), 3:i8):r8*))
AllKinds: Int, Global, CallVolatile
// (<ctx>, ∂.NInf:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldloc.1 [r8]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 30

Func sig: (<ctx>:x, NInf:r8) to r8*
Sequence: Seq<r8>
 0) -∞
 1) -∞
 2) -∞
*** Ctx ping count: 0
###
> Random.Uniform(NInf, NaN, 3)
Random.Uniform(NInf, NaN, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Global(NInf), Global(NaN), 3:i8):r8*))
AllKinds: Int, Global, CallVolatile
// (<ctx>, ∂.NInf:r8, ∂.NaN:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [r8]
      1) ldloc.2 [r8]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 39

Func sig: (<ctx>:x, NInf:r8, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
> Random.Uniform(Inf, NaN, 3)
Random.Uniform(Inf, NaN, 3) : r8*
BndKind:CallVolatile, Type:r8*, Bnd:(CallVol(∂.Random.Uniform(Global(Inf), Global(NaN), 3:i8):r8*))
AllKinds: Int, Global, CallVolatile
// (<ctx>, ∂.Inf:r8, ∂.NaN:r8) : r8*
top(Arr<obj>, Arr<obj>):obj
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.0
      1) ldelem.ref
      5) call static CodeGenUtil::ToRef(obj):ExecCtx
      1) stloc.0 [ExecCtx]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.1
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.1 [r8]
      1) ldarg.1 [Arr<obj>]
      1) ldc.i4.2
      1) ldelem.ref
      5) call static CodeGenUtil::ToVal(obj):r8
      1) stloc.2 [r8]
      1) ldloc.1 [r8]
      1) ldloc.2 [r8]
      1) ldc.i4.3
      1) conv.i8
      1) ldloc.0 [ExecCtx]
      1) ldc.i4.0
      5) call static UniformGen::Exec(r8, r8, i8, ExecCtx, i4):ICachingEnumerable<r8>
      1) ret
  Total Size: 39

Func sig: (<ctx>:x, Inf:r8, NaN:r8) to r8*
Sequence: Seq<r8>
 0) NaN
 1) NaN
 2) NaN
*** Ctx ping count: 0
###
