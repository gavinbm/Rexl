**** New definitions: T, type: i8[*]
**** New definitions: U, type: i8[*,*]

> ({'  T': T}, {'  U': U }, {Dot: T->Dot(U)})
({ '  T' : T }, { '  U' : U }, { Dot : T->Dot(U) }) : ({'  T':i8[*]}, {'  U':i8[*,*]}, {Dot:i8[*]})
BndKind:Tuple, Type:({'  T':i8[*]}, {'  U':i8[*,*]}, {Dot:i8[*]}), Bnd:(({  T:Global(T)}, {  U:Global(U)}, {Dot:Call(âˆ‚.Tensor.Dot(Global(T), Global(U)):i8[*])}):({'  T':i8[*]}, {'  U':i8[*,*]}, {Dot:i8[*]}))
Func sig: (T:i8[*], U:i8[*,*]) to ({'  T':i8[*]}, {'  U':i8[*,*]}, {Dot:i8[*]})
Type: ({Ten<i8>},{Ten<i8>},{Ten<i8>}), Value: (
    {   T: Ten<i8>(1)<0> [1] },
    {   U: Ten<i8>(1,1)<0,0>
          [[1]]
    },
    { Dot: Ten<i8>(1)<0> [1] })
###
