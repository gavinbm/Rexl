**** New globals: {r:{A:i8}, s:i8*, t:{A:i8}*}

> Range(3) ++ Range(10)
Range(3) ++ Range(10) : i8*
Binder : (13, 13) SeqConcat(Range(3), Range(10))
###
> Chain(Range(3), Range(10))
Chain(Range(3), Range(10)) : i8*
Binder : (13, 13) Chain*(Range(3), Range(10))
Reducer: (13, 13) SeqConcat(Range(3), Range(10))
###
> [1, 2] ++ [3, 4, 5]
[1, 2] ++ [3, 4, 5] : i8*
Binder : (5, 5) SeqConcat([1, 2], [3, 4, 5])
###
> Chain([1, 2], [3, 4, 5])
Chain([1, 2], [3, 4, 5]) : i8*
Binder : (5, 5) Chain*([1, 2], [3, 4, 5])
Reducer: (5, 5) SeqConcat([1, 2], [3, 4, 5])
###
> [1, 2] ++ null ++ [3, 4, 5] ++ []
[1, 2] ++ null ++ [3, 4, 5] ++ [] : i8*
Binder : (5, 5) SeqConcat([1, 2], null, [3, 4, 5], null)
Reducer: (5, 5) SeqConcat([1, 2], [3, 4, 5])
###
> Chain([1, 2], null, [3, 4, 5], [])
Chain([1, 2], null, [3, 4, 5], []) : i8*
Binder : (5, 5) Chain*([1, 2], null, [3, 4, 5], null)
Reducer: (5, 5) SeqConcat([1, 2], [3, 4, 5])
###
> s ++ Range(17)
s ++ Range(17) : i8*
Binder : (17, *) SeqConcat(s, Range(17))
###
> Chain(s, Range(17))
Chain(s, Range(17)) : i8*
Binder : (17, *) Chain*(s, Range(17))
Reducer: (17, *) SeqConcat(s, Range(17))
###
> s ++ Range(17) ++ s
s ++ Range(17) ++ s : i8*
Binder : (17, *) SeqConcat(s, Range(17), s)
###
> Chain(s, Range(17), s)
Chain(s, Range(17), s) : i8*
Binder : (17, *) Chain*(s, Range(17), s)
Reducer: (17, *) SeqConcat(s, Range(17), s)
###
> s ++ Range(17) ++ s ++ Range(5)
s ++ Range(17) ++ s ++ Range(5) : i8*
Binder : (22, *) SeqConcat(s, Range(17), s, Range(5))
###
> Chain(s, Range(17), s, Range(5))
Chain(s, Range(17), s, Range(5)) : i8*
Binder : (22, *) Chain*(s, Range(17), s, Range(5))
Reducer: (22, *) SeqConcat(s, Range(17), s, Range(5))
###
> [null] ++ Repeat(r, 3)
[null] ++ Repeat(r, 3) : {A:i8}?*
Binder : (4, 4) SeqConcat([null], Ref<{A:i8}?*>(Repeat(r, 3)))
###
> GroupBy(Range(20)->Mod(3), it)
GroupBy(Range(20)->Mod(3), it) : i8**
Binder : (1, 20) GroupBy(*2: ForEach(*1: Range(20), Mod(*1, 3)), [key] *2)
###
