**** New globals: {b:b, d:d, i:i, i1:i1, i2:i2, i4:i4, i8:i8, qb:b?, qd:d?, qi:i?, qi1:i1?, qi2:i2?, qi4:i4?, qi8:i8?, qr4:r4?, qr8:r8?, qu1:u1?, qu2:u2?, qu4:u4?, qu8:u8?, r4:r4, r8:r8, s:s, u1:u1, u2:u2, u4:u4, u8:u8}

> Int.Hex(s)
Int.Hex(s) : s
*** Error: (8,9) Node: s, Message: Invalid operand type: cannot convert type 's' to 'i8'
Binder : Int.Hex(Error(ErrBadType_Src_Dst))
###
> Int.Hex(d)
Int.Hex(d) : s
*** Error: (8,9) Node: d, Message: Invalid operand type: cannot convert type 'd' to 'i8'
Binder : Int.Hex(Error(ErrBadType_Src_Dst))
###
> Int.Hex(r8)
Int.Hex(r8) : s
*** Error: (8,10) Node: r8, Message: Invalid operand type: cannot convert type 'r8' to 'i8'
Binder : Int.Hex(Error(ErrBadType_Src_Dst))
###
> Int.Hex(r4)
Int.Hex(r4) : s
*** Error: (8,10) Node: r4, Message: Invalid operand type: cannot convert type 'r4' to 'i8'
Binder : Int.Hex(Error(ErrBadType_Src_Dst))
###
> Int.Hex(i)
Int.Hex(i) : s
Binder : Int.Hex(i)
###
> Int.Hex(i8)
Int.Hex(i8) : s
Binder : Int.Hex(i8)
###
> Int.Hex(i4)
Int.Hex(i4) : s
Binder : Int.Hex(i4)
###
> Int.Hex(i2)
Int.Hex(i2) : s
Binder : Int.Hex(i2)
###
> Int.Hex(i1)
Int.Hex(i1) : s
Binder : Int.Hex(i1)
###
> Int.Hex(u8)
Int.Hex(u8) : s
Binder : Int.Hex(u8)
###
> Int.Hex(u4)
Int.Hex(u4) : s
Binder : Int.Hex(u4)
###
> Int.Hex(u2)
Int.Hex(u2) : s
Binder : Int.Hex(u2)
###
> Int.Hex(u1)
Int.Hex(u1) : s
Binder : Int.Hex(u1)
###
> Int.Hex(b)
Int.Hex(b) : s
Binder : Int.Hex(b)
###
> Int.Hex(qd)
Int.Hex(qd) : s
*** Error: (8,10) Node: qd, Message: Invalid operand type: cannot convert type 'd' to 'i8'
Binder : Guard(?1: qd, Int.Hex(Error(ErrBadType_Src_Dst)))
###
> Int.Hex(qr8)
Int.Hex(qr8) : s
*** Error: (8,11) Node: qr8, Message: Invalid operand type: cannot convert type 'r8' to 'i8'
Binder : Guard(?1: qr8, Int.Hex(Error(ErrBadType_Src_Dst)))
###
> Int.Hex(qr4)
Int.Hex(qr4) : s
*** Error: (8,11) Node: qr4, Message: Invalid operand type: cannot convert type 'r4' to 'i8'
Binder : Guard(?1: qr4, Int.Hex(Error(ErrBadType_Src_Dst)))
###
> Int.Hex(qi)
Int.Hex(qi) : s
Binder : Guard(?1: qi, Int.Hex(?1))
###
> Int.Hex(qi8)
Int.Hex(qi8) : s
Binder : Guard(?1: qi8, Int.Hex(?1))
###
> Int.Hex(qi4)
Int.Hex(qi4) : s
Binder : Guard(?1: qi4, Int.Hex(?1))
###
> Int.Hex(qi2)
Int.Hex(qi2) : s
Binder : Guard(?1: qi2, Int.Hex(?1))
###
> Int.Hex(qi1)
Int.Hex(qi1) : s
Binder : Guard(?1: qi1, Int.Hex(?1))
###
> Int.Hex(qu8)
Int.Hex(qu8) : s
Binder : Guard(?1: qu8, Int.Hex(?1))
###
> Int.Hex(qu4)
Int.Hex(qu4) : s
Binder : Guard(?1: qu4, Int.Hex(?1))
###
> Int.Hex(qu2)
Int.Hex(qu2) : s
Binder : Guard(?1: qu2, Int.Hex(?1))
###
> Int.Hex(qu1)
Int.Hex(qu1) : s
Binder : Guard(?1: qu1, Int.Hex(?1))
###
> Int.Hex(qb)
Int.Hex(qb) : s
Binder : Guard(?1: qb, Int.Hex(?1))
###
> i.Hex
i.Hex : s
Binder : Int.Hex(i)
###
> i8.Hex
i8.Hex : s
Binder : Int.Hex(i8)
###
> i4.Hex
i4.Hex : s
Binder : Int.Hex(i4)
###
> i2.Hex
i2.Hex : s
Binder : Int.Hex(i2)
###
> i1.Hex
i1.Hex : s
Binder : Int.Hex(i1)
###
> u8.Hex
u8.Hex : s
Binder : Int.Hex(u8)
###
> u4.Hex
u4.Hex : s
Binder : Int.Hex(u4)
###
> u2.Hex
u2.Hex : s
Binder : Int.Hex(u2)
###
> u1.Hex
u1.Hex : s
Binder : Int.Hex(u1)
###
> b.Hex
b.Hex : s
Binder : Int.Hex(b)
###
> qi.Hex
qi.Hex : s
Binder : Guard(?1: qi, Int.Hex(?1))
###
> qi8.Hex
qi8.Hex : s
Binder : Guard(?1: qi8, Int.Hex(?1))
###
> qi4.Hex
qi4.Hex : s
Binder : Guard(?1: qi4, Int.Hex(?1))
###
> qi2.Hex
qi2.Hex : s
Binder : Guard(?1: qi2, Int.Hex(?1))
###
> qi1.Hex
qi1.Hex : s
Binder : Guard(?1: qi1, Int.Hex(?1))
###
> qu8.Hex
qu8.Hex : s
Binder : Guard(?1: qu8, Int.Hex(?1))
###
> qu4.Hex
qu4.Hex : s
Binder : Guard(?1: qu4, Int.Hex(?1))
###
> qu2.Hex
qu2.Hex : s
Binder : Guard(?1: qu2, Int.Hex(?1))
###
> qu1.Hex
qu1.Hex : s
Binder : Guard(?1: qu1, Int.Hex(?1))
###
> qb.Hex
qb.Hex : s
Binder : Guard(?1: qb, Int.Hex(?1))
###
> 123ia.Hex
123.Hex : s
Binder : Int.Hex(123)
Reducer: "7B"
###
> 123i8.Hex
123.Hex : s
Binder : Int.Hex(123)
Reducer: "000000000000007B"
###
> 123i4.Hex
123.Hex : s
Binder : Int.Hex(123)
Reducer: "0000007B"
###
> 123i2.Hex
123.Hex : s
Binder : Int.Hex(123)
Reducer: "007B"
###
> 123i1.Hex
123.Hex : s
Binder : Int.Hex(123)
Reducer: "7B"
###
> 123u8.Hex
123.Hex : s
Binder : Int.Hex(123)
Reducer: "000000000000007B"
###
> 123u4.Hex
123.Hex : s
Binder : Int.Hex(123)
Reducer: "0000007B"
###
> 123u2.Hex
123.Hex : s
Binder : Int.Hex(123)
Reducer: "007B"
###
> 123u1.Hex
123.Hex : s
Binder : Int.Hex(123)
Reducer: "7B"
###
> true.Hex
true.Hex : s
Binder : Int.Hex(true)
Reducer: "1"
###
> false.Hex
false.Hex : s
Binder : Int.Hex(false)
Reducer: "0"
###
> (-123ia).Hex
(-123).Hex : s
Binder : Int.Hex(-123)
Reducer: "85"
###
> (-123i8).Hex
(-123).Hex : s
Binder : Int.Hex(-123)
Reducer: "FFFFFFFFFFFFFF85"
###
> (-123i4).Hex
(-123).Hex : s
Binder : Int.Hex(-123)
Reducer: "FFFFFF85"
###
> (-123i2).Hex
(-123).Hex : s
Binder : Int.Hex(-123)
Reducer: "FF85"
###
> (-123i1).Hex
(-123).Hex : s
Binder : Int.Hex(-123)
Reducer: "85"
###
> 0x1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF.Hex
446371678903360124661747118626766461972311602250509962735.Hex : s
Binder : Int.Hex(446371678903360124661747118626766461972311602250509962735)
Reducer: "1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF"
###
> (-0x1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF).Hex
(-446371678903360124661747118626766461972311602250509962735).Hex : s
Binder : Int.Hex(-446371678903360124661747118626766461972311602250509962735)
Reducer: "EDCBA9876F543210EDCBA9876F543210EDCBA9876F543211"
###

**** New globals: {b:b*, d:d*, i:i*, i1:i1*, i2:i2*, i4:i4*, i8:i8*, n:r8*, qb:b?*, qd:d?*, qi:i?*, qi1:i1?*, qi2:i2?*, qi4:i4?*, qi8:i8?*, qn:r8?*, qr4:r4?*, qr8:r8?*, qu1:u1?*, qu2:u2?*, qu4:u4?*, qu8:u8?*, r4:r4*, r8:r8*, s:s*, u1:u1*, u2:u2*, u4:u4*, u8:u8*}

> Int.Hex(s)
Int.Hex(s) : s*
*** Error: (8,9) Node: s, Message: Invalid operand type: cannot convert type 's' to 'i8'
Binder : ForEach(*1: s, Int.Hex(Error(ErrBadType_Src_Dst)))
###
> Int.Hex(d)
Int.Hex(d) : s*
*** Error: (8,9) Node: d, Message: Invalid operand type: cannot convert type 'd' to 'i8'
Binder : ForEach(*1: d, Int.Hex(Error(ErrBadType_Src_Dst)))
###
> Int.Hex(r8)
Int.Hex(r8) : s*
*** Error: (8,10) Node: r8, Message: Invalid operand type: cannot convert type 'r8' to 'i8'
Binder : ForEach(*1: r8, Int.Hex(Error(ErrBadType_Src_Dst)))
###
> Int.Hex(r4)
Int.Hex(r4) : s*
*** Error: (8,10) Node: r4, Message: Invalid operand type: cannot convert type 'r4' to 'i8'
Binder : ForEach(*1: r4, Int.Hex(Error(ErrBadType_Src_Dst)))
###
> Int.Hex(i)
Int.Hex(i) : s*
Binder : ForEach(*1: i, Int.Hex(*1))
###
> Int.Hex(i8)
Int.Hex(i8) : s*
Binder : ForEach(*1: i8, Int.Hex(*1))
###
> Int.Hex(i4)
Int.Hex(i4) : s*
Binder : ForEach(*1: i4, Int.Hex(*1))
###
> Int.Hex(i2)
Int.Hex(i2) : s*
Binder : ForEach(*1: i2, Int.Hex(*1))
###
> Int.Hex(i1)
Int.Hex(i1) : s*
Binder : ForEach(*1: i1, Int.Hex(*1))
###
> Int.Hex(u8)
Int.Hex(u8) : s*
Binder : ForEach(*1: u8, Int.Hex(*1))
###
> Int.Hex(u4)
Int.Hex(u4) : s*
Binder : ForEach(*1: u4, Int.Hex(*1))
###
> Int.Hex(u2)
Int.Hex(u2) : s*
Binder : ForEach(*1: u2, Int.Hex(*1))
###
> Int.Hex(u1)
Int.Hex(u1) : s*
Binder : ForEach(*1: u1, Int.Hex(*1))
###
> Int.Hex(b)
Int.Hex(b) : s*
Binder : ForEach(*1: b, Int.Hex(*1))
###
> Int.Hex(qd)
Int.Hex(qd) : s*
*** Error: (8,10) Node: qd, Message: Invalid operand type: cannot convert type 'd' to 'i8'
Binder : ForEach(*1: qd, Guard(?2: *1, Int.Hex(Error(ErrBadType_Src_Dst))))
###
> Int.Hex(qr8)
Int.Hex(qr8) : s*
*** Error: (8,11) Node: qr8, Message: Invalid operand type: cannot convert type 'r8' to 'i8'
Binder : ForEach(*1: qr8, Guard(?2: *1, Int.Hex(Error(ErrBadType_Src_Dst))))
###
> Int.Hex(qr4)
Int.Hex(qr4) : s*
*** Error: (8,11) Node: qr4, Message: Invalid operand type: cannot convert type 'r4' to 'i8'
Binder : ForEach(*1: qr4, Guard(?2: *1, Int.Hex(Error(ErrBadType_Src_Dst))))
###
> Int.Hex(qi)
Int.Hex(qi) : s*
Binder : ForEach(*1: qi, Guard(?2: *1, Int.Hex(?2)))
###
> Int.Hex(qi8)
Int.Hex(qi8) : s*
Binder : ForEach(*1: qi8, Guard(?2: *1, Int.Hex(?2)))
###
> Int.Hex(qi4)
Int.Hex(qi4) : s*
Binder : ForEach(*1: qi4, Guard(?2: *1, Int.Hex(?2)))
###
> Int.Hex(qi2)
Int.Hex(qi2) : s*
Binder : ForEach(*1: qi2, Guard(?2: *1, Int.Hex(?2)))
###
> Int.Hex(qi1)
Int.Hex(qi1) : s*
Binder : ForEach(*1: qi1, Guard(?2: *1, Int.Hex(?2)))
###
> Int.Hex(qu8)
Int.Hex(qu8) : s*
Binder : ForEach(*1: qu8, Guard(?2: *1, Int.Hex(?2)))
###
> Int.Hex(qu4)
Int.Hex(qu4) : s*
Binder : ForEach(*1: qu4, Guard(?2: *1, Int.Hex(?2)))
###
> Int.Hex(qu2)
Int.Hex(qu2) : s*
Binder : ForEach(*1: qu2, Guard(?2: *1, Int.Hex(?2)))
###
> Int.Hex(qu1)
Int.Hex(qu1) : s*
Binder : ForEach(*1: qu1, Guard(?2: *1, Int.Hex(?2)))
###
> Int.Hex(qb)
Int.Hex(qb) : s*
Binder : ForEach(*1: qb, Guard(?2: *1, Int.Hex(?2)))
###
> i.Hex
i.Hex : s*
Binder : ForEach(*1: i, Int.Hex(*1))
###
> i8.Hex
i8.Hex : s*
Binder : ForEach(*1: i8, Int.Hex(*1))
###
> i4.Hex
i4.Hex : s*
Binder : ForEach(*1: i4, Int.Hex(*1))
###
> i2.Hex
i2.Hex : s*
Binder : ForEach(*1: i2, Int.Hex(*1))
###
> i1.Hex
i1.Hex : s*
Binder : ForEach(*1: i1, Int.Hex(*1))
###
> u8.Hex
u8.Hex : s*
Binder : ForEach(*1: u8, Int.Hex(*1))
###
> u4.Hex
u4.Hex : s*
Binder : ForEach(*1: u4, Int.Hex(*1))
###
> u2.Hex
u2.Hex : s*
Binder : ForEach(*1: u2, Int.Hex(*1))
###
> u1.Hex
u1.Hex : s*
Binder : ForEach(*1: u1, Int.Hex(*1))
###
> b.Hex
b.Hex : s*
Binder : ForEach(*1: b, Int.Hex(*1))
###
> qi.Hex
qi.Hex : s*
Binder : ForEach(*1: qi, Guard(?2: *1, Int.Hex(?2)))
###
> qi8.Hex
qi8.Hex : s*
Binder : ForEach(*1: qi8, Guard(?2: *1, Int.Hex(?2)))
###
> qi4.Hex
qi4.Hex : s*
Binder : ForEach(*1: qi4, Guard(?2: *1, Int.Hex(?2)))
###
> qi2.Hex
qi2.Hex : s*
Binder : ForEach(*1: qi2, Guard(?2: *1, Int.Hex(?2)))
###
> qi1.Hex
qi1.Hex : s*
Binder : ForEach(*1: qi1, Guard(?2: *1, Int.Hex(?2)))
###
> qu8.Hex
qu8.Hex : s*
Binder : ForEach(*1: qu8, Guard(?2: *1, Int.Hex(?2)))
###
> qu4.Hex
qu4.Hex : s*
Binder : ForEach(*1: qu4, Guard(?2: *1, Int.Hex(?2)))
###
> qu2.Hex
qu2.Hex : s*
Binder : ForEach(*1: qu2, Guard(?2: *1, Int.Hex(?2)))
###
> qu1.Hex
qu1.Hex : s*
Binder : ForEach(*1: qu1, Guard(?2: *1, Int.Hex(?2)))
###
> qb.Hex
qb.Hex : s*
Binder : ForEach(*1: qb, Guard(?2: *1, Int.Hex(?2)))
###
