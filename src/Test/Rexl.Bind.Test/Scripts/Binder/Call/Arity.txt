:: { T: { X: i4 }*, R: { X: i4 }, SI: i4*, SS: s* }

// Tests for bad arity recovery handling.

F()
F(true)
F(1, "hi")
F("hi", true, 3.5)

Abs(
Abs()
Abs(-7
Abs(-7)
Abs(-7,
Abs(-7, -3)
Abs(-7, -3,
Abs(-7, -3, 5
Abs(-7, -3, 5)

Div(
Div()
Div(17
Div(17)
Div(17,
Div(17, 3
Div(17, 3)
Div(17, 3,
Div(17, 3, 2
Div(17, 3, 2)

Map(
Map()
Map(SI
Map(SI)
Map(SI,
Map(SI, it + 1
Map(SI, it + 1)
Map(SI, it + 1,
Map(SI, it + 1, it + 2

SetFields(
SetFields(R
SetFields(T
SetFields(R)
SetFields(T)
SetFields(R,
SetFields(T,
SetFields(R, Y: X + 1
SetFields(T, Y: X + 1
SetFields(R, Y: X + 1)
SetFields(T, Y: X + 1)
SetFields(R, Y: X + 1,
SetFields(T, Y: X + 1,
SetFields(R,    X + 1,
SetFields(T,    X + 1,
SetFields(R,    X + 1,    X + 2
SetFields(T,    X + 1,    X + 2
SetFields(SI)
SetFields(SS)

GuardMap(
GuardMap(R
GuardMap(T
GuardMap(R)
GuardMap(T)
GuardMap(R,
GuardMap(T,
GuardMap(R, X + 1
GuardMap(T, X + 1
GuardMap(R, X + 1)
GuardMap(T, X + 1)
GuardMap(R, X + 1,
GuardMap(T, X + 1,
GuardMap(R, X + 1, X + Y
GuardMap(T, X + 1, X + Y
GuardMap(SI)
GuardMap(SS)
GuardMap(SS, "hi" & it, )
GuardMap(s: SS, "hi" & s, )

TakeIf(
TakeIf(R
TakeIf(T
TakeIf(T)
TakeIf(T,
TakeIf(T, X > 1
TakeIf(T, X > 1)
TakeIf(T, X > 1,
TakeIf(T, X > 1, X + Y
TakeIf(SI)
TakeIf(SS)
TakeIf(SS, it has "hi", )
TakeIf(s: SS, it has "hi", )

GroupBy(
GroupBy()
GroupBy(T
GroupBy(T)
GroupBy(T,
GroupBy(T, X
GroupBy(T, X)
