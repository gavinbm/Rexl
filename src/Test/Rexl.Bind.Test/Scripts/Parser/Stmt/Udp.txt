proc P(x) play { publish X := x; }
###
proc
###
proc P
###
proc P(
###
proc P(x
###
proc P(x)
###
proc P(x) play
###
proc P(x) play {
###
proc P(x) play { publish X := x;
###
proc P(x) as
###
proc P(x) as {
###
proc P(x) as { publish X := x;
###
proc P(x) as { publish X := x; }
###
proc P(x)
    prIme
###
proc P(x)
    prime {
###
proc P(x)
    prime { publish X := x;
###
proc P(x)
    prime { publish X := x; }
###
proc P(x)
    prime { publish X := x; }
    play
###
proc P(x)
    prime { publish X := x; }
    play {
###
proc P(x)
    prime { publish X := x; }
    play { publish Y := x * x;
###
proc P(x)
    prime { publish X := x; }
    play { publish Y := x * x; }
###
proc P(x)
    priMe { publish X := x; }
    play { publish Y := x * x; }
###
proc P(x)
    prime { publish X := x; }
    pLay { publish Y := x * x; }
###
proc P() play { publish X := 17; }
###
proc P(x, y) play {
    publish X := x;
    publish Y := y;
    primary Both := { X, Y };
}
###
proc P(x, x) play {
    publish X := x;
    publish Y := y;
    primary Both := { X, Y };
}
###
proc P(x) play { stream X := x; }
