N := 0;
S := 0;
while (N < 10) {
    S := S + N;
    N := N + 1;
}
X;
###
while (N < 10)
    N := N + 1;
X;
###
while (N < 10) N := N + 1 // Needs semi.
X;
###
while (N < 10) { N := N + 1 }
X;
###
while (N.I < 10)
    namespace N { I := I + 1; } // Needs semi.
X;
###
while (N.I < 10)
    namespace N { I := I + 1; };
X;
###
while (N < 10) {
    if (N mod 5 = 0) goto LBreak;
    N := N + 1;
}
LBreak:
X;
###
while N < 10 { N := N + 1; }
X;
###
While (N < 10) N := N + 1;
X;
